ec4 shadowVals_22;
  highp float tmpvar_23;
  tmpvar_23 = ((sqrt(
    dot (vec_21, vec_21)
  ) * _LightPositionRange.w) * 0.97);
  highp vec4 tmpvar_24;
  tmpvar_24 = texture (_ShadowMapTexture, (vec_21 + vec3(0.0078125, 0.0078125, 0.0078125)));
  shadowVals_22.x = tmpvar_24.x;
  highp vec4 tmpvar_25;
  tmpvar_25 = texture (_ShadowMapTexture, (vec_21 + vec3(-0.0078125, -0.0078125, 0.0078125)));
  shadowVals_22.y = tmpvar_25.x;
  highp vec4 tmpvar_26;
  tmpvar_26 = texture (_ShadowMapTexture, (vec_21 + vec3(-0.0078125, 0.0078125, -0.0078125)));
  shadowVals_22.z = tmpvar_26.x;
  highp vec4 tmpvar_27;
  tmpvar_27 = texture (_ShadowMapTexture, (vec_21 + vec3(0.0078125, -0.0078125, -0.0078125)));
  shadowVals_22.w = tmpvar_27.x;
  bvec4 tmpvar_28;
  tmpvar_28 = lessThan (shadowVals_22, vec4(tmpvar_23));
  mediump vec4 tmpvar_29;
  tmpvar_29 = _LightShadowData.xxxx;
  mediump float tmpvar_30;
  if (tmpvar_28.x) {
    tmpvar_30 = tmpvar_29.x;
  } else {
    tmpvar_30 = 1.0;
  };
  mediump float tmpvar_31;
  if (tmpvar_28.y) {
    tmpvar_31 = tmpvar_29.y;
  } else {
    tmpvar_31 = 1.0;
  };
  mediump float tmpvar_32;
  if (tmpvar_28.z) {
    tmpvar_32 = tmpvar_29.z;
  } else {
    tmpvar_32 = 1.0;
  };
  mediump float tmpvar_33;
  if (tmpvar_28.w) {
    tmpvar_33 = tmpvar_29.w;
  } else {
    tmpvar_33 = 1.0;
  };
  mediump vec4 tmpvar_34;
  tmpvar_34.x = tmpvar_30;
  tmpvar_34.y = tmpvar_31;
  tmpvar_34.z = tmpvar_32;
  tmpvar_34.w = tmpvar_33;
  mediump vec3 tmpvar_35;
  lowp vec3 tmpvar_36;
  tmpvar_36 = _LightColor0.xyz;
  tmpvar_35 = tmpvar_36;
  mediump vec3 tmpvar_37;
  tmpvar_37 = normalize(tmpvar_17);
  mediump vec3 tmpvar_38;
  tmpvar_38 = (tmpvar_35 * ((tmpvar_19.w * tmpvar_20.w) * dot (tmpvar_34, vec4(0.25, 0.25, 0.25, 0.25))));
  tmpvar_35 = tmpvar_38;
  mediump vec3 tmpvar_39;
  tmpvar_39 = normalize((tmpvar_37 - tmpvar_9));
  mediump float tmpvar_40;
  tmpvar_40 = max (0.0, dot (tmpvar_37, tmpvar_39));
  mediump float tmpvar_41;
  tmpvar_41 = (1.0 - sg_10.w);
  mediump float tmpvar_42;
  mediump float tmpvar_43;
  tmpvar_43 = (10.0 / log2((
    ((1.0 - tmpvar_41) * 0.968)
   + 0.03)));
  tmpvar_42 = (tmpvar_43 * tmpvar_43);
  mediump vec4 tmpvar_44;
  tmpvar_44.w = 1.0;
  tmpvar_44.xyz = (((tmpvar_16 + 
    ((((tmpvar_42 + 1.0) * pow (
      max (0.0, dot (tmpvar_8, tmpvar_39))
    , tmpvar_42)) / ((
      (unity_LightGammaCorrectionConsts.z * (((tmpvar_40 * tmpvar_40) * sg_10.w) + (tmpvar_41 * tmpvar_41)))
     * tmpvar_40) + 0.0001)) * sg_10.xyz)
  ) * tmpvar_38) * max (0.0, dot (tmpvar_8, tmpvar_37)));
  mediump vec4 xlat_varoutput_45;
  xlat_varoutput_45.xyz = tmpvar_44.xyz;
  xlat_varoutput_45.w = 1.0;
  _glesFragData[0] = xlat_varoutput_45;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "_NORMALMAP" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_11;
  tmpvar_11 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_12;
  texcoord_12.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_13;
  if ((_UVSec == 0.0)) {
    tmpvar_13 = tmpvar_2;
  } else {
    tmpvar_13 = tmpvar_3;
  };
  texcoord_12.zw = ((tmpvar_13 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_14;
  n_14 = (tmpvar_10.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_15;
  norm_15 = tmpvar_1;
  highp vec4 v_16;
  v_16.x = _World2Object[0].x;
  v_16.y = _World2Object[1].x;
  v_16.z = _World2Object[2].x;
  v_16.w = _World2Object[3].x;
  highp vec4 v_17;
  v_17.x = _World2Object[0].y;
  v_17.y = _World2Object[1].y;
  v_17.z = _World2Object[2].y;
  v_17.w = _World2Object[3].y;
  highp vec4 v_18;
  v_18.x = _World2Object[0].z;
  v_18.y = _World2Object[1].z;
  v_18.z = _World2Object[2].z;
  v_18.w = _World2Object[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(((
    (v_16.xyz * norm_15.x)
   + 
    (v_17.xyz * norm_15.y)
  ) + (v_18.xyz * norm_15.z)));
  highp vec3 dir_20;
  dir_20 = tmpvar_4.xyz;
  highp mat3 tmpvar_21;
  tmpvar_21[0] = _Object2World[0].xyz;
  tmpvar_21[1] = _Object2World[1].xyz;
  tmpvar_21[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = normalize((tmpvar_21 * dir_20));
  tmpvar_22.w = tmpvar_4.w;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.www;
  mediump vec3 normal_24;
  normal_24 = tmpvar_19;
  mediump vec3 tangent_25;
  tangent_25 = tmpvar_22.xyz;
  mediump vec3 flip_26;
  flip_26 = tmpvar_23;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (((normal_24.yzx * tangent_25.zxy) - (normal_24.zxy * tangent_25.yzx)) * flip_26);
  mediump mat3 tmpvar_28;
  tmpvar_28[0].x = tangent_25.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = normal_24.x;
  tmpvar_28[1].x = tangent_25.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = normal_24.y;
  tmpvar_28[2].x = tangent_25.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = normal_24.z;
  tangentToWorld_5 = tmpvar_28;
  highp vec3 v_29;
  v_29.x = tangentToWorld_5[0].x;
  v_29.y = tangentToWorld_5[1].x;
  v_29.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].y;
  v_30.y = tangentToWorld_5[1].y;
  v_30.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].z;
  v_31.y = tangentToWorld_5[1].z;
  v_31.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_31;
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_9 = tmpvar_32;
  highp vec3 tmpvar_33;
  tmpvar_33 = (_WorldSpaceLightPos0.xyz - (tmpvar_10.xyz * _WorldSpaceLightPos0.w));
  highp float tmpvar_34;
  tmpvar_34 = tmpvar_33.x;
  tmpvar_6.w = tmpvar_34;
  highp float tmpvar_35;
  tmpvar_35 = tmpvar_33.y;
  tmpvar_7.w = tmpvar_35;
  highp float tmpvar_36;
  tmpvar_36 = tmpvar_33.z;
  tmpvar_8.w = tmpvar_36;
  gl_Position = tmpvar_11;
  xlv_TEXCOORD0 = texcoord_12;
  xlv_TEXCOORD1 = n_14;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 unity_ColorSpaceDouble;
uniform lowp vec4 _LightColor0;
uniform mediump vec4 unity_LightGammaCorrectionConsts;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _DetailAlbedoMap;
uniform sampler2D _BumpMap;
uniform sampler2D _DetailMask;
uniform sampler2D _SpecGlossMap;
uniform lowp sampler2DShadow _ShadowMapTexture;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  tmpvar_1 = xlv_TEXCOORD2.xyz;
  tmpvar_2 = xlv_TEXCOORD2_1.xyz;
  tmpvar_3 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_4;
  tmpvar_4[0].x = tmpvar_1.x;
  tmpvar_4[0].y = tmpvar_2.x;
  tmpvar_4[0].z = tmpvar_3.x;
  tmpvar_4[1].x = tmpvar_1.y;
  tmpvar_4[1].y = tmpvar_2.y;
  tmpvar_4[1].z = tmpvar_3.y;
  tmpvar_4[2].x = tmpvar_1.z;
  tmpvar_4[2].y = tmpvar_2.z;
  tmpvar_4[2].z = tmpvar_3.z;
  lowp vec4 cse_5;
  cse_5 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_7;
  packednormal_7 = tmpvar_6;
  mediump vec3 tmpvar_8;
  tmpvar_8 = normalize(((
    (packednormal_7.xyz * 2.0)
   - 1.0) * tmpvar_4));
  mediump vec4 sg_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_9 = tmpvar_10;
  mediump vec3 detailAlbedo_11;
  mediump float tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture (_DetailMask, xlv_TEXCOORD0.xy);
  tmpvar_12 = tmpvar_13.w;
  lowp vec3 tmpvar_14;
  tmpvar_14 = texture (_DetailAlbedoMap, xlv_TEXCOORD0.zw).xyz;
  detailAlbedo_11 = tmpvar_14;
  mediump vec3 tmpvar_15;
  tmpvar_15.x = xlv_TEXCOORD2.w;
  tmpvar_15.y = xlv_TEXCOORD2_1.w;
  tmpvar_15.z = xlv_TEXCOORD2_2.w;
  lowp float shadow_16;
  mediump float tmpvar_17;
  tmpvar_17 = texture (_ShadowMapTexture, xlv_TEXCOORD5.xyz);
  lowp float tmpvar_18;
  tmpvar_18 = tmpvar_17;
  mediump float tmpvar_19;
  tmpvar_19 = (_LightShadowData.x + (tmpvar_18 * (1.0 - _LightShadowData.x)));
  shadow_16 = tmpvar_19;
  mediump float atten_20;
  atten_20 = shadow_16;
  mediump vec3 tmpvar_21;
  lowp vec3 tmpvar_22;
  tmpvar_22 = _LightColor0.xyz;
  tmpvar_21 = tmpvar_22;
  mediump vec3 tmpvar_23;
  tmpvar_23 = (tmpvar_21 * atten_20);
  tmpvar_21 = tmpvar_23;
  mediump vec3 tmpvar_24;
  tmpvar_24 = normalize((tmpvar_15 - normalize(xlv_TEXCOORD1)));
  mediump float tmpvar_25;
  tmpvar_25 = max (0.0, dot (tmpvar_15, tmpvar_24));
  mediump float tmpvar_26;
  tmpvar_26 = (1.0 - sg_9.w);
  mediump float tmpvar_27;
  mediump float tmpvar_28;
  tmpvar_28 = (10.0 / log2((
    ((1.0 - tmpvar_26) * 0.968)
   + 0.03)));
  tmpvar_27 = (tmpvar_28 * tmpvar_28);
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = (((
    (((_Color.xyz * cse_5.xyz) * (vec3((1.0 - tmpvar_12)) + (
      (detailAlbedo_11 * unity_ColorSpaceDouble.xyz)
     * tmpvar_12))) * (1.0 - max (max (sg_9.x, sg_9.y), sg_9.z)))
   + 
    ((((tmpvar_27 + 1.0) * pow (
      max (0.0, dot (tmpvar_8, tmpvar_24))
    , tmpvar_27)) / ((
      (unity_LightGammaCorrectionConsts.z * (((tmpvar_25 * tmpvar_25) * sg_9.w) + (tmpvar_26 * tmpvar_26)))
     * tmpvar_25) + 0.0001)) * sg_9.xyz)
  ) * tmpvar_23) * max (0.0, dot (tmpvar_8, tmpvar_15)));
  mediump vec4 xlat_varoutput_30;
  xlat_varoutput_30.xyz = tmpvar_29.xyz;
  xlat_varoutput_30.w = 1.0;
  _glesFragData[0] = xlat_varoutput_30;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "_NORMALMAP" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
uniform mediump mat4 _LightMatrix0;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec2 xlv_TEXCOORD5;
out mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec2 tmpvar_9;
  mediump vec4 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_5 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].x;
  v_30.y = tangentToWorld_5[1].x;
  v_30.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].y;
  v_31.y = tangentToWorld_5[1].y;
  v_31.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_5[0].z;
  v_32.y = tangentToWorld_5[1].z;
  v_32.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_32;
  highp vec2 tmpvar_33;
  highp vec4 cse_34;
  cse_34 = (_Object2World * _glesVertex);
  tmpvar_33 = (_LightMatrix0 * cse_34).xy;
  tmpvar_9 = tmpvar_33;
  highp vec4 tmpvar_35;
  tmpvar_35 = (unity_World2Shadow[0] * cse_34);
  tmpvar_10 = tmpvar_35;
  highp vec3 tmpvar_36;
  tmpvar_36 = (_WorldSpaceLightPos0.xyz - (tmpvar_11.xyz * _WorldSpaceLightPos0.w));
  highp float tmpvar_37;
  tmpvar_37 = tmpvar_36.x;
  tmpvar_6.w = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = tmpvar_36.y;
  tmpvar_7.w = tmpvar_38;
  highp float tmpvar_39;
  tmpvar_39 = tmpvar_36.z;
  tmpvar_8.w = tmpvar_39;
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = n_15;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 unity_ColorSpaceDouble;
uniform lowp vec4 _LightColor0;
uniform mediump vec4 unity_LightGammaCorrectionConsts;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _DetailAlbedoMap;
uniform sampler2D _BumpMap;
uniform sampler2D _DetailMask;
uniform sampler2D _SpecGlossMap;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _LightTexture0;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec2 xlv_TEXCOORD5;
in mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  tmpvar_1 = xlv_TEXCOORD2.xyz;
  tmpvar_2 = xlv_TEXCOORD2_1.xyz;
  tmpvar_3 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_4;
  tmpvar_4[0].x = tmpvar_1.x;
  tmpvar_4[0].y = tmpvar_2.x;
  tmpvar_4[0].z = tmpvar_3.x;
  tmpvar_4[1].x = tmpvar_1.y;
  tmpvar_4[1].y = tmpvar_2.y;
  tmpvar_4[1].z = tmpvar_3.y;
  tmpvar_4[2].x = tmpvar_1.z;
  tmpvar_4[2].y = tmpvar_2.z;
  tmpvar_4[2].z = tmpvar_3.z;
  lowp vec4 cse_5;
  cse_5 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_7;
  packednormal_7 = tmpvar_6;
  mediump vec3 tmpvar_8;
  tmpvar_8 = normalize(((
    (packednormal_7.xyz * 2.0)
   - 1.0) * tmpvar_4));
  mediump vec4 sg_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_9 = tmpvar_10;
  mediump vec3 detailAlbedo_11;
  mediump float tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture (_DetailMask, xlv_TEXCOORD0.xy);
  tmpvar_12 = tmpvar_13.w;
  lowp vec3 tmpvar_14;
  tmpvar_14 = texture (_DetailAlbedoMap, xlv_TEXCOORD0.zw).xyz;
  detailAlbedo_11 = tmpvar_14;
  mediump vec3 tmpvar_15;
  tmpvar_15.x = xlv_TEXCOORD2.w;
  tmpvar_15.y = xlv_TEXCOORD2_1.w;
  tmpvar_15.z = xlv_TEXCOORD2_2.w;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture (_LightTexture0, xlv_TEXCOORD5);
  lowp float shadow_17;
  mediump float tmpvar_18;
  tmpvar_18 = texture (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  lowp float tmpvar_19;
  tmpvar_19 = tmpvar_18;
  mediump float tmpvar_20;
  tmpvar_20 = (_LightShadowData.x + (tmpvar_19 * (1.0 - _LightShadowData.x)));
  shadow_17 = tmpvar_20;
  mediump float atten_21;
  atten_21 = (tmpvar_16.w * shadow_17);
  mediump vec3 tmpvar_22;
  lowp vec3 tmpvar_23;
  tmpvar_23 = _LightColor0.xyz;
  tmpvar_22 = tmpvar_23;
  mediump vec3 tmpvar_24;
  tmpvar_24 = (tmpvar_22 * atten_21);
  tmpvar_22 = tmpvar_24;
  mediump vec3 tmpvar_25;
  tmpvar_25 = normalize((tmpvar_15 - normalize(xlv_TEXCOORD1)));
  mediump float tmpvar_26;
  tmpvar_26 = max (0.0, dot (tmpvar_15, tmpvar_25));
  mediump float tmpvar_27;
  tmpvar_27 = (1.0 - sg_9.w);
  mediump float tmpvar_28;
  mediump float tmpvar_29;
  tmpvar_29 = (10.0 / log2((
    ((1.0 - tmpvar_27) * 0.968)
   + 0.03)));
  tmpvar_28 = (tmpvar_29 * tmpvar_29);
  mediump vec4 tmpvar_30;
  tmpvar_30.w = 1.0;
  tmpvar_30.xyz = (((
    (((_Color.xyz * cse_5.xyz) * (vec3((1.0 - tmpvar_12)) + (
      (detailAlbedo_11 * unity_ColorSpaceDouble.xyz)
     * tmpvar_12))) * (1.0 - max (max (sg_9.x, sg_9.y), sg_9.z)))
   + 
    ((((tmpvar_28 + 1.0) * pow (
      max (0.0, dot (tmpvar_8, tmpvar_25))
    , tmpvar_28)) / ((
      (unity_LightGammaCorrectionConsts.z * (((tmpvar_26 * tmpvar_26) * sg_9.w) + (tmpvar_27 * tmpvar_27)))
     * tmpvar_26) + 0.0001)) * sg_9.xyz)
  ) * tmpvar_24) * max (0.0, dot (tmpvar_8, tmpvar_15)));
  mediump vec4 xlat_varoutput_31;
  xlat_varoutput_31.xyz = tmpvar_30.xyz;
  xlat_varoutput_31.w = 1.0;
  _glesFragData[0] = xlat_varoutput_31;
}



#endif"
}
}
Program "fp" {
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_OFF" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_OFF" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_CUBE" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "SHADOWS_NATIVE" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_OFF" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_OFF" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_CUBE" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_OFF" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_OFF" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_CUBE" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_OFF" "_NORMALMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "_NORMALMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_OFF" "_NORMALMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" "_NORMALMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" "_NORMALMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" "_NORMALMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_CUBE" "_NORMALMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_NORMALMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" "_NORMALMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_NORMALMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_NORMALMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "_NORMALMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "_NORMALMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_OFF" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_OFF" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_CUBE" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_OFF" "_NORMALMAP" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "_NORMALMAP" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_OFF" "_NORMALMAP" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" "_NORMALMAP" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" "_NORMALMAP" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" "_NORMALMAP" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_CUBE" "_NORMALMAP" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_NORMALMAP" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_NATIVE" "_NORMALMAP" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "_NORMALMAP" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "_NORMALMAP" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "_NORMALMAP" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "_NORMALMAP" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3"
}
}
 }
 Pass {
  Name "SHADOWCASTER"
  Tags { "LIGHTMODE"="SHADOWCASTER" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  GpuProgramID 154673
Program "vp" {
SubProgram "gles3 " {
Keywords { "SHADOWS_DEPTH" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_LightShadowBias;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp mat4 unity_MatrixVP;
void main ()
{
  highp vec3 vertex_1;
  vertex_1 = _glesVertex.xyz;
  highp vec4 clipPos_2;
  if ((unity_LightShadowBias.z != 0.0)) {
    highp vec4 tmpvar_3;
    tmpvar_3.w = 1.0;
    tmpvar_3.xyz = vertex_1;
    highp vec3 tmpvar_4;
    tmpvar_4 = (_Object2World * tmpvar_3).xyz;
    highp vec4 v_5;
    v_5.x = _World2Object[0].x;
    v_5.y = _World2Object[1].x;
    v_5.z = _World2Object[2].x;
    v_5.w = _World2Object[3].x;
    highp vec4 v_6;
    v_6.x = _World2Object[0].y;
    v_6.y = _World2Object[1].y;
    v_6.z = _World2Object[2].y;
    v_6.w = _World2Object[3].y;
    highp vec4 v_7;
    v_7.x = _World2Object[0].z;
    v_7.y = _World2Object[1].z;
    v_7.z = _World2Object[2].z;
    v_7.w = _World2Object[3].z;
    highp vec3 tmpvar_8;
    tmpvar_8 = normalize(((
      (v_5.xyz * _glesNormal.x)
     + 
      (v_6.xyz * _glesNormal.y)
    ) + (v_7.xyz * _glesNormal.z)));
    highp float tmpvar_9;
    tmpvar_9 = dot (tmpvar_8, normalize((_WorldSpaceLightPos0.xyz - 
      (tmpvar_4 * _WorldSpaceLightPos0.w)
    )));
    highp vec4 tmpvar_10;
    tmpvar_10.w = 1.0;
    tmpvar_10.xyz = (tmpvar_4 - (tmpvar_8 * (unity_LightShadowBias.z * 
      sqrt((1.0 - (tmpvar_9 * tmpvar_9)))
    )));
    clipPos_2 = (unity_MatrixVP * tmpvar_10);
  } else {
    highp vec4 tmpvar_11;
    tmpvar_11.w = 1.0;
    tmpvar_11.xyz = vertex_1;
    clipPos_2 = (glstate_matrix_mvp * tmpvar_11);
  };
  highp vec4 clipPos_12;
  clipPos_12.xyw = clipPos_2.xyw;
  clipPos_12.z = (clipPos_2.z + clamp ((unity_LightShadowBias.x / clipPos_2.w), 0.0, 1.0));
  clipPos_12.z = mix (clipPos_12.z, max (clipPos_12.z, -(clipPos_2.w)), unity_LightShadowBias.y);
  gl_Position = clipPos_12;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
void main ()
{
  _glesFragData[0] = vec4(0.0, 0.0, 0.0, 0.0);
}



#endif"
}
SubProgram "gles3 " {
Keywords { "SHADOWS_CUBE" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
uniform highp vec4 _LightPositionRange;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
out highp vec3 xlv_TEXCOORD0;
void main ()
{
  xlv_TEXCOORD0 = ((_Object2World * _glesVertex).xyz - _LightPositionRange.xyz);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform highp vec4 _LightPositionRange;
in highp vec3 xlv_TEXCOORD0;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2 = vec4((sqrt(dot (xlv_TEXCOORD0, xlv_TEXCOORD0)) * _LightPositionRange.w));
  tmpvar_1 = tmpvar_2;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
}
Program "fp" {
SubProgram "gles3 " {
Keywords { "SHADOWS_DEPTH" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "SHADOWS_CUBE" }
"!!GLES3"
}
}
 }
 Pass {
  Name "DEFERRED"
  Tags { "LIGHTMODE"="Deferred" "RenderType"="Opaque" "PerformanceChecks"="False" }
  GpuProgramID 205841
Program "vp" {
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_10;
  texcoord_10.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_2;
  } else {
    tmpvar_11 = tmpvar_3;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_13;
  norm_13 = tmpvar_1;
  highp vec4 v_14;
  v_14.x = _World2Object[0].x;
  v_14.y = _World2Object[1].x;
  v_14.z = _World2Object[2].x;
  v_14.w = _World2Object[3].x;
  highp vec4 v_15;
  v_15.x = _World2Object[0].y;
  v_15.y = _World2Object[1].y;
  v_15.z = _World2Object[2].y;
  v_15.w = _World2Object[3].y;
  highp vec4 v_16;
  v_16.x = _World2Object[0].z;
  v_16.y = _World2Object[1].z;
  v_16.z = _World2Object[2].z;
  v_16.w = _World2Object[3].z;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize(((
    (v_14.xyz * norm_13.x)
   + 
    (v_15.xyz * norm_13.y)
  ) + (v_16.xyz * norm_13.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = tmpvar_17;
  mediump vec4 normal_19;
  normal_19 = tmpvar_18;
  mediump vec3 x2_20;
  mediump vec4 tmpvar_21;
  tmpvar_21 = (normal_19.xyzz * normal_19.yzzx);
  x2_20.x = dot (unity_SHBr, tmpvar_21);
  x2_20.y = dot (unity_SHBg, tmpvar_21);
  x2_20.z = dot (unity_SHBb, tmpvar_21);
  tmpvar_7.xyz = (x2_20 + (unity_SHC.xyz * (
    (normal_19.x * normal_19.x)
   - 
    (normal_19.y * normal_19.y)
  )));
  gl_Position = tmpvar_9;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = n_12;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _SpecColor;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform mediump float _OcclusionStrength;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD1);
  mediump vec4 tmpvar_4;
  tmpvar_4.xyz = _SpecColor.xyz;
  tmpvar_4.w = _Glossiness;
  mediump vec3 tmpvar_5;
  mediump float tmpvar_6;
  tmpvar_6 = (1.0 - max (max (tmpvar_4.x, tmpvar_4.y), tmpvar_4.z));
  tmpvar_5 = ((_Color.xyz * cse_2.xyz) * tmpvar_6);
  mediump float occ_7;
  lowp float tmpvar_8;
  tmpvar_8 = texture (_OcclusionMap, xlv_TEXCOORD0.xy).y;
  occ_7 = tmpvar_8;
  mediump float tmpvar_9;
  tmpvar_9 = ((1.0 - _OcclusionStrength) + (occ_7 * _OcclusionStrength));
  highp vec3 tmpvar_10;
  highp vec4 tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = -(tmpvar_3);
  tmpvar_10 = tmpvar_12;
  tmpvar_11 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_13;
  mediump vec3 tmpvar_14;
  mediump vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1;
  mediump vec3 x1_16;
  x1_16.x = dot (unity_SHAr, tmpvar_15);
  x1_16.y = dot (unity_SHAg, tmpvar_15);
  x1_16.z = dot (unity_SHAb, tmpvar_15);
  tmpvar_13 = (xlv_TEXCOORD5.xyz + x1_16);
  tmpvar_13 = (tmpvar_13 * tmpvar_9);
  mediump vec3 worldNormal_17;
  highp vec3 tmpvar_18;
  highp vec3 I_19;
  I_19 = -(tmpvar_10);
  tmpvar_18 = (I_19 - (2.0 * (
    dot (tmpvar_1, I_19)
   * tmpvar_1)));
  worldNormal_17 = tmpvar_18;
  mediump vec4 hdr_20;
  hdr_20 = tmpvar_11;
  highp float mip_21;
  mediump float tmpvar_22;
  tmpvar_22 = (pow ((1.0 - _Glossiness), 0.75) * 7.0);
  mip_21 = tmpvar_22;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = worldNormal_17;
  tmpvar_23.w = mip_21;
  lowp vec4 tmpvar_24;
  tmpvar_24 = textureLod (unity_SpecCube0, tmpvar_23.xyz, mip_21);
  mediump vec4 tmpvar_25;
  tmpvar_25 = tmpvar_24;
  tmpvar_14 = ((hdr_20.x * tmpvar_25.w) * tmpvar_25.xyz);
  tmpvar_14 = (tmpvar_14 * tmpvar_9);
  mediump float x_26;
  x_26 = (1.0 - max (0.0, dot (tmpvar_1, 
    -(tmpvar_3)
  )));
  mediump vec4 tmpvar_27;
  tmpvar_27.w = 1.0;
  tmpvar_27.xyz = ((tmpvar_13 * tmpvar_5) + (tmpvar_14 * mix (tmpvar_4.xyz, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_6)), 0.0, 1.0)
  ), vec3(
    (((x_26 * x_26) * x_26) * x_26)
  ))));
  mediump vec4 tmpvar_28;
  tmpvar_28.xyz = tmpvar_5;
  tmpvar_28.w = tmpvar_9;
  mediump vec4 tmpvar_29;
  tmpvar_29.xyz = tmpvar_4.xyz;
  tmpvar_29.w = tmpvar_4.w;
  mediump vec4 tmpvar_30;
  tmpvar_30.w = 1.0;
  tmpvar_30.xyz = ((tmpvar_1 * 0.5) + 0.5);
  mediump vec4 tmpvar_31;
  tmpvar_31.w = 1.0;
  tmpvar_31.xyz = exp2(-(tmpvar_27.xyz));
  _glesFragData[0] = tmpvar_28;
  _glesFragData[1] = tmpvar_29;
  _glesFragData[2] = tmpvar_30;
  _glesFragData[3] = tmpvar_31;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_SPECGLOSSMAP" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_10;
  texcoord_10.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_2;
  } else {
    tmpvar_11 = tmpvar_3;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_13;
  norm_13 = tmpvar_1;
  highp vec4 v_14;
  v_14.x = _World2Object[0].x;
  v_14.y = _World2Object[1].x;
  v_14.z = _World2Object[2].x;
  v_14.w = _World2Object[3].x;
  highp vec4 v_15;
  v_15.x = _World2Object[0].y;
  v_15.y = _World2Object[1].y;
  v_15.z = _World2Object[2].y;
  v_15.w = _World2Object[3].y;
  highp vec4 v_16;
  v_16.x = _World2Object[0].z;
  v_16.y = _World2Object[1].z;
  v_16.z = _World2Object[2].z;
  v_16.w = _World2Object[3].z;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize(((
    (v_14.xyz * norm_13.x)
   + 
    (v_15.xyz * norm_13.y)
  ) + (v_16.xyz * norm_13.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = tmpvar_17;
  mediump vec4 normal_19;
  normal_19 = tmpvar_18;
  mediump vec3 x2_20;
  mediump vec4 tmpvar_21;
  tmpvar_21 = (normal_19.xyzz * normal_19.yzzx);
  x2_20.x = dot (unity_SHBr, tmpvar_21);
  x2_20.y = dot (unity_SHBg, tmpvar_21);
  x2_20.z = dot (unity_SHBb, tmpvar_21);
  tmpvar_7.xyz = (x2_20 + (unity_SHC.xyz * (
    (normal_19.x * normal_19.x)
   - 
    (normal_19.y * normal_19.y)
  )));
  gl_Position = tmpvar_9;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = n_12;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform mediump float _OcclusionStrength;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD1);
  mediump vec4 sg_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_4 = tmpvar_5;
  mediump vec3 tmpvar_6;
  mediump float tmpvar_7;
  tmpvar_7 = (1.0 - max (max (sg_4.x, sg_4.y), sg_4.z));
  tmpvar_6 = ((_Color.xyz * cse_2.xyz) * tmpvar_7);
  mediump float occ_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture (_OcclusionMap, xlv_TEXCOORD0.xy).y;
  occ_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = ((1.0 - _OcclusionStrength) + (occ_8 * _OcclusionStrength));
  highp vec3 tmpvar_11;
  highp vec4 tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = -(tmpvar_3);
  tmpvar_11 = tmpvar_13;
  tmpvar_12 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_14;
  mediump vec3 tmpvar_15;
  mediump vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = tmpvar_1;
  mediump vec3 x1_17;
  x1_17.x = dot (unity_SHAr, tmpvar_16);
  x1_17.y = dot (unity_SHAg, tmpvar_16);
  x1_17.z = dot (unity_SHAb, tmpvar_16);
  tmpvar_14 = (xlv_TEXCOORD5.xyz + x1_17);
  tmpvar_14 = (tmpvar_14 * tmpvar_10);
  mediump vec3 worldNormal_18;
  highp vec3 tmpvar_19;
  highp vec3 I_20;
  I_20 = -(tmpvar_11);
  tmpvar_19 = (I_20 - (2.0 * (
    dot (tmpvar_1, I_20)
   * tmpvar_1)));
  worldNormal_18 = tmpvar_19;
  mediump vec4 hdr_21;
  hdr_21 = tmpvar_12;
  highp float mip_22;
  mediump float tmpvar_23;
  tmpvar_23 = (pow ((1.0 - sg_4.w), 0.75) * 7.0);
  mip_22 = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24.xyz = worldNormal_18;
  tmpvar_24.w = mip_22;
  lowp vec4 tmpvar_25;
  tmpvar_25 = textureLod (unity_SpecCube0, tmpvar_24.xyz, mip_22);
  mediump vec4 tmpvar_26;
  tmpvar_26 = tmpvar_25;
  tmpvar_15 = ((hdr_21.x * tmpvar_26.w) * tmpvar_26.xyz);
  tmpvar_15 = (tmpvar_15 * tmpvar_10);
  mediump float x_27;
  x_27 = (1.0 - max (0.0, dot (tmpvar_1, 
    -(tmpvar_3)
  )));
  mediump vec4 tmpvar_28;
  tmpvar_28.w = 1.0;
  tmpvar_28.xyz = ((tmpvar_14 * tmpvar_6) + (tmpvar_15 * mix (sg_4.xyz, vec3(
    clamp ((sg_4.w + (1.0 - tmpvar_7)), 0.0, 1.0)
  ), vec3(
    (((x_27 * x_27) * x_27) * x_27)
  ))));
  mediump vec4 tmpvar_29;
  tmpvar_29.xyz = tmpvar_6;
  tmpvar_29.w = tmpvar_10;
  mediump vec4 tmpvar_30;
  tmpvar_30.xyz = sg_4.xyz;
  tmpvar_30.w = sg_4.w;
  mediump vec4 tmpvar_31;
  tmpvar_31.w = 1.0;
  tmpvar_31.xyz = ((tmpvar_1 * 0.5) + 0.5);
  mediump vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = exp2(-(tmpvar_28.xyz));
  _glesFragData[0] = tmpvar_29;
  _glesFragData[1] = tmpvar_30;
  _glesFragData[2] = tmpvar_31;
  _glesFragData[3] = tmpvar_32;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_10;
  texcoord_10.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_2;
  } else {
    tmpvar_11 = tmpvar_3;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_13;
  norm_13 = tmpvar_1;
  highp vec4 v_14;
  v_14.x = _World2Object[0].x;
  v_14.y = _World2Object[1].x;
  v_14.z = _World2Object[2].x;
  v_14.w = _World2Object[3].x;
  highp vec4 v_15;
  v_15.x = _World2Object[0].y;
  v_15.y = _World2Object[1].y;
  v_15.z = _World2Object[2].y;
  v_15.w = _World2Object[3].y;
  highp vec4 v_16;
  v_16.x = _World2Object[0].z;
  v_16.y = _World2Object[1].z;
  v_16.z = _World2Object[2].z;
  v_16.w = _World2Object[3].z;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize(((
    (v_14.xyz * norm_13.x)
   + 
    (v_15.xyz * norm_13.y)
  ) + (v_16.xyz * norm_13.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = tmpvar_17;
  mediump vec4 normal_19;
  normal_19 = tmpvar_18;
  mediump vec3 x2_20;
  mediump vec4 tmpvar_21;
  tmpvar_21 = (normal_19.xyzz * normal_19.yzzx);
  x2_20.x = dot (unity_SHBr, tmpvar_21);
  x2_20.y = dot (unity_SHBg, tmpvar_21);
  x2_20.z = dot (unity_SHBb, tmpvar_21);
  tmpvar_7.xyz = (x2_20 + (unity_SHC.xyz * (
    (normal_19.x * normal_19.x)
   - 
    (normal_19.y * normal_19.y)
  )));
  gl_Position = tmpvar_9;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = n_12;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 unity_ColorSpaceDouble;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _DetailAlbedoMap;
uniform sampler2D _DetailMask;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform mediump float _OcclusionStrength;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD1);
  mediump vec4 sg_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_4 = tmpvar_5;
  mediump vec3 detailAlbedo_6;
  mediump float tmpvar_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture (_DetailMask, xlv_TEXCOORD0.xy);
  tmpvar_7 = tmpvar_8.w;
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture (_DetailAlbedoMap, xlv_TEXCOORD0.zw).xyz;
  detailAlbedo_6 = tmpvar_9;
  mediump vec3 tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = (1.0 - max (max (sg_4.x, sg_4.y), sg_4.z));
  tmpvar_10 = (((_Color.xyz * cse_2.xyz) * (vec3(
    (1.0 - tmpvar_7)
  ) + 
    ((detailAlbedo_6 * unity_ColorSpaceDouble.xyz) * tmpvar_7)
  )) * tmpvar_11);
  mediump float occ_12;
  lowp float tmpvar_13;
  tmpvar_13 = texture (_OcclusionMap, xlv_TEXCOORD0.xy).y;
  occ_12 = tmpvar_13;
  mediump float tmpvar_14;
  tmpvar_14 = ((1.0 - _OcclusionStrength) + (occ_12 * _OcclusionStrength));
  highp vec3 tmpvar_15;
  highp vec4 tmpvar_16;
  mediump vec3 tmpvar_17;
  tmpvar_17 = -(tmpvar_3);
  tmpvar_15 = tmpvar_17;
  tmpvar_16 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_18;
  mediump vec3 tmpvar_19;
  mediump vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = tmpvar_1;
  mediump vec3 x1_21;
  x1_21.x = dot (unity_SHAr, tmpvar_20);
  x1_21.y = dot (unity_SHAg, tmpvar_20);
  x1_21.z = dot (unity_SHAb, tmpvar_20);
  tmpvar_18 = (xlv_TEXCOORD5.xyz + x1_21);
  tmpvar_18 = (tmpvar_18 * tmpvar_14);
  mediump vec3 worldNormal_22;
  highp vec3 tmpvar_23;
  highp vec3 I_24;
  I_24 = -(tmpvar_15);
  tmpvar_23 = (I_24 - (2.0 * (
    dot (tmpvar_1, I_24)
   * tmpvar_1)));
  worldNormal_22 = tmpvar_23;
  mediump vec4 hdr_25;
  hdr_25 = tmpvar_16;
  highp float mip_26;
  mediump float tmpvar_27;
  tmpvar_27 = (pow ((1.0 - sg_4.w), 0.75) * 7.0);
  mip_26 = tmpvar_27;
  highp vec4 tmpvar_28;
  tmpvar_28.xyz = worldNormal_22;
  tmpvar_28.w = mip_26;
  lowp vec4 tmpvar_29;
  tmpvar_29 = textureLod (unity_SpecCube0, tmpvar_28.xyz, mip_26);
  mediump vec4 tmpvar_30;
  tmpvar_30 = tmpvar_29;
  tmpvar_19 = ((hdr_25.x * tmpvar_30.w) * tmpvar_30.xyz);
  tmpvar_19 = (tmpvar_19 * tmpvar_14);
  mediump float x_31;
  x_31 = (1.0 - max (0.0, dot (tmpvar_1, 
    -(tmpvar_3)
  )));
  mediump vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = ((tmpvar_18 * tmpvar_10) + (tmpvar_19 * mix (sg_4.xyz, vec3(
    clamp ((sg_4.w + (1.0 - tmpvar_11)), 0.0, 1.0)
  ), vec3(
    (((x_31 * x_31) * x_31) * x_31)
  ))));
  mediump vec4 tmpvar_33;
  tmpvar_33.xyz = tmpvar_10;
  tmpvar_33.w = tmpvar_14;
  mediump vec4 tmpvar_34;
  tmpvar_34.xyz = sg_4.xyz;
  tmpvar_34.w = sg_4.w;
  mediump vec4 tmpvar_35;
  tmpvar_35.w = 1.0;
  tmpvar_35.xyz = ((tmpvar_1 * 0.5) + 0.5);
  mediump vec4 tmpvar_36;
  tmpvar_36.w = 1.0;
  tmpvar_36.xyz = exp2(-(tmpvar_32.xyz));
  _glesFragData[0] = tmpvar_33;
  _glesFragData[1] = tmpvar_34;
  _glesFragData[2] = tmpvar_35;
  _glesFragData[3] = tmpvar_36;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_SPECGLOSSMAP" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_10;
  texcoord_10.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_2;
  } else {
    tmpvar_11 = tmpvar_3;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_13;
  norm_13 = tmpvar_1;
  highp vec4 v_14;
  v_14.x = _World2Object[0].x;
  v_14.y = _World2Object[1].x;
  v_14.z = _World2Object[2].x;
  v_14.w = _World2Object[3].x;
  highp vec4 v_15;
  v_15.x = _World2Object[0].y;
  v_15.y = _World2Object[1].y;
  v_15.z = _World2Object[2].y;
  v_15.w = _World2Object[3].y;
  highp vec4 v_16;
  v_16.x = _World2Object[0].z;
  v_16.y = _World2Object[1].z;
  v_16.z = _World2Object[2].z;
  v_16.w = _World2Object[3].z;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize(((
    (v_14.xyz * norm_13.x)
   + 
    (v_15.xyz * norm_13.y)
  ) + (v_16.xyz * norm_13.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = tmpvar_17;
  mediump vec4 normal_19;
  normal_19 = tmpvar_18;
  mediump vec3 x2_20;
  mediump vec4 tmpvar_21;
  tmpvar_21 = (normal_19.xyzz * normal_19.yzzx);
  x2_20.x = dot (unity_SHBr, tmpvar_21);
  x2_20.y = dot (unity_SHBg, tmpvar_21);
  x2_20.z = dot (unity_SHBb, tmpvar_21);
  tmpvar_7.xyz = (x2_20 + (unity_SHC.xyz * (
    (normal_19.x * normal_19.x)
   - 
    (normal_19.y * normal_19.y)
  )));
  gl_Position = tmpvar_9;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = n_12;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform mediump float _OcclusionStrength;
uniform mediump vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD1);
  mediump vec4 sg_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_4 = tmpvar_5;
  mediump vec3 tmpvar_6;
  mediump float tmpvar_7;
  tmpvar_7 = (1.0 - max (max (sg_4.x, sg_4.y), sg_4.z));
  tmpvar_6 = ((_Color.xyz * cse_2.xyz) * tmpvar_7);
  mediump float occ_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture (_OcclusionMap, xlv_TEXCOORD0.xy).y;
  occ_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = ((1.0 - _OcclusionStrength) + (occ_8 * _OcclusionStrength));
  highp vec3 tmpvar_11;
  highp vec4 tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = -(tmpvar_3);
  tmpvar_11 = tmpvar_13;
  tmpvar_12 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_14;
  mediump vec3 tmpvar_15;
  mediump vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = tmpvar_1;
  mediump vec3 x1_17;
  x1_17.x = dot (unity_SHAr, tmpvar_16);
  x1_17.y = dot (unity_SHAg, tmpvar_16);
  x1_17.z = dot (unity_SHAb, tmpvar_16);
  tmpvar_14 = (xlv_TEXCOORD5.xyz + x1_17);
  tmpvar_14 = (tmpvar_14 * tmpvar_10);
  mediump vec3 worldNormal_18;
  highp vec3 tmpvar_19;
  highp vec3 I_20;
  I_20 = -(tmpvar_11);
  tmpvar_19 = (I_20 - (2.0 * (
    dot (tmpvar_1, I_20)
   * tmpvar_1)));
  worldNormal_18 = tmpvar_19;
  mediump vec4 hdr_21;
  hdr_21 = tmpvar_12;
  highp float mip_22;
  mediump float tmpvar_23;
  tmpvar_23 = (pow ((1.0 - sg_4.w), 0.75) * 7.0);
  mip_22 = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24.xyz = worldNormal_18;
  tmpvar_24.w = mip_22;
  lowp vec4 tmpvar_25;
  tmpvar_25 = textureLod (unity_SpecCube0, tmpvar_24.xyz, mip_22);
  mediump vec4 tmpvar_26;
  tmpvar_26 = tmpvar_25;
  tmpvar_15 = ((hdr_21.x * tmpvar_26.w) * tmpvar_26.xyz);
  tmpvar_15 = (tmpvar_15 * tmpvar_10);
  mediump float x_27;
  x_27 = (1.0 - max (0.0, dot (tmpvar_1, 
    -(tmpvar_3)
  )));
  mediump vec4 tmpvar_28;
  tmpvar_28.w = 1.0;
  tmpvar_28.xyz = ((tmpvar_14 * tmpvar_6) + (tmpvar_15 * mix (sg_4.xyz, vec3(
    clamp ((sg_4.w + (1.0 - tmpvar_7)), 0.0, 1.0)
  ), vec3(
    (((x_27 * x_27) * x_27) * x_27)
  ))));
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture (_EmissionMap, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_30;
  tmpvar_30.xyz = tmpvar_6;
  tmpvar_30.w = tmpvar_10;
  mediump vec4 tmpvar_31;
  tmpvar_31.xyz = sg_4.xyz;
  tmpvar_31.w = sg_4.w;
  mediump vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = ((tmpvar_1 * 0.5) + 0.5);
  mediump vec4 tmpvar_33;
  tmpvar_33.w = 1.0;
  tmpvar_33.xyz = exp2(-((tmpvar_28.xyz + 
    (tmpvar_29.xyz * _EmissionColor.xyz)
  )));
  _glesFragData[0] = tmpvar_30;
  _glesFragData[1] = tmpvar_31;
  _glesFragData[2] = tmpvar_32;
  _glesFragData[3] = tmpvar_33;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_11;
  tmpvar_11 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_12;
  texcoord_12.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_13;
  if ((_UVSec == 0.0)) {
    tmpvar_13 = tmpvar_2;
  } else {
    tmpvar_13 = tmpvar_3;
  };
  texcoord_12.zw = ((tmpvar_13 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_14;
  n_14 = (tmpvar_10.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_15;
  norm_15 = tmpvar_1;
  highp vec4 v_16;
  v_16.x = _World2Object[0].x;
  v_16.y = _World2Object[1].x;
  v_16.z = _World2Object[2].x;
  v_16.w = _World2Object[3].x;
  highp vec4 v_17;
  v_17.x = _World2Object[0].y;
  v_17.y = _World2Object[1].y;
  v_17.z = _World2Object[2].y;
  v_17.w = _World2Object[3].y;
  highp vec4 v_18;
  v_18.x = _World2Object[0].z;
  v_18.y = _World2Object[1].z;
  v_18.z = _World2Object[2].z;
  v_18.w = _World2Object[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(((
    (v_16.xyz * norm_15.x)
   + 
    (v_17.xyz * norm_15.y)
  ) + (v_18.xyz * norm_15.z)));
  highp vec3 dir_20;
  dir_20 = tmpvar_4.xyz;
  highp mat3 tmpvar_21;
  tmpvar_21[0] = _Object2World[0].xyz;
  tmpvar_21[1] = _Object2World[1].xyz;
  tmpvar_21[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = normalize((tmpvar_21 * dir_20));
  tmpvar_22.w = tmpvar_4.w;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.www;
  mediump vec3 normal_24;
  normal_24 = tmpvar_19;
  mediump vec3 tangent_25;
  tangent_25 = tmpvar_22.xyz;
  mediump vec3 flip_26;
  flip_26 = tmpvar_23;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (((normal_24.yzx * tangent_25.zxy) - (normal_24.zxy * tangent_25.yzx)) * flip_26);
  mediump mat3 tmpvar_28;
  tmpvar_28[0].x = tangent_25.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = normal_24.x;
  tmpvar_28[1].x = tangent_25.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = normal_24.y;
  tmpvar_28[2].x = tangent_25.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = normal_24.z;
  tangentToWorld_5 = tmpvar_28;
  highp vec3 v_29;
  v_29.x = tangentToWorld_5[0].x;
  v_29.y = tangentToWorld_5[1].x;
  v_29.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].y;
  v_30.y = tangentToWorld_5[1].y;
  v_30.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].z;
  v_31.y = tangentToWorld_5[1].z;
  v_31.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_31;
  highp vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = tmpvar_19;
  mediump vec4 normal_33;
  normal_33 = tmpvar_32;
  mediump vec3 x2_34;
  mediump vec4 tmpvar_35;
  tmpvar_35 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_35);
  x2_34.y = dot (unity_SHBg, tmpvar_35);
  x2_34.z = dot (unity_SHBb, tmpvar_35);
  tmpvar_9.xyz = (x2_34 + (unity_SHC.xyz * (
    (normal_33.x * normal_33.x)
   - 
    (normal_33.y * normal_33.y)
  )));
  gl_Position = tmpvar_11;
  xlv_TEXCOORD0 = texcoord_12;
  xlv_TEXCOORD1 = n_14;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _SpecColor;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform mediump float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform mediump float _OcclusionStrength;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  tmpvar_1 = xlv_TEXCOORD2.xyz;
  tmpvar_2 = xlv_TEXCOORD2_1.xyz;
  tmpvar_3 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_4;
  tmpvar_4[0].x = tmpvar_1.x;
  tmpvar_4[0].y = tmpvar_2.x;
  tmpvar_4[0].z = tmpvar_3.x;
  tmpvar_4[1].x = tmpvar_1.y;
  tmpvar_4[1].y = tmpvar_2.y;
  tmpvar_4[1].z = tmpvar_3.y;
  tmpvar_4[2].x = tmpvar_1.z;
  tmpvar_4[2].y = tmpvar_2.z;
  tmpvar_4[2].z = tmpvar_3.z;
  lowp vec4 cse_5;
  cse_5 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_7;
  packednormal_7 = tmpvar_6;
  mediump vec3 tmpvar_8;
  tmpvar_8 = normalize(((
    (packednormal_7.xyz * 2.0)
   - 1.0) * tmpvar_4));
  mediump vec3 tmpvar_9;
  tmpvar_9 = normalize(xlv_TEXCOORD1);
  mediump vec4 tmpvar_10;
  tmpvar_10.xyz = _SpecColor.xyz;
  tmpvar_10.w = _Glossiness;
  mediump vec3 tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = (1.0 - max (max (tmpvar_10.x, tmpvar_10.y), tmpvar_10.z));
  tmpvar_11 = ((_Color.xyz * cse_5.xyz) * tmpvar_12);
  mediump float occ_13;
  lowp float tmpvar_14;
  tmpvar_14 = texture (_OcclusionMap, xlv_TEXCOORD0.xy).y;
  occ_13 = tmpvar_14;
  mediump float tmpvar_15;
  tmpvar_15 = ((1.0 - _OcclusionStrength) + (occ_13 * _OcclusionStrength));
  highp vec3 tmpvar_16;
  highp vec4 tmpvar_17;
  mediump vec3 tmpvar_18;
  tmpvar_18 = -(tmpvar_9);
  tmpvar_16 = tmpvar_18;
  tmpvar_17 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_19;
  mediump vec3 tmpvar_20;
  mediump vec4 tmpvar_21;
  tmpvar_21.w = 1.0;
  tmpvar_21.xyz = tmpvar_8;
  mediump vec3 x1_22;
  x1_22.x = dot (unity_SHAr, tmpvar_21);
  x1_22.y = dot (unity_SHAg, tmpvar_21);
  x1_22.z = dot (unity_SHAb, tmpvar_21);
  tmpvar_19 = (xlv_TEXCOORD5.xyz + x1_22);
  tmpvar_19 = (tmpvar_19 * tmpvar_15);
  mediump vec3 worldNormal_23;
  highp vec3 tmpvar_24;
  highp vec3 I_25;
  I_25 = -(tmpvar_16);
  tmpvar_24 = (I_25 - (2.0 * (
    dot (tmpvar_8, I_25)
   * tmpvar_8)));
  worldNormal_23 = tmpvar_24;
  mediump vec4 hdr_26;
  hdr_26 = tmpvar_17;
  highp float mip_27;
  mediump float tmpvar_28;
  tmpvar_28 = (pow ((1.0 - _Glossiness), 0.75) * 7.0);
  mip_27 = tmpvar_28;
  highp vec4 tmpvar_29;
  tmpvar_29.xyz = worldNormal_23;
  tmpvar_29.w = mip_27;
  lowp vec4 tmpvar_30;
  tmpvar_30 = textureLod (unity_SpecCube0, tmpvar_29.xyz, mip_27);
  mediump vec4 tmpvar_31;
  tmpvar_31 = tmpvar_30;
  tmpvar_20 = ((hdr_26.x * tmpvar_31.w) * tmpvar_31.xyz);
  tmpvar_20 = (tmpvar_20 * tmpvar_15);
  mediump float x_32;
  x_32 = (1.0 - max (0.0, dot (tmpvar_8, 
    -(tmpvar_9)
  )));
  mediump vec4 tmpvar_33;
  tmpvar_33.w = 1.0;
  tmpvar_33.xyz = ((tmpvar_19 * tmpvar_11) + (tmpvar_20 * mix (tmpvar_10.xyz, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_12)), 0.0, 1.0)
  ), vec3(
    (((x_32 * x_32) * x_32) * x_32)
  ))));
  mediump vec4 tmpvar_34;
  tmpvar_34.xyz = tmpvar_11;
  tmpvar_34.w = tmpvar_15;
  mediump vec4 tmpvar_35;
  tmpvar_35.xyz = tmpvar_10.xyz;
  tmpvar_35.w = tmpvar_10.w;
  mediump vec4 tmpvar_36;
  tmpvar_36.w = 1.0;
  tmpvar_36.xyz = ((tmpvar_8 * 0.5) + 0.5);
  mediump vec4 tmpvar_37;
  tmpvar_37.w = 1.0;
  tmpvar_37.xyz = exp2(-(tmpvar_33.xyz));
  _glesFragData[0] = tmpvar_34;
  _glesFragData[1] = tmpvar_35;
  _glesFragData[2] = tmpvar_36;
  _glesFragData[3] = tmpvar_37;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_11;
  tmpvar_11 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_12;
  texcoord_12.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_13;
  if ((_UVSec == 0.0)) {
    tmpvar_13 = tmpvar_2;
  } else {
    tmpvar_13 = tmpvar_3;
  };
  texcoord_12.zw = ((tmpvar_13 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_14;
  n_14 = (tmpvar_10.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_15;
  norm_15 = tmpvar_1;
  highp vec4 v_16;
  v_16.x = _World2Object[0].x;
  v_16.y = _World2Object[1].x;
  v_16.z = _World2Object[2].x;
  v_16.w = _World2Object[3].x;
  highp vec4 v_17;
  v_17.x = _World2Object[0].y;
  v_17.y = _World2Object[1].y;
  v_17.z = _World2Object[2].y;
  v_17.w = _World2Object[3].y;
  highp vec4 v_18;
  v_18.x = _World2Object[0].z;
  v_18.y = _World2Object[1].z;
  v_18.z = _World2Object[2].z;
  v_18.w = _World2Object[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(((
    (v_16.xyz * norm_15.x)
   + 
    (v_17.xyz * norm_15.y)
  ) + (v_18.xyz * norm_15.z)));
  highp vec3 dir_20;
  dir_20 = tmpvar_4.xyz;
  highp mat3 tmpvar_21;
  tmpvar_21[0] = _Object2World[0].xyz;
  tmpvar_21[1] = _Object2World[1].xyz;
  tmpvar_21[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = normalize((tmpvar_21 * dir_20));
  tmpvar_22.w = tmpvar_4.w;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.www;
  mediump vec3 normal_24;
  normal_24 = tmpvar_19;
  mediump vec3 tangent_25;
  tangent_25 = tmpvar_22.xyz;
  mediump vec3 flip_26;
  flip_26 = tmpvar_23;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (((normal_24.yzx * tangent_25.zxy) - (normal_24.zxy * tangent_25.yzx)) * flip_26);
  mediump mat3 tmpvar_28;
  tmpvar_28[0].x = tangent_25.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = normal_24.x;
  tmpvar_28[1].x = tangent_25.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = normal_24.y;
  tmpvar_28[2].x = tangent_25.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = normal_24.z;
  tangentToWorld_5 = tmpvar_28;
  highp vec3 v_29;
  v_29.x = tangentToWorld_5[0].x;
  v_29.y = tangentToWorld_5[1].x;
  v_29.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].y;
  v_30.y = tangentToWorld_5[1].y;
  v_30.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].z;
  v_31.y = tangentToWorld_5[1].z;
  v_31.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_31;
  highp vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = tmpvar_19;
  mediump vec4 normal_33;
  normal_33 = tmpvar_32;
  mediump vec3 x2_34;
  mediump vec4 tmpvar_35;
  tmpvar_35 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_35);
  x2_34.y = dot (unity_SHBg, tmpvar_35);
  x2_34.z = dot (unity_SHBb, tmpvar_35);
  tmpvar_9.xyz = (x2_34 + (unity_SHC.xyz * (
    (normal_33.x * normal_33.x)
   - 
    (normal_33.y * normal_33.y)
  )));
  gl_Position = tmpvar_11;
  xlv_TEXCOORD0 = texcoord_12;
  xlv_TEXCOORD1 = n_14;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform mediump float _OcclusionStrength;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  tmpvar_1 = xlv_TEXCOORD2.xyz;
  tmpvar_2 = xlv_TEXCOORD2_1.xyz;
  tmpvar_3 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_4;
  tmpvar_4[0].x = tmpvar_1.x;
  tmpvar_4[0].y = tmpvar_2.x;
  tmpvar_4[0].z = tmpvar_3.x;
  tmpvar_4[1].x = tmpvar_1.y;
  tmpvar_4[1].y = tmpvar_2.y;
  tmpvar_4[1].z = tmpvar_3.y;
  tmpvar_4[2].x = tmpvar_1.z;
  tmpvar_4[2].y = tmpvar_2.z;
  tmpvar_4[2].z = tmpvar_3.z;
  lowp vec4 cse_5;
  cse_5 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_7;
  packednormal_7 = tmpvar_6;
  mediump vec3 tmpvar_8;
  tmpvar_8 = normalize(((
    (packednormal_7.xyz * 2.0)
   - 1.0) * tmpvar_4));
  mediump vec3 tmpvar_9;
  tmpvar_9 = normalize(xlv_TEXCOORD1);
  mediump vec4 sg_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_10 = tmpvar_11;
  mediump vec3 tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = (1.0 - max (max (sg_10.x, sg_10.y), sg_10.z));
  tmpvar_12 = ((_Color.xyz * cse_5.xyz) * tmpvar_13);
  mediump float occ_14;
  lowp float tmpvar_15;
  tmpvar_15 = texture (_OcclusionMap, xlv_TEXCOORD0.xy).y;
  occ_14 = tmpvar_15;
  mediump float tmpvar_16;
  tmpvar_16 = ((1.0 - _OcclusionStrength) + (occ_14 * _OcclusionStrength));
  highp vec3 tmpvar_17;
  highp vec4 tmpvar_18;
  mediump vec3 tmpvar_19;
  tmpvar_19 = -(tmpvar_9);
  tmpvar_17 = tmpvar_19;
  tmpvar_18 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_20;
  mediump vec3 tmpvar_21;
  mediump vec4 tmpvar_22;
  tmpvar_22.w = 1.0;
  tmpvar_22.xyz = tmpvar_8;
  mediump vec3 x1_23;
  x1_23.x = dot (unity_SHAr, tmpvar_22);
  x1_23.y = dot (unity_SHAg, tmpvar_22);
  x1_23.z = dot (unity_SHAb, tmpvar_22);
  tmpvar_20 = (xlv_TEXCOORD5.xyz + x1_23);
  tmpvar_20 = (tmpvar_20 * tmpvar_16);
  mediump vec3 worldNormal_24;
  highp vec3 tmpvar_25;
  highp vec3 I_26;
  I_26 = -(tmpvar_17);
  tmpvar_25 = (I_26 - (2.0 * (
    dot (tmpvar_8, I_26)
   * tmpvar_8)));
  worldNormal_24 = tmpvar_25;
  mediump vec4 hdr_27;
  hdr_27 = tmpvar_18;
  highp float mip_28;
  mediump float tmpvar_29;
  tmpvar_29 = (pow ((1.0 - sg_10.w), 0.75) * 7.0);
  mip_28 = tmpvar_29;
  highp vec4 tmpvar_30;
  tmpvar_30.xyz = worldNormal_24;
  tmpvar_30.w = mip_28;
  lowp vec4 tmpvar_31;
  tmpvar_31 = textureLod (unity_SpecCube0, tmpvar_30.xyz, mip_28);
  mediump vec4 tmpvar_32;
  tmpvar_32 = tmpvar_31;
  tmpvar_21 = ((hdr_27.x * tmpvar_32.w) * tmpvar_32.xyz);
  tmpvar_21 = (tmpvar_21 * tmpvar_16);
  mediump float x_33;
  x_33 = (1.0 - max (0.0, dot (tmpvar_8, 
    -(tmpvar_9)
  )));
  mediump vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = ((tmpvar_20 * tmpvar_12) + (tmpvar_21 * mix (sg_10.xyz, vec3(
    clamp ((sg_10.w + (1.0 - tmpvar_13)), 0.0, 1.0)
  ), vec3(
    (((x_33 * x_33) * x_33) * x_33)
  ))));
  mediump vec4 tmpvar_35;
  tmpvar_35.xyz = tmpvar_12;
  tmpvar_35.w = tmpvar_16;
  mediump vec4 tmpvar_36;
  tmpvar_36.xyz = sg_10.xyz;
  tmpvar_36.w = sg_10.w;
  mediump vec4 tmpvar_37;
  tmpvar_37.w = 1.0;
  tmpvar_37.xyz = ((tmpvar_8 * 0.5) + 0.5);
  mediump vec4 tmpvar_38;
  tmpvar_38.w = 1.0;
  tmpvar_38.xyz = exp2(-(tmpvar_34.xyz));
  _glesFragData[0] = tmpvar_35;
  _glesFragData[1] = tmpvar_36;
  _glesFragData[2] = tmpvar_37;
  _glesFragData[3] = tmpvar_38;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_11;
  tmpvar_11 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_12;
  texcoord_12.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_13;
  if ((_UVSec == 0.0)) {
    tmpvar_13 = tmpvar_2;
  } else {
    tmpvar_13 = tmpvar_3;
  };
  texcoord_12.zw = ((tmpvar_13 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_14;
  n_14 = (tmpvar_10.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_15;
  norm_15 = tmpvar_1;
  highp vec4 v_16;
  v_16.x = _World2Object[0].x;
  v_16.y = _World2Object[1].x;
  v_16.z = _World2Object[2].x;
  v_16.w = _World2Object[3].x;
  highp vec4 v_17;
  v_17.x = _World2Object[0].y;
  v_17.y = _World2Object[1].y;
  v_17.z = _World2Object[2].y;
  v_17.w = _World2Object[3].y;
  highp vec4 v_18;
  v_18.x = _World2Object[0].z;
  v_18.y = _World2Object[1].z;
  v_18.z = _World2Object[2].z;
  v_18.w = _World2Object[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(((
    (v_16.xyz * norm_15.x)
   + 
    (v_17.xyz * norm_15.y)
  ) + (v_18.xyz * norm_15.z)));
  highp vec3 dir_20;
  dir_20 = tmpvar_4.xyz;
  highp mat3 tmpvar_21;
  tmpvar_21[0] = _Object2World[0].xyz;
  tmpvar_21[1] = _Object2World[1].xyz;
  tmpvar_21[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = normalize((tmpvar_21 * dir_20));
  tmpvar_22.w = tmpvar_4.w;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.www;
  mediump vec3 normal_24;
  normal_24 = tmpvar_19;
  mediump vec3 tangent_25;
  tangent_25 = tmpvar_22.xyz;
  mediump vec3 flip_26;
  flip_26 = tmpvar_23;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (((normal_24.yzx * tangent_25.zxy) - (normal_24.zxy * tangent_25.yzx)) * flip_26);
  mediump mat3 tmpvar_28;
  tmpvar_28[0].x = tangent_25.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = normal_24.x;
  tmpvar_28[1].x = tangent_25.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = normal_24.y;
  tmpvar_28[2].x = tangent_25.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = normal_24.z;
  tangentToWorld_5 = tmpvar_28;
  highp vec3 v_29;
  v_29.x = tangentToWorld_5[0].x;
  v_29.y = tangentToWorld_5[1].x;
  v_29.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].y;
  v_30.y = tangentToWorld_5[1].y;
  v_30.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].z;
  v_31.y = tangentToWorld_5[1].z;
  v_31.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_31;
  highp vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = tmpvar_19;
  mediump vec4 normal_33;
  normal_33 = tmpvar_32;
  mediump vec3 x2_34;
  mediump vec4 tmpvar_35;
  tmpvar_35 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_35);
  x2_34.y = dot (unity_SHBg, tmpvar_35);
  x2_34.z = dot (unity_SHBb, tmpvar_35);
  tmpvar_9.xyz = (x2_34 + (unity_SHC.xyz * (
    (normal_33.x * normal_33.x)
   - 
    (normal_33.y * normal_33.y)
  )));
  gl_Position = tmpvar_11;
  xlv_TEXCOORD0 = texcoord_12;
  xlv_TEXCOORD1 = n_14;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 unity_ColorSpaceDouble;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _DetailAlbedoMap;
uniform sampler2D _BumpMap;
uniform sampler2D _DetailMask;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform mediump float _OcclusionStrength;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  tmpvar_1 = xlv_TEXCOORD2.xyz;
  tmpvar_2 = xlv_TEXCOORD2_1.xyz;
  tmpvar_3 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_4;
  tmpvar_4[0].x = tmpvar_1.x;
  tmpvar_4[0].y = tmpvar_2.x;
  tmpvar_4[0].z = tmpvar_3.x;
  tmpvar_4[1].x = tmpvar_1.y;
  tmpvar_4[1].y = tmpvar_2.y;
  tmpvar_4[1].z = tmpvar_3.y;
  tmpvar_4[2].x = tmpvar_1.z;
  tmpvar_4[2].y = tmpvar_2.z;
  tmpvar_4[2].z = tmpvar_3.z;
  lowp vec4 cse_5;
  cse_5 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_7;
  packednormal_7 = tmpvar_6;
  mediump vec3 tmpvar_8;
  tmpvar_8 = normalize(((
    (packednormal_7.xyz * 2.0)
   - 1.0) * tmpvar_4));
  mediump vec3 tmpvar_9;
  tmpvar_9 = normalize(xlv_TEXCOORD1);
  mediump vec4 sg_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_10 = tmpvar_11;
  mediump vec3 detailAlbedo_12;
  mediump float tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture (_DetailMask, xlv_TEXCOORD0.xy);
  tmpvar_13 = tmpvar_14.w;
  lowp vec3 tmpvar_15;
  tmpvar_15 = texture (_DetailAlbedoMap, xlv_TEXCOORD0.zw).xyz;
  detailAlbedo_12 = tmpvar_15;
  mediump vec3 tmpvar_16;
  mediump float tmpvar_17;
  tmpvar_17 = (1.0 - max (max (sg_10.x, sg_10.y), sg_10.z));
  tmpvar_16 = (((_Color.xyz * cse_5.xyz) * (vec3(
    (1.0 - tmpvar_13)
  ) + 
    ((detailAlbedo_12 * unity_ColorSpaceDouble.xyz) * tmpvar_13)
  )) * tmpvar_17);
  mediump float occ_18;
  lowp float tmpvar_19;
  tmpvar_19 = texture (_OcclusionMap, xlv_TEXCOORD0.xy).y;
  occ_18 = tmpvar_19;
  mediump float tmpvar_20;
  tmpvar_20 = ((1.0 - _OcclusionStrength) + (occ_18 * _OcclusionStrength));
  highp vec3 tmpvar_21;
  highp vec4 tmpvar_22;
  mediump vec3 tmpvar_23;
  tmpvar_23 = -(tmpvar_9);
  tmpvar_21 = tmpvar_23;
  tmpvar_22 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_24;
  mediump vec3 tmpvar_25;
  mediump vec4 tmpvar_26;
  tmpvar_26.w = 1.0;
  tmpvar_26.xyz = tmpvar_8;
  mediump vec3 x1_27;
  x1_27.x = dot (unity_SHAr, tmpvar_26);
  x1_27.y = dot (unity_SHAg, tmpvar_26);
  x1_27.z = dot (unity_SHAb, tmpvar_26);
  tmpvar_24 = (xlv_TEXCOORD5.xyz + x1_27);
  tmpvar_24 = (tmpvar_24 * tmpvar_20);
  mediump vec3 worldNormal_28;
  highp vec3 tmpvar_29;
  highp vec3 I_30;
  I_30 = -(tmpvar_21);
  tmpvar_29 = (I_30 - (2.0 * (
    dot (tmpvar_8, I_30)
   * tmpvar_8)));
  worldNormal_28 = tmpvar_29;
  mediump vec4 hdr_31;
  hdr_31 = tmpvar_22;
  highp float mip_32;
  mediump float tmpvar_33;
  tmpvar_33 = (pow ((1.0 - sg_10.w), 0.75) * 7.0);
  mip_32 = tmpvar_33;
  highp vec4 tmpvar_34;
  tmpvar_34.xyz = worldNormal_28;
  tmpvar_34.w = mip_32;
  lowp vec4 tmpvar_35;
  tmpvar_35 = textureLod (unity_SpecCube0, tmpvar_34.xyz, mip_32);
  mediump vec4 tmpvar_36;
  tmpvar_36 = tmpvar_35;
  tmpvar_25 = ((hdr_31.x * tmpvar_36.w) * tmpvar_36.xyz);
  tmpvar_25 = (tmpvar_25 * tmpvar_20);
  mediump float x_37;
  x_37 = (1.0 - max (0.0, dot (tmpvar_8, 
    -(tmpvar_9)
  )));
  mediump vec4 tmpvar_38;
  tmpvar_38.w = 1.0;
  tmpvar_38.xyz = ((tmpvar_24 * tmpvar_16) + (tmpvar_25 * mix (sg_10.xyz, vec3(
    clamp ((sg_10.w + (1.0 - tmpvar_17)), 0.0, 1.0)
  ), vec3(
    (((x_37 * x_37) * x_37) * x_37)
  ))));
  mediump vec4 tmpvar_39;
  tmpvar_39.xyz = tmpvar_16;
  tmpvar_39.w = tmpvar_20;
  mediump vec4 tmpvar_40;
  tmpvar_40.xyz = sg_10.xyz;
  tmpvar_40.w = sg_10.w;
  mediump vec4 tmpvar_41;
  tmpvar_41.w = 1.0;
  tmpvar_41.xyz = ((tmpvar_8 * 0.5) + 0.5);
  mediump vec4 tmpvar_42;
  tmpvar_42.w = 1.0;
  tmpvar_42.xyz = exp2(-(tmpvar_38.xyz));
  _glesFragData[0] = tmpvar_39;
  _glesFragData[1] = tmpvar_40;
  _glesFragData[2] = tmpvar_41;
  _glesFragData[3] = tmpvar_42;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_11;
  tmpvar_11 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_12;
  texcoord_12.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_13;
  if ((_UVSec == 0.0)) {
    tmpvar_13 = tmpvar_2;
  } else {
    tmpvar_13 = tmpvar_3;
  };
  texcoord_12.zw = ((tmpvar_13 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_14;
  n_14 = (tmpvar_10.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_15;
  norm_15 = tmpvar_1;
  highp vec4 v_16;
  v_16.x = _World2Object[0].x;
  v_16.y = _World2Object[1].x;
  v_16.z = _World2Object[2].x;
  v_16.w = _World2Object[3].x;
  highp vec4 v_17;
  v_17.x = _World2Object[0].y;
  v_17.y = _World2Object[1].y;
  v_17.z = _World2Object[2].y;
  v_17.w = _World2Object[3].y;
  highp vec4 v_18;
  v_18.x = _World2Object[0].z;
  v_18.y = _World2Object[1].z;
  v_18.z = _World2Object[2].z;
  v_18.w = _World2Object[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(((
    (v_16.xyz * norm_15.x)
   + 
    (v_17.xyz * norm_15.y)
  ) + (v_18.xyz * norm_15.z)));
  highp vec3 dir_20;
  dir_20 = tmpvar_4.xyz;
  highp mat3 tmpvar_21;
  tmpvar_21[0] = _Object2World[0].xyz;
  tmpvar_21[1] = _Object2World[1].xyz;
  tmpvar_21[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = normalize((tmpvar_21 * dir_20));
  tmpvar_22.w = tmpvar_4.w;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.www;
  mediump vec3 normal_24;
  normal_24 = tmpvar_19;
  mediump vec3 tangent_25;
  tangent_25 = tmpvar_22.xyz;
  mediump vec3 flip_26;
  flip_26 = tmpvar_23;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (((normal_24.yzx * tangent_25.zxy) - (normal_24.zxy * tangent_25.yzx)) * flip_26);
  mediump mat3 tmpvar_28;
  tmpvar_28[0].x = tangent_25.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = normal_24.x;
  tmpvar_28[1].x = tangent_25.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = normal_24.y;
  tmpvar_28[2].x = tangent_25.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = normal_24.z;
  tangentToWorld_5 = tmpvar_28;
  highp vec3 v_29;
  v_29.x = tangentToWorld_5[0].x;
  v_29.y = tangentToWorld_5[1].x;
  v_29.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].y;
  v_30.y = tangentToWorld_5[1].y;
  v_30.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].z;
  v_31.y = tangentToWorld_5[1].z;
  v_31.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_31;
  highp vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = tmpvar_19;
  mediump vec4 normal_33;
  normal_33 = tmpvar_32;
  mediump vec3 x2_34;
  mediump vec4 tmpvar_35;
  tmpvar_35 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_35);
  x2_34.y = dot (unity_SHBg, tmpvar_35);
  x2_34.z = dot (unity_SHBb, tmpvar_35);
  tmpvar_9.xyz = (x2_34 + (unity_SHC.xyz * (
    (normal_33.x * normal_33.x)
   - 
    (normal_33.y * normal_33.y)
  )));
  gl_Position = tmpvar_11;
  xlv_TEXCOORD0 = texcoord_12;
  xlv_TEXCOORD1 = n_14;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform mediump float _OcclusionStrength;
uniform mediump vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  tmpvar_1 = xlv_TEXCOORD2.xyz;
  tmpvar_2 = xlv_TEXCOORD2_1.xyz;
  tmpvar_3 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_4;
  tmpvar_4[0].x = tmpvar_1.x;
  tmpvar_4[0].y = tmpvar_2.x;
  tmpvar_4[0].z = tmpvar_3.x;
  tmpvar_4[1].x = tmpvar_1.y;
  tmpvar_4[1].y = tmpvar_2.y;
  tmpvar_4[1].z = tmpvar_3.y;
  tmpvar_4[2].x = tmpvar_1.z;
  tmpvar_4[2].y = tmpvar_2.z;
  tmpvar_4[2].z = tmpvar_3.z;
  lowp vec4 cse_5;
  cse_5 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_7;
  packednormal_7 = tmpvar_6;
  mediump vec3 tmpvar_8;
  tmpvar_8 = normalize(((
    (packednormal_7.xyz * 2.0)
   - 1.0) * tmpvar_4));
  mediump vec3 tmpvar_9;
  tmpvar_9 = normalize(xlv_TEXCOORD1);
  mediump vec4 sg_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_10 = tmpvar_11;
  mediump vec3 tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = (1.0 - max (max (sg_10.x, sg_10.y), sg_10.z));
  tmpvar_12 = ((_Color.xyz * cse_5.xyz) * tmpvar_13);
  mediump float occ_14;
  lowp float tmpvar_15;
  tmpvar_15 = texture (_OcclusionMap, xlv_TEXCOORD0.xy).y;
  occ_14 = tmpvar_15;
  mediump float tmpvar_16;
  tmpvar_16 = ((1.0 - _OcclusionStrength) + (occ_14 * _OcclusionStrength));
  highp vec3 tmpvar_17;
  highp vec4 tmpvar_18;
  mediump vec3 tmpvar_19;
  tmpvar_19 = -(tmpvar_9);
  tmpvar_17 = tmpvar_19;
  tmpvar_18 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_20;
  mediump vec3 tmpvar_21;
  mediump vec4 tmpvar_22;
  tmpvar_22.w = 1.0;
  tmpvar_22.xyz = tmpvar_8;
  mediump vec3 x1_23;
  x1_23.x = dot (unity_SHAr, tmpvar_22);
  x1_23.y = dot (unity_SHAg, tmpvar_22);
  x1_23.z = dot (unity_SHAb, tmpvar_22);
  tmpvar_20 = (xlv_TEXCOORD5.xyz + x1_23);
  tmpvar_20 = (tmpvar_20 * tmpvar_16);
  mediump vec3 worldNormal_24;
  highp vec3 tmpvar_25;
  highp vec3 I_26;
  I_26 = -(tmpvar_17);
  tmpvar_25 = (I_26 - (2.0 * (
    dot (tmpvar_8, I_26)
   * tmpvar_8)));
  worldNormal_24 = tmpvar_25;
  mediump vec4 hdr_27;
  hdr_27 = tmpvar_18;
  highp float mip_28;
  mediump float tmpvar_29;
  tmpvar_29 = (pow ((1.0 - sg_10.w), 0.75) * 7.0);
  mip_28 = tmpvar_29;
  highp vec4 tmpvar_30;
  tmpvar_30.xyz = worldNormal_24;
  tmpvar_30.w = mip_28;
  lowp vec4 tmpvar_31;
  tmpvar_31 = textureLod (unity_SpecCube0, tmpvar_30.xyz, mip_28);
  mediump vec4 tmpvar_32;
  tmpvar_32 = tmpvar_31;
  tmpvar_21 = ((hdr_27.x * tmpvar_32.w) * tmpvar_32.xyz);
  tmpvar_21 = (tmpvar_21 * tmpvar_16);
  mediump float x_33;
  x_33 = (1.0 - max (0.0, dot (tmpvar_8, 
    -(tmpvar_9)
  )));
  mediump vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = ((tmpvar_20 * tmpvar_12) + (tmpvar_21 * mix (sg_10.xyz, vec3(
    clamp ((sg_10.w + (1.0 - tmpvar_13)), 0.0, 1.0)
  ), vec3(
    (((x_33 * x_33) * x_33) * x_33)
  ))));
  lowp vec4 tmpvar_35;
  tmpvar_35 = texture (_EmissionMap, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_36;
  tmpvar_36.xyz = tmpvar_12;
  tmpvar_36.w = tmpvar_16;
  mediump vec4 tmpvar_37;
  tmpvar_37.xyz = sg_10.xyz;
  tmpvar_37.w = sg_10.w;
  mediump vec4 tmpvar_38;
  tmpvar_38.w = 1.0;
  tmpvar_38.xyz = ((tmpvar_8 * 0.5) + 0.5);
  mediump vec4 tmpvar_39;
  tmpvar_39.w = 1.0;
  tmpvar_39.xyz = exp2(-((tmpvar_34.xyz + 
    (tmpvar_35.xyz * _EmissionColor.xyz)
  )));
  _glesFragData[0] = tmpvar_36;
  _glesFragData[1] = tmpvar_37;
  _glesFragData[2] = tmpvar_38;
  _glesFragData[3] = tmpvar_39;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_10;
  texcoord_10.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_2;
  } else {
    tmpvar_11 = tmpvar_3;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_13;
  norm_13 = tmpvar_1;
  highp vec4 v_14;
  v_14.x = _World2Object[0].x;
  v_14.y = _World2Object[1].x;
  v_14.z = _World2Object[2].x;
  v_14.w = _World2Object[3].x;
  highp vec4 v_15;
  v_15.x = _World2Object[0].y;
  v_15.y = _World2Object[1].y;
  v_15.z = _World2Object[2].y;
  v_15.w = _World2Object[3].y;
  highp vec4 v_16;
  v_16.x = _World2Object[0].z;
  v_16.y = _World2Object[1].z;
  v_16.z = _World2Object[2].z;
  v_16.w = _World2Object[3].z;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize(((
    (v_14.xyz * norm_13.x)
   + 
    (v_15.xyz * norm_13.y)
  ) + (v_16.xyz * norm_13.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = tmpvar_17;
  mediump vec4 normal_19;
  normal_19 = tmpvar_18;
  mediump vec3 x2_20;
  mediump vec4 tmpvar_21;
  tmpvar_21 = (normal_19.xyzz * normal_19.yzzx);
  x2_20.x = dot (unity_SHBr, tmpvar_21);
  x2_20.y = dot (unity_SHBg, tmpvar_21);
  x2_20.z = dot (unity_SHBb, tmpvar_21);
  tmpvar_7.xyz = (x2_20 + (unity_SHC.xyz * (
    (normal_19.x * normal_19.x)
   - 
    (normal_19.y * normal_19.y)
  )));
  gl_Position = tmpvar_9;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = n_12;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _SpecColor;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform mediump float _OcclusionStrength;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD1);
  mediump vec4 tmpvar_4;
  tmpvar_4.xyz = _SpecColor.xyz;
  tmpvar_4.w = _Glossiness;
  mediump vec3 tmpvar_5;
  mediump float tmpvar_6;
  tmpvar_6 = (1.0 - max (max (tmpvar_4.x, tmpvar_4.y), tmpvar_4.z));
  tmpvar_5 = ((_Color.xyz * cse_2.xyz) * tmpvar_6);
  mediump float occ_7;
  lowp float tmpvar_8;
  tmpvar_8 = texture (_OcclusionMap, xlv_TEXCOORD0.xy).y;
  occ_7 = tmpvar_8;
  mediump float tmpvar_9;
  tmpvar_9 = ((1.0 - _OcclusionStrength) + (occ_7 * _OcclusionStrength));
  highp vec3 tmpvar_10;
  highp vec4 tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = -(tmpvar_3);
  tmpvar_10 = tmpvar_12;
  tmpvar_11 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_13;
  mediump vec3 tmpvar_14;
  mediump vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_1;
  mediump vec3 x1_16;
  x1_16.x = dot (unity_SHAr, tmpvar_15);
  x1_16.y = dot (unity_SHAg, tmpvar_15);
  x1_16.z = dot (unity_SHAb, tmpvar_15);
  tmpvar_13 = (xlv_TEXCOORD5.xyz + x1_16);
  tmpvar_13 = (tmpvar_13 * tmpvar_9);
  mediump vec3 worldNormal_17;
  highp vec3 tmpvar_18;
  highp vec3 I_19;
  I_19 = -(tmpvar_10);
  tmpvar_18 = (I_19 - (2.0 * (
    dot (tmpvar_1, I_19)
   * tmpvar_1)));
  worldNormal_17 = tmpvar_18;
  mediump vec4 hdr_20;
  hdr_20 = tmpvar_11;
  highp float mip_21;
  mediump float tmpvar_22;
  tmpvar_22 = (pow ((1.0 - _Glossiness), 0.75) * 7.0);
  mip_21 = tmpvar_22;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = worldNormal_17;
  tmpvar_23.w = mip_21;
  lowp vec4 tmpvar_24;
  tmpvar_24 = textureLod (unity_SpecCube0, tmpvar_23.xyz, mip_21);
  mediump vec4 tmpvar_25;
  tmpvar_25 = tmpvar_24;
  tmpvar_14 = ((hdr_20.x * tmpvar_25.w) * tmpvar_25.xyz);
  tmpvar_14 = (tmpvar_14 * tmpvar_9);
  mediump float x_26;
  x_26 = (1.0 - max (0.0, dot (tmpvar_1, 
    -(tmpvar_3)
  )));
  mediump vec4 tmpvar_27;
  tmpvar_27.w = 1.0;
  tmpvar_27.xyz = ((tmpvar_13 * tmpvar_5) + (tmpvar_14 * mix (tmpvar_4.xyz, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_6)), 0.0, 1.0)
  ), vec3(
    (((x_26 * x_26) * x_26) * x_26)
  ))));
  mediump vec4 tmpvar_28;
  tmpvar_28.xyz = tmpvar_5;
  tmpvar_28.w = tmpvar_9;
  mediump vec4 tmpvar_29;
  tmpvar_29.xyz = tmpvar_4.xyz;
  tmpvar_29.w = tmpvar_4.w;
  mediump vec4 tmpvar_30;
  tmpvar_30.w = 1.0;
  tmpvar_30.xyz = ((tmpvar_1 * 0.5) + 0.5);
  mediump vec4 tmpvar_31;
  tmpvar_31.w = 1.0;
  tmpvar_31.xyz = tmpvar_27.xyz;
  _glesFragData[0] = tmpvar_28;
  _glesFragData[1] = tmpvar_29;
  _glesFragData[2] = tmpvar_30;
  _glesFragData[3] = tmpvar_31;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "_SPECGLOSSMAP" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_10;
  texcoord_10.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_2;
  } else {
    tmpvar_11 = tmpvar_3;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_13;
  norm_13 = tmpvar_1;
  highp vec4 v_14;
  v_14.x = _World2Object[0].x;
  v_14.y = _World2Object[1].x;
  v_14.z = _World2Object[2].x;
  v_14.w = _World2Object[3].x;
  highp vec4 v_15;
  v_15.x = _World2Object[0].y;
  v_15.y = _World2Object[1].y;
  v_15.z = _World2Object[2].y;
  v_15.w = _World2Object[3].y;
  highp vec4 v_16;
  v_16.x = _World2Object[0].z;
  v_16.y = _World2Object[1].z;
  v_16.z = _World2Object[2].z;
  v_16.w = _World2Object[3].z;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize(((
    (v_14.xyz * norm_13.x)
   + 
    (v_15.xyz * norm_13.y)
  ) + (v_16.xyz * norm_13.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = tmpvar_17;
  mediump vec4 normal_19;
  normal_19 = tmpvar_18;
  mediump vec3 x2_20;
  mediump vec4 tmpvar_21;
  tmpvar_21 = (normal_19.xyzz * normal_19.yzzx);
  x2_20.x = dot (unity_SHBr, tmpvar_21);
  x2_20.y = dot (unity_SHBg, tmpvar_21);
  x2_20.z = dot (unity_SHBb, tmpvar_21);
  tmpvar_7.xyz = (x2_20 + (unity_SHC.xyz * (
    (normal_19.x * normal_19.x)
   - 
    (normal_19.y * normal_19.y)
  )));
  gl_Position = tmpvar_9;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = n_12;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform mediump float _OcclusionStrength;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD1);
  mediump vec4 sg_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_4 = tmpvar_5;
  mediump vec3 tmpvar_6;
  mediump float tmpvar_7;
  tmpvar_7 = (1.0 - max (max (sg_4.x, sg_4.y), sg_4.z));
  tmpvar_6 = ((_Color.xyz * cse_2.xyz) * tmpvar_7);
  mediump float occ_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture (_OcclusionMap, xlv_TEXCOORD0.xy).y;
  occ_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = ((1.0 - _OcclusionStrength) + (occ_8 * _OcclusionStrength));
  highp vec3 tmpvar_11;
  highp vec4 tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = -(tmpvar_3);
  tmpvar_11 = tmpvar_13;
  tmpvar_12 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_14;
  mediump vec3 tmpvar_15;
  mediump vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = tmpvar_1;
  mediump vec3 x1_17;
  x1_17.x = dot (unity_SHAr, tmpvar_16);
  x1_17.y = dot (unity_SHAg, tmpvar_16);
  x1_17.z = dot (unity_SHAb, tmpvar_16);
  tmpvar_14 = (xlv_TEXCOORD5.xyz + x1_17);
  tmpvar_14 = (tmpvar_14 * tmpvar_10);
  mediump vec3 worldNormal_18;
  highp vec3 tmpvar_19;
  highp vec3 I_20;
  I_20 = -(tmpvar_11);
  tmpvar_19 = (I_20 - (2.0 * (
    dot (tmpvar_1, I_20)
   * tmpvar_1)));
  worldNormal_18 = tmpvar_19;
  mediump vec4 hdr_21;
  hdr_21 = tmpvar_12;
  highp float mip_22;
  mediump float tmpvar_23;
  tmpvar_23 = (pow ((1.0 - sg_4.w), 0.75) * 7.0);
  mip_22 = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24.xyz = worldNormal_18;
  tmpvar_24.w = mip_22;
  lowp vec4 tmpvar_25;
  tmpvar_25 = textureLod (unity_SpecCube0, tmpvar_24.xyz, mip_22);
  mediump vec4 tmpvar_26;
  tmpvar_26 = tmpvar_25;
  tmpvar_15 = ((hdr_21.x * tmpvar_26.w) * tmpvar_26.xyz);
  tmpvar_15 = (tmpvar_15 * tmpvar_10);
  mediump float x_27;
  x_27 = (1.0 - max (0.0, dot (tmpvar_1, 
    -(tmpvar_3)
  )));
  mediump vec4 tmpvar_28;
  tmpvar_28.w = 1.0;
  tmpvar_28.xyz = ((tmpvar_14 * tmpvar_6) + (tmpvar_15 * mix (sg_4.xyz, vec3(
    clamp ((sg_4.w + (1.0 - tmpvar_7)), 0.0, 1.0)
  ), vec3(
    (((x_27 * x_27) * x_27) * x_27)
  ))));
  mediump vec4 tmpvar_29;
  tmpvar_29.xyz = tmpvar_6;
  tmpvar_29.w = tmpvar_10;
  mediump vec4 tmpvar_30;
  tmpvar_30.xyz = sg_4.xyz;
  tmpvar_30.w = sg_4.w;
  mediump vec4 tmpvar_31;
  tmpvar_31.w = 1.0;
  tmpvar_31.xyz = ((tmpvar_1 * 0.5) + 0.5);
  mediump vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = tmpvar_28.xyz;
  _glesFragData[0] = tmpvar_29;
  _glesFragData[1] = tmpvar_30;
  _glesFragData[2] = tmpvar_31;
  _glesFragData[3] = tmpvar_32;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_10;
  texcoord_10.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_2;
  } else {
    tmpvar_11 = tmpvar_3;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_13;
  norm_13 = tmpvar_1;
  highp vec4 v_14;
  v_14.x = _World2Object[0].x;
  v_14.y = _World2Object[1].x;
  v_14.z = _World2Object[2].x;
  v_14.w = _World2Object[3].x;
  highp vec4 v_15;
  v_15.x = _World2Object[0].y;
  v_15.y = _World2Object[1].y;
  v_15.z = _World2Object[2].y;
  v_15.w = _World2Object[3].y;
  highp vec4 v_16;
  v_16.x = _World2Object[0].z;
  v_16.y = _World2Object[1].z;
  v_16.z = _World2Object[2].z;
  v_16.w = _World2Object[3].z;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize(((
    (v_14.xyz * norm_13.x)
   + 
    (v_15.xyz * norm_13.y)
  ) + (v_16.xyz * norm_13.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = tmpvar_17;
  mediump vec4 normal_19;
  normal_19 = tmpvar_18;
  mediump vec3 x2_20;
  mediump vec4 tmpvar_21;
  tmpvar_21 = (normal_19.xyzz * normal_19.yzzx);
  x2_20.x = dot (unity_SHBr, tmpvar_21);
  x2_20.y = dot (unity_SHBg, tmpvar_21);
  x2_20.z = dot (unity_SHBb, tmpvar_21);
  tmpvar_7.xyz = (x2_20 + (unity_SHC.xyz * (
    (normal_19.x * normal_19.x)
   - 
    (normal_19.y * normal_19.y)
  )));
  gl_Position = tmpvar_9;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = n_12;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 unity_ColorSpaceDouble;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _DetailAlbedoMap;
uniform sampler2D _DetailMask;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform mediump float _OcclusionStrength;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD1);
  mediump vec4 sg_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_4 = tmpvar_5;
  mediump vec3 detailAlbedo_6;
  mediump float tmpvar_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture (_DetailMask, xlv_TEXCOORD0.xy);
  tmpvar_7 = tmpvar_8.w;
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture (_DetailAlbedoMap, xlv_TEXCOORD0.zw).xyz;
  detailAlbedo_6 = tmpvar_9;
  mediump vec3 tmpvar_10;
  mediump float tmpvar_11;
  tmpvar_11 = (1.0 - max (max (sg_4.x, sg_4.y), sg_4.z));
  tmpvar_10 = (((_Color.xyz * cse_2.xyz) * (vec3(
    (1.0 - tmpvar_7)
  ) + 
    ((detailAlbedo_6 * unity_ColorSpaceDouble.xyz) * tmpvar_7)
  )) * tmpvar_11);
  mediump float occ_12;
  lowp float tmpvar_13;
  tmpvar_13 = texture (_OcclusionMap, xlv_TEXCOORD0.xy).y;
  occ_12 = tmpvar_13;
  mediump float tmpvar_14;
  tmpvar_14 = ((1.0 - _OcclusionStrength) + (occ_12 * _OcclusionStrength));
  highp vec3 tmpvar_15;
  highp vec4 tmpvar_16;
  mediump vec3 tmpvar_17;
  tmpvar_17 = -(tmpvar_3);
  tmpvar_15 = tmpvar_17;
  tmpvar_16 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_18;
  mediump vec3 tmpvar_19;
  mediump vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = tmpvar_1;
  mediump vec3 x1_21;
  x1_21.x = dot (unity_SHAr, tmpvar_20);
  x1_21.y = dot (unity_SHAg, tmpvar_20);
  x1_21.z = dot (unity_SHAb, tmpvar_20);
  tmpvar_18 = (xlv_TEXCOORD5.xyz + x1_21);
  tmpvar_18 = (tmpvar_18 * tmpvar_14);
  mediump vec3 worldNormal_22;
  highp vec3 tmpvar_23;
  highp vec3 I_24;
  I_24 = -(tmpvar_15);
  tmpvar_23 = (I_24 - (2.0 * (
    dot (tmpvar_1, I_24)
   * tmpvar_1)));
  worldNormal_22 = tmpvar_23;
  mediump vec4 hdr_25;
  hdr_25 = tmpvar_16;
  highp float mip_26;
  mediump float tmpvar_27;
  tmpvar_27 = (pow ((1.0 - sg_4.w), 0.75) * 7.0);
  mip_26 = tmpvar_27;
  highp vec4 tmpvar_28;
  tmpvar_28.xyz = worldNormal_22;
  tmpvar_28.w = mip_26;
  lowp vec4 tmpvar_29;
  tmpvar_29 = textureLod (unity_SpecCube0, tmpvar_28.xyz, mip_26);
  mediump vec4 tmpvar_30;
  tmpvar_30 = tmpvar_29;
  tmpvar_19 = ((hdr_25.x * tmpvar_30.w) * tmpvar_30.xyz);
  tmpvar_19 = (tmpvar_19 * tmpvar_14);
  mediump float x_31;
  x_31 = (1.0 - max (0.0, dot (tmpvar_1, 
    -(tmpvar_3)
  )));
  mediump vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = ((tmpvar_18 * tmpvar_10) + (tmpvar_19 * mix (sg_4.xyz, vec3(
    clamp ((sg_4.w + (1.0 - tmpvar_11)), 0.0, 1.0)
  ), vec3(
    (((x_31 * x_31) * x_31) * x_31)
  ))));
  mediump vec4 tmpvar_33;
  tmpvar_33.xyz = tmpvar_10;
  tmpvar_33.w = tmpvar_14;
  mediump vec4 tmpvar_34;
  tmpvar_34.xyz = sg_4.xyz;
  tmpvar_34.w = sg_4.w;
  mediump vec4 tmpvar_35;
  tmpvar_35.w = 1.0;
  tmpvar_35.xyz = ((tmpvar_1 * 0.5) + 0.5);
  mediump vec4 tmpvar_36;
  tmpvar_36.w = 1.0;
  tmpvar_36.xyz = tmpvar_32.xyz;
  _glesFragData[0] = tmpvar_33;
  _glesFragData[1] = tmpvar_34;
  _glesFragData[2] = tmpvar_35;
  _glesFragData[3] = tmpvar_36;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "_EMISSION" "_SPECGLOSSMAP" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_10;
  texcoord_10.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_2;
  } else {
    tmpvar_11 = tmpvar_3;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_13;
  norm_13 = tmpvar_1;
  highp vec4 v_14;
  v_14.x = _World2Object[0].x;
  v_14.y = _World2Object[1].x;
  v_14.z = _World2Object[2].x;
  v_14.w = _World2Object[3].x;
  highp vec4 v_15;
  v_15.x = _World2Object[0].y;
  v_15.y = _World2Object[1].y;
  v_15.z = _World2Object[2].y;
  v_15.w = _World2Object[3].y;
  highp vec4 v_16;
  v_16.x = _World2Object[0].z;
  v_16.y = _World2Object[1].z;
  v_16.z = _World2Object[2].z;
  v_16.w = _World2Object[3].z;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize(((
    (v_14.xyz * norm_13.x)
   + 
    (v_15.xyz * norm_13.y)
  ) + (v_16.xyz * norm_13.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = tmpvar_17;
  mediump vec4 normal_19;
  normal_19 = tmpvar_18;
  mediump vec3 x2_20;
  mediump vec4 tmpvar_21;
  tmpvar_21 = (normal_19.xyzz * normal_19.yzzx);
  x2_20.x = dot (unity_SHBr, tmpvar_21);
  x2_20.y = dot (unity_SHBg, tmpvar_21);
  x2_20.z = dot (unity_SHBb, tmpvar_21);
  tmpvar_7.xyz = (x2_20 + (unity_SHC.xyz * (
    (normal_19.x * normal_19.x)
   - 
    (normal_19.y * normal_19.y)
  )));
  gl_Position = tmpvar_9;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = n_12;
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform mediump float _OcclusionStrength;
uniform mediump vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD1);
  mediump vec4 sg_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_4 = tmpvar_5;
  mediump vec3 tmpvar_6;
  mediump float tmpvar_7;
  tmpvar_7 = (1.0 - max (max (sg_4.x, sg_4.y), sg_4.z));
  tmpvar_6 = ((_Color.xyz * cse_2.xyz) * tmpvar_7);
  mediump float occ_8;
  lowp float tmpvar_9;
  tmpvar_9 = texture (_OcclusionMap, xlv_TEXCOORD0.xy).y;
  occ_8 = tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = ((1.0 - _OcclusionStrength) + (occ_8 * _OcclusionStrength));
  highp vec3 tmpvar_11;
  highp vec4 tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = -(tmpvar_3);
  tmpvar_11 = tmpvar_13;
  tmpvar_12 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_14;
  mediump vec3 tmpvar_15;
  mediump vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = tmpvar_1;
  mediump vec3 x1_17;
  x1_17.x = dot (unity_SHAr, tmpvar_16);
  x1_17.y = dot (unity_SHAg, tmpvar_16);
  x1_17.z = dot (unity_SHAb, tmpvar_16);
  tmpvar_14 = (xlv_TEXCOORD5.xyz + x1_17);
  tmpvar_14 = (tmpvar_14 * tmpvar_10);
  mediump vec3 worldNormal_18;
  highp vec3 tmpvar_19;
  highp vec3 I_20;
  I_20 = -(tmpvar_11);
  tmpvar_19 = (I_20 - (2.0 * (
    dot (tmpvar_1, I_20)
   * tmpvar_1)));
  worldNormal_18 = tmpvar_19;
  mediump vec4 hdr_21;
  hdr_21 = tmpvar_12;
  highp float mip_22;
  mediump float tmpvar_23;
  tmpvar_23 = (pow ((1.0 - sg_4.w), 0.75) * 7.0);
  mip_22 = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24.xyz = worldNormal_18;
  tmpvar_24.w = mip_22;
  lowp vec4 tmpvar_25;
  tmpvar_25 = textureLod (unity_SpecCube0, tmpvar_24.xyz, mip_22);
  mediump vec4 tmpvar_26;
  tmpvar_26 = tmpvar_25;
  tmpvar_15 = ((hdr_21.x * tmpvar_26.w) * tmpvar_26.xyz);
  tmpvar_15 = (tmpvar_15 * tmpvar_10);
  mediump float x_27;
  x_27 = (1.0 - max (0.0, dot (tmpvar_1, 
    -(tmpvar_3)
  )));
  mediump vec4 tmpvar_28;
  tmpvar_28.w = 1.0;
  tmpvar_28.xyz = ((tmpvar_14 * tmpvar_6) + (tmpvar_15 * mix (sg_4.xyz, vec3(
    clamp ((sg_4.w + (1.0 - tmpvar_7)), 0.0, 1.0)
  ), vec3(
    (((x_27 * x_27) * x_27) * x_27)
  ))));
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture (_EmissionMap, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_30;
  tmpvar_30.xyz = tmpvar_6;
  tmpvar_30.w = tmpvar_10;
  mediump vec4 tmpvar_31;
  tmpvar_31.xyz = sg_4.xyz;
  tmpvar_31.w = sg_4.w;
  mediump vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = ((tmpvar_1 * 0.5) + 0.5);
  mediump vec4 tmpvar_33;
  tmpvar_33.w = 1.0;
  tmpvar_33.xyz = (tmpvar_28.xyz + (tmpvar_29.xyz * _EmissionColor.xyz));
  _glesFragData[0] = tmpvar_30;
  _glesFragData[1] = tmpvar_31;
  _glesFragData[2] = tmpvar_32;
  _glesFragData[3] = tmpvar_33;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "_NORMALMAP" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_11;
  tmpvar_11 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_12;
  texcoord_12.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_13;
  if ((_UVSec == 0.0)) {
    tmpvar_13 = tmpvar_2;
  } else {
    tmpvar_13 = tmpvar_3;
  };
  texcoord_12.zw = ((tmpvar_13 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_14;
  n_14 = (tmpvar_10.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_15;
  norm_15 = tmpvar_1;
  highp vec4 v_16;
  v_16.x = _World2Object[0].x;
  v_16.y = _World2Object[1].x;
  v_16.z = _World2Object[2].x;
  v_16.w = _World2Object[3].x;
  highp vec4 v_17;
  v_17.x = _World2Object[0].y;
  v_17.y = _World2Object[1].y;
  v_17.z = _World2Object[2].y;
  v_17.w = _World2Object[3].y;
  highp vec4 v_18;
  v_18.x = _World2Object[0].z;
  v_18.y = _World2Object[1].z;
  v_18.z = _World2Object[2].z;
  v_18.w = _World2Object[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(((
    (v_16.xyz * norm_15.x)
   + 
    (v_17.xyz * norm_15.y)
  ) + (v_18.xyz * norm_15.z)));
  highp vec3 dir_20;
  dir_20 = tmpvar_4.xyz;
  highp mat3 tmpvar_21;
  tmpvar_21[0] = _Object2World[0].xyz;
  tmpvar_21[1] = _Object2World[1].xyz;
  tmpvar_21[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = normalize((tmpvar_21 * dir_20));
  tmpvar_22.w = tmpvar_4.w;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.www;
  mediump vec3 normal_24;
  normal_24 = tmpvar_19;
  mediump vec3 tangent_25;
  tangent_25 = tmpvar_22.xyz;
  mediump vec3 flip_26;
  flip_26 = tmpvar_23;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (((normal_24.yzx * tangent_25.zxy) - (normal_24.zxy * tangent_25.yzx)) * flip_26);
  mediump mat3 tmpvar_28;
  tmpvar_28[0].x = tangent_25.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = normal_24.x;
  tmpvar_28[1].x = tangent_25.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = normal_24.y;
  tmpvar_28[2].x = tangent_25.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = normal_24.z;
  tangentToWorld_5 = tmpvar_28;
  highp vec3 v_29;
  v_29.x = tangentToWorld_5[0].x;
  v_29.y = tangentToWorld_5[1].x;
  v_29.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].y;
  v_30.y = tangentToWorld_5[1].y;
  v_30.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].z;
  v_31.y = tangentToWorld_5[1].z;
  v_31.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_31;
  highp vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = tmpvar_19;
  mediump vec4 normal_33;
  normal_33 = tmpvar_32;
  mediump vec3 x2_34;
  mediump vec4 tmpvar_35;
  tmpvar_35 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_35);
  x2_34.y = dot (unity_SHBg, tmpvar_35);
  x2_34.z = dot (unity_SHBb, tmpvar_35);
  tmpvar_9.xyz = (x2_34 + (unity_SHC.xyz * (
    (normal_33.x * normal_33.x)
   - 
    (normal_33.y * normal_33.y)
  )));
  gl_Position = tmpvar_11;
  xlv_TEXCOORD0 = texcoord_12;
  xlv_TEXCOORD1 = n_14;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _SpecColor;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform mediump float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform mediump float _OcclusionStrength;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  tmpvar_1 = xlv_TEXCOORD2.xyz;
  tmpvar_2 = xlv_TEXCOORD2_1.xyz;
  tmpvar_3 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_4;
  tmpvar_4[0].x = tmpvar_1.x;
  tmpvar_4[0].y = tmpvar_2.x;
  tmpvar_4[0].z = tmpvar_3.x;
  tmpvar_4[1].x = tmpvar_1.y;
  tmpvar_4[1].y = tmpvar_2.y;
  tmpvar_4[1].z = tmpvar_3.y;
  tmpvar_4[2].x = tmpvar_1.z;
  tmpvar_4[2].y = tmpvar_2.z;
  tmpvar_4[2].z = tmpvar_3.z;
  lowp vec4 cse_5;
  cse_5 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_7;
  packednormal_7 = tmpvar_6;
  mediump vec3 tmpvar_8;
  tmpvar_8 = normalize(((
    (packednormal_7.xyz * 2.0)
   - 1.0) * tmpvar_4));
  mediump vec3 tmpvar_9;
  tmpvar_9 = normalize(xlv_TEXCOORD1);
  mediump vec4 tmpvar_10;
  tmpvar_10.xyz = _SpecColor.xyz;
  tmpvar_10.w = _Glossiness;
  mediump vec3 tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = (1.0 - max (max (tmpvar_10.x, tmpvar_10.y), tmpvar_10.z));
  tmpvar_11 = ((_Color.xyz * cse_5.xyz) * tmpvar_12);
  mediump float occ_13;
  lowp float tmpvar_14;
  tmpvar_14 = texture (_OcclusionMap, xlv_TEXCOORD0.xy).y;
  occ_13 = tmpvar_14;
  mediump float tmpvar_15;
  tmpvar_15 = ((1.0 - _OcclusionStrength) + (occ_13 * _OcclusionStrength));
  highp vec3 tmpvar_16;
  highp vec4 tmpvar_17;
  mediump vec3 tmpvar_18;
  tmpvar_18 = -(tmpvar_9);
  tmpvar_16 = tmpvar_18;
  tmpvar_17 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_19;
  mediump vec3 tmpvar_20;
  mediump vec4 tmpvar_21;
  tmpvar_21.w = 1.0;
  tmpvar_21.xyz = tmpvar_8;
  mediump vec3 x1_22;
  x1_22.x = dot (unity_SHAr, tmpvar_21);
  x1_22.y = dot (unity_SHAg, tmpvar_21);
  x1_22.z = dot (unity_SHAb, tmpvar_21);
  tmpvar_19 = (xlv_TEXCOORD5.xyz + x1_22);
  tmpvar_19 = (tmpvar_19 * tmpvar_15);
  mediump vec3 worldNormal_23;
  highp vec3 tmpvar_24;
  highp vec3 I_25;
  I_25 = -(tmpvar_16);
  tmpvar_24 = (I_25 - (2.0 * (
    dot (tmpvar_8, I_25)
   * tmpvar_8)));
  worldNormal_23 = tmpvar_24;
  mediump vec4 hdr_26;
  hdr_26 = tmpvar_17;
  highp float mip_27;
  mediump float tmpvar_28;
  tmpvar_28 = (pow ((1.0 - _Glossiness), 0.75) * 7.0);
  mip_27 = tmpvar_28;
  highp vec4 tmpvar_29;
  tmpvar_29.xyz = worldNormal_23;
  tmpvar_29.w = mip_27;
  lowp vec4 tmpvar_30;
  tmpvar_30 = textureLod (unity_SpecCube0, tmpvar_29.xyz, mip_27);
  mediump vec4 tmpvar_31;
  tmpvar_31 = tmpvar_30;
  tmpvar_20 = ((hdr_26.x * tmpvar_31.w) * tmpvar_31.xyz);
  tmpvar_20 = (tmpvar_20 * tmpvar_15);
  mediump float x_32;
  x_32 = (1.0 - max (0.0, dot (tmpvar_8, 
    -(tmpvar_9)
  )));
  mediump vec4 tmpvar_33;
  tmpvar_33.w = 1.0;
  tmpvar_33.xyz = ((tmpvar_19 * tmpvar_11) + (tmpvar_20 * mix (tmpvar_10.xyz, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_12)), 0.0, 1.0)
  ), vec3(
    (((x_32 * x_32) * x_32) * x_32)
  ))));
  mediump vec4 tmpvar_34;
  tmpvar_34.xyz = tmpvar_11;
  tmpvar_34.w = tmpvar_15;
  mediump vec4 tmpvar_35;
  tmpvar_35.xyz = tmpvar_10.xyz;
  tmpvar_35.w = tmpvar_10.w;
  mediump vec4 tmpvar_36;
  tmpvar_36.w = 1.0;
  tmpvar_36.xyz = ((tmpvar_8 * 0.5) + 0.5);
  mediump vec4 tmpvar_37;
  tmpvar_37.w = 1.0;
  tmpvar_37.xyz = tmpvar_33.xyz;
  _glesFragData[0] = tmpvar_34;
  _glesFragData[1] = tmpvar_35;
  _glesFragData[2] = tmpvar_36;
  _glesFragData[3] = tmpvar_37;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_11;
  tmpvar_11 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_12;
  texcoord_12.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_13;
  if ((_UVSec == 0.0)) {
    tmpvar_13 = tmpvar_2;
  } else {
    tmpvar_13 = tmpvar_3;
  };
  texcoord_12.zw = ((tmpvar_13 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_14;
  n_14 = (tmpvar_10.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_15;
  norm_15 = tmpvar_1;
  highp vec4 v_16;
  v_16.x = _World2Object[0].x;
  v_16.y = _World2Object[1].x;
  v_16.z = _World2Object[2].x;
  v_16.w = _World2Object[3].x;
  highp vec4 v_17;
  v_17.x = _World2Object[0].y;
  v_17.y = _World2Object[1].y;
  v_17.z = _World2Object[2].y;
  v_17.w = _World2Object[3].y;
  highp vec4 v_18;
  v_18.x = _World2Object[0].z;
  v_18.y = _World2Object[1].z;
  v_18.z = _World2Object[2].z;
  v_18.w = _World2Object[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(((
    (v_16.xyz * norm_15.x)
   + 
    (v_17.xyz * norm_15.y)
  ) + (v_18.xyz * norm_15.z)));
  highp vec3 dir_20;
  dir_20 = tmpvar_4.xyz;
  highp mat3 tmpvar_21;
  tmpvar_21[0] = _Object2World[0].xyz;
  tmpvar_21[1] = _Object2World[1].xyz;
  tmpvar_21[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = normalize((tmpvar_21 * dir_20));
  tmpvar_22.w = tmpvar_4.w;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.www;
  mediump vec3 normal_24;
  normal_24 = tmpvar_19;
  mediump vec3 tangent_25;
  tangent_25 = tmpvar_22.xyz;
  mediump vec3 flip_26;
  flip_26 = tmpvar_23;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (((normal_24.yzx * tangent_25.zxy) - (normal_24.zxy * tangent_25.yzx)) * flip_26);
  mediump mat3 tmpvar_28;
  tmpvar_28[0].x = tangent_25.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = normal_24.x;
  tmpvar_28[1].x = tangent_25.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = normal_24.y;
  tmpvar_28[2].x = tangent_25.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = normal_24.z;
  tangentToWorld_5 = tmpvar_28;
  highp vec3 v_29;
  v_29.x = tangentToWorld_5[0].x;
  v_29.y = tangentToWorld_5[1].x;
  v_29.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].y;
  v_30.y = tangentToWorld_5[1].y;
  v_30.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].z;
  v_31.y = tangentToWorld_5[1].z;
  v_31.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_31;
  highp vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = tmpvar_19;
  mediump vec4 normal_33;
  normal_33 = tmpvar_32;
  mediump vec3 x2_34;
  mediump vec4 tmpvar_35;
  tmpvar_35 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_35);
  x2_34.y = dot (unity_SHBg, tmpvar_35);
  x2_34.z = dot (unity_SHBb, tmpvar_35);
  tmpvar_9.xyz = (x2_34 + (unity_SHC.xyz * (
    (normal_33.x * normal_33.x)
   - 
    (normal_33.y * normal_33.y)
  )));
  gl_Position = tmpvar_11;
  xlv_TEXCOORD0 = texcoord_12;
  xlv_TEXCOORD1 = n_14;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform mediump float _OcclusionStrength;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  tmpvar_1 = xlv_TEXCOORD2.xyz;
  tmpvar_2 = xlv_TEXCOORD2_1.xyz;
  tmpvar_3 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_4;
  tmpvar_4[0].x = tmpvar_1.x;
  tmpvar_4[0].y = tmpvar_2.x;
  tmpvar_4[0].z = tmpvar_3.x;
  tmpvar_4[1].x = tmpvar_1.y;
  tmpvar_4[1].y = tmpvar_2.y;
  tmpvar_4[1].z = tmpvar_3.y;
  tmpvar_4[2].x = tmpvar_1.z;
  tmpvar_4[2].y = tmpvar_2.z;
  tmpvar_4[2].z = tmpvar_3.z;
  lowp vec4 cse_5;
  cse_5 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_7;
  packednormal_7 = tmpvar_6;
  mediump vec3 tmpvar_8;
  tmpvar_8 = normalize(((
    (packednormal_7.xyz * 2.0)
   - 1.0) * tmpvar_4));
  mediump vec3 tmpvar_9;
  tmpvar_9 = normalize(xlv_TEXCOORD1);
  mediump vec4 sg_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_10 = tmpvar_11;
  mediump vec3 tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = (1.0 - max (max (sg_10.x, sg_10.y), sg_10.z));
  tmpvar_12 = ((_Color.xyz * cse_5.xyz) * tmpvar_13);
  mediump float occ_14;
  lowp float tmpvar_15;
  tmpvar_15 = texture (_OcclusionMap, xlv_TEXCOORD0.xy).y;
  occ_14 = tmpvar_15;
  mediump float tmpvar_16;
  tmpvar_16 = ((1.0 - _OcclusionStrength) + (occ_14 * _OcclusionStrength));
  highp vec3 tmpvar_17;
  highp vec4 tmpvar_18;
  mediump vec3 tmpvar_19;
  tmpvar_19 = -(tmpvar_9);
  tmpvar_17 = tmpvar_19;
  tmpvar_18 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_20;
  mediump vec3 tmpvar_21;
  mediump vec4 tmpvar_22;
  tmpvar_22.w = 1.0;
  tmpvar_22.xyz = tmpvar_8;
  mediump vec3 x1_23;
  x1_23.x = dot (unity_SHAr, tmpvar_22);
  x1_23.y = dot (unity_SHAg, tmpvar_22);
  x1_23.z = dot (unity_SHAb, tmpvar_22);
  tmpvar_20 = (xlv_TEXCOORD5.xyz + x1_23);
  tmpvar_20 = (tmpvar_20 * tmpvar_16);
  mediump vec3 worldNormal_24;
  highp vec3 tmpvar_25;
  highp vec3 I_26;
  I_26 = -(tmpvar_17);
  tmpvar_25 = (I_26 - (2.0 * (
    dot (tmpvar_8, I_26)
   * tmpvar_8)));
  worldNormal_24 = tmpvar_25;
  mediump vec4 hdr_27;
  hdr_27 = tmpvar_18;
  highp float mip_28;
  mediump float tmpvar_29;
  tmpvar_29 = (pow ((1.0 - sg_10.w), 0.75) * 7.0);
  mip_28 = tmpvar_29;
  highp vec4 tmpvar_30;
  tmpvar_30.xyz = worldNormal_24;
  tmpvar_30.w = mip_28;
  lowp vec4 tmpvar_31;
  tmpvar_31 = textureLod (unity_SpecCube0, tmpvar_30.xyz, mip_28);
  mediump vec4 tmpvar_32;
  tmpvar_32 = tmpvar_31;
  tmpvar_21 = ((hdr_27.x * tmpvar_32.w) * tmpvar_32.xyz);
  tmpvar_21 = (tmpvar_21 * tmpvar_16);
  mediump float x_33;
  x_33 = (1.0 - max (0.0, dot (tmpvar_8, 
    -(tmpvar_9)
  )));
  mediump vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = ((tmpvar_20 * tmpvar_12) + (tmpvar_21 * mix (sg_10.xyz, vec3(
    clamp ((sg_10.w + (1.0 - tmpvar_13)), 0.0, 1.0)
  ), vec3(
    (((x_33 * x_33) * x_33) * x_33)
  ))));
  mediump vec4 tmpvar_35;
  tmpvar_35.xyz = tmpvar_12;
  tmpvar_35.w = tmpvar_16;
  mediump vec4 tmpvar_36;
  tmpvar_36.xyz = sg_10.xyz;
  tmpvar_36.w = sg_10.w;
  mediump vec4 tmpvar_37;
  tmpvar_37.w = 1.0;
  tmpvar_37.xyz = ((tmpvar_8 * 0.5) + 0.5);
  mediump vec4 tmpvar_38;
  tmpvar_38.w = 1.0;
  tmpvar_38.xyz = tmpvar_34.xyz;
  _glesFragData[0] = tmpvar_35;
  _glesFragData[1] = tmpvar_36;
  _glesFragData[2] = tmpvar_37;
  _glesFragData[3] = tmpvar_38;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "_NORMALMAP" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_11;
  tmpvar_11 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_12;
  texcoord_12.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_13;
  if ((_UVSec == 0.0)) {
    tmpvar_13 = tmpvar_2;
  } else {
    tmpvar_13 = tmpvar_3;
  };
  texcoord_12.zw = ((tmpvar_13 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_14;
  n_14 = (tmpvar_10.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_15;
  norm_15 = tmpvar_1;
  highp vec4 v_16;
  v_16.x = _World2Object[0].x;
  v_16.y = _World2Object[1].x;
  v_16.z = _World2Object[2].x;
  v_16.w = _World2Object[3].x;
  highp vec4 v_17;
  v_17.x = _World2Object[0].y;
  v_17.y = _World2Object[1].y;
  v_17.z = _World2Object[2].y;
  v_17.w = _World2Object[3].y;
  highp vec4 v_18;
  v_18.x = _World2Object[0].z;
  v_18.y = _World2Object[1].z;
  v_18.z = _World2Object[2].z;
  v_18.w = _World2Object[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(((
    (v_16.xyz * norm_15.x)
   + 
    (v_17.xyz * norm_15.y)
  ) + (v_18.xyz * norm_15.z)));
  highp vec3 dir_20;
  dir_20 = tmpvar_4.xyz;
  highp mat3 tmpvar_21;
  tmpvar_21[0] = _Object2World[0].xyz;
  tmpvar_21[1] = _Object2World[1].xyz;
  tmpvar_21[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = normalize((tmpvar_21 * dir_20));
  tmpvar_22.w = tmpvar_4.w;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.www;
  mediump vec3 normal_24;
  normal_24 = tmpvar_19;
  mediump vec3 tangent_25;
  tangent_25 = tmpvar_22.xyz;
  mediump vec3 flip_26;
  flip_26 = tmpvar_23;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (((normal_24.yzx * tangent_25.zxy) - (normal_24.zxy * tangent_25.yzx)) * flip_26);
  mediump mat3 tmpvar_28;
  tmpvar_28[0].x = tangent_25.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = normal_24.x;
  tmpvar_28[1].x = tangent_25.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = normal_24.y;
  tmpvar_28[2].x = tangent_25.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = normal_24.z;
  tangentToWorld_5 = tmpvar_28;
  highp vec3 v_29;
  v_29.x = tangentToWorld_5[0].x;
  v_29.y = tangentToWorld_5[1].x;
  v_29.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].y;
  v_30.y = tangentToWorld_5[1].y;
  v_30.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].z;
  v_31.y = tangentToWorld_5[1].z;
  v_31.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_31;
  highp vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = tmpvar_19;
  mediump vec4 normal_33;
  normal_33 = tmpvar_32;
  mediump vec3 x2_34;
  mediump vec4 tmpvar_35;
  tmpvar_35 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_35);
  x2_34.y = dot (unity_SHBg, tmpvar_35);
  x2_34.z = dot (unity_SHBb, tmpvar_35);
  tmpvar_9.xyz = (x2_34 + (unity_SHC.xyz * (
    (normal_33.x * normal_33.x)
   - 
    (normal_33.y * normal_33.y)
  )));
  gl_Position = tmpvar_11;
  xlv_TEXCOORD0 = texcoord_12;
  xlv_TEXCOORD1 = n_14;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 unity_ColorSpaceDouble;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _DetailAlbedoMap;
uniform sampler2D _BumpMap;
uniform sampler2D _DetailMask;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform mediump float _OcclusionStrength;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  tmpvar_1 = xlv_TEXCOORD2.xyz;
  tmpvar_2 = xlv_TEXCOORD2_1.xyz;
  tmpvar_3 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_4;
  tmpvar_4[0].x = tmpvar_1.x;
  tmpvar_4[0].y = tmpvar_2.x;
  tmpvar_4[0].z = tmpvar_3.x;
  tmpvar_4[1].x = tmpvar_1.y;
  tmpvar_4[1].y = tmpvar_2.y;
  tmpvar_4[1].z = tmpvar_3.y;
  tmpvar_4[2].x = tmpvar_1.z;
  tmpvar_4[2].y = tmpvar_2.z;
  tmpvar_4[2].z = tmpvar_3.z;
  lowp vec4 cse_5;
  cse_5 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_7;
  packednormal_7 = tmpvar_6;
  mediump vec3 tmpvar_8;
  tmpvar_8 = normalize(((
    (packednormal_7.xyz * 2.0)
   - 1.0) * tmpvar_4));
  mediump vec3 tmpvar_9;
  tmpvar_9 = normalize(xlv_TEXCOORD1);
  mediump vec4 sg_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_10 = tmpvar_11;
  mediump vec3 detailAlbedo_12;
  mediump float tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture (_DetailMask, xlv_TEXCOORD0.xy);
  tmpvar_13 = tmpvar_14.w;
  lowp vec3 tmpvar_15;
  tmpvar_15 = texture (_DetailAlbedoMap, xlv_TEXCOORD0.zw).xyz;
  detailAlbedo_12 = tmpvar_15;
  mediump vec3 tmpvar_16;
  mediump float tmpvar_17;
  tmpvar_17 = (1.0 - max (max (sg_10.x, sg_10.y), sg_10.z));
  tmpvar_16 = (((_Color.xyz * cse_5.xyz) * (vec3(
    (1.0 - tmpvar_13)
  ) + 
    ((detailAlbedo_12 * unity_ColorSpaceDouble.xyz) * tmpvar_13)
  )) * tmpvar_17);
  mediump float occ_18;
  lowp float tmpvar_19;
  tmpvar_19 = texture (_OcclusionMap, xlv_TEXCOORD0.xy).y;
  occ_18 = tmpvar_19;
  mediump float tmpvar_20;
  tmpvar_20 = ((1.0 - _OcclusionStrength) + (occ_18 * _OcclusionStrength));
  highp vec3 tmpvar_21;
  highp vec4 tmpvar_22;
  mediump vec3 tmpvar_23;
  tmpvar_23 = -(tmpvar_9);
  tmpvar_21 = tmpvar_23;
  tmpvar_22 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_24;
  mediump vec3 tmpvar_25;
  mediump vec4 tmpvar_26;
  tmpvar_26.w = 1.0;
  tmpvar_26.xyz = tmpvar_8;
  mediump vec3 x1_27;
  x1_27.x = dot (unity_SHAr, tmpvar_26);
  x1_27.y = dot (unity_SHAg, tmpvar_26);
  x1_27.z = dot (unity_SHAb, tmpvar_26);
  tmpvar_24 = (xlv_TEXCOORD5.xyz + x1_27);
  tmpvar_24 = (tmpvar_24 * tmpvar_20);
  mediump vec3 worldNormal_28;
  highp vec3 tmpvar_29;
  highp vec3 I_30;
  I_30 = -(tmpvar_21);
  tmpvar_29 = (I_30 - (2.0 * (
    dot (tmpvar_8, I_30)
   * tmpvar_8)));
  worldNormal_28 = tmpvar_29;
  mediump vec4 hdr_31;
  hdr_31 = tmpvar_22;
  highp float mip_32;
  mediump float tmpvar_33;
  tmpvar_33 = (pow ((1.0 - sg_10.w), 0.75) * 7.0);
  mip_32 = tmpvar_33;
  highp vec4 tmpvar_34;
  tmpvar_34.xyz = worldNormal_28;
  tmpvar_34.w = mip_32;
  lowp vec4 tmpvar_35;
  tmpvar_35 = textureLod (unity_SpecCube0, tmpvar_34.xyz, mip_32);
  mediump vec4 tmpvar_36;
  tmpvar_36 = tmpvar_35;
  tmpvar_25 = ((hdr_31.x * tmpvar_36.w) * tmpvar_36.xyz);
  tmpvar_25 = (tmpvar_25 * tmpvar_20);
  mediump float x_37;
  x_37 = (1.0 - max (0.0, dot (tmpvar_8, 
    -(tmpvar_9)
  )));
  mediump vec4 tmpvar_38;
  tmpvar_38.w = 1.0;
  tmpvar_38.xyz = ((tmpvar_24 * tmpvar_16) + (tmpvar_25 * mix (sg_10.xyz, vec3(
    clamp ((sg_10.w + (1.0 - tmpvar_17)), 0.0, 1.0)
  ), vec3(
    (((x_37 * x_37) * x_37) * x_37)
  ))));
  mediump vec4 tmpvar_39;
  tmpvar_39.xyz = tmpvar_16;
  tmpvar_39.w = tmpvar_20;
  mediump vec4 tmpvar_40;
  tmpvar_40.xyz = sg_10.xyz;
  tmpvar_40.w = sg_10.w;
  mediump vec4 tmpvar_41;
  tmpvar_41.w = 1.0;
  tmpvar_41.xyz = ((tmpvar_8 * 0.5) + 0.5);
  mediump vec4 tmpvar_42;
  tmpvar_42.w = 1.0;
  tmpvar_42.xyz = tmpvar_38.xyz;
  _glesFragData[0] = tmpvar_39;
  _glesFragData[1] = tmpvar_40;
  _glesFragData[2] = tmpvar_41;
  _glesFragData[3] = tmpvar_42;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "_EMISSION" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_11;
  tmpvar_11 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_12;
  texcoord_12.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_13;
  if ((_UVSec == 0.0)) {
    tmpvar_13 = tmpvar_2;
  } else {
    tmpvar_13 = tmpvar_3;
  };
  texcoord_12.zw = ((tmpvar_13 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_14;
  n_14 = (tmpvar_10.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_15;
  norm_15 = tmpvar_1;
  highp vec4 v_16;
  v_16.x = _World2Object[0].x;
  v_16.y = _World2Object[1].x;
  v_16.z = _World2Object[2].x;
  v_16.w = _World2Object[3].x;
  highp vec4 v_17;
  v_17.x = _World2Object[0].y;
  v_17.y = _World2Object[1].y;
  v_17.z = _World2Object[2].y;
  v_17.w = _World2Object[3].y;
  highp vec4 v_18;
  v_18.x = _World2Object[0].z;
  v_18.y = _World2Object[1].z;
  v_18.z = _World2Object[2].z;
  v_18.w = _World2Object[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(((
    (v_16.xyz * norm_15.x)
   + 
    (v_17.xyz * norm_15.y)
  ) + (v_18.xyz * norm_15.z)));
  highp vec3 dir_20;
  dir_20 = tmpvar_4.xyz;
  highp mat3 tmpvar_21;
  tmpvar_21[0] = _Object2World[0].xyz;
  tmpvar_21[1] = _Object2World[1].xyz;
  tmpvar_21[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = normalize((tmpvar_21 * dir_20));
  tmpvar_22.w = tmpvar_4.w;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.www;
  mediump vec3 normal_24;
  normal_24 = tmpvar_19;
  mediump vec3 tangent_25;
  tangent_25 = tmpvar_22.xyz;
  mediump vec3 flip_26;
  flip_26 = tmpvar_23;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (((normal_24.yzx * tangent_25.zxy) - (normal_24.zxy * tangent_25.yzx)) * flip_26);
  mediump mat3 tmpvar_28;
  tmpvar_28[0].x = tangent_25.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = normal_24.x;
  tmpvar_28[1].x = tangent_25.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = normal_24.y;
  tmpvar_28[2].x = tangent_25.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = normal_24.z;
  tangentToWorld_5 = tmpvar_28;
  highp vec3 v_29;
  v_29.x = tangentToWorld_5[0].x;
  v_29.y = tangentToWorld_5[1].x;
  v_29.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].y;
  v_30.y = tangentToWorld_5[1].y;
  v_30.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].z;
  v_31.y = tangentToWorld_5[1].z;
  v_31.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_31;
  highp vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = tmpvar_19;
  mediump vec4 normal_33;
  normal_33 = tmpvar_32;
  mediump vec3 x2_34;
  mediump vec4 tmpvar_35;
  tmpvar_35 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_35);
  x2_34.y = dot (unity_SHBg, tmpvar_35);
  x2_34.z = dot (unity_SHBb, tmpvar_35);
  tmpvar_9.xyz = (x2_34 + (unity_SHC.xyz * (
    (normal_33.x * normal_33.x)
   - 
    (normal_33.y * normal_33.y)
  )));
  gl_Position = tmpvar_11;
  xlv_TEXCOORD0 = texcoord_12;
  xlv_TEXCOORD1 = n_14;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform mediump float _OcclusionStrength;
uniform mediump vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  tmpvar_1 = xlv_TEXCOORD2.xyz;
  tmpvar_2 = xlv_TEXCOORD2_1.xyz;
  tmpvar_3 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_4;
  tmpvar_4[0].x = tmpvar_1.x;
  tmpvar_4[0].y = tmpvar_2.x;
  tmpvar_4[0].z = tmpvar_3.x;
  tmpvar_4[1].x = tmpvar_1.y;
  tmpvar_4[1].y = tmpvar_2.y;
  tmpvar_4[1].z = tmpvar_3.y;
  tmpvar_4[2].x = tmpvar_1.z;
  tmpvar_4[2].y = tmpvar_2.z;
  tmpvar_4[2].z = tmpvar_3.z;
  lowp vec4 cse_5;
  cse_5 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_7;
  packednormal_7 = tmpvar_6;
  mediump vec3 tmpvar_8;
  tmpvar_8 = normalize(((
    (packednormal_7.xyz * 2.0)
   - 1.0) * tmpvar_4));
  mediump vec3 tmpvar_9;
  tmpvar_9 = normalize(xlv_TEXCOORD1);
  mediump vec4 sg_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_10 = tmpvar_11;
  mediump vec3 tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = (1.0 - max (max (sg_10.x, sg_10.y), sg_10.z));
  tmpvar_12 = ((_Color.xyz * cse_5.xyz) * tmpvar_13);
  mediump float occ_14;
  lowp float tmpvar_15;
  tmpvar_15 = texture (_OcclusionMap, xlv_TEXCOORD0.xy).y;
  occ_14 = tmpvar_15;
  mediump float tmpvar_16;
  tmpvar_16 = ((1.0 - _OcclusionStrength) + (occ_14 * _OcclusionStrength));
  highp vec3 tmpvar_17;
  highp vec4 tmpvar_18;
  mediump vec3 tmpvar_19;
  tmpvar_19 = -(tmpvar_9);
  tmpvar_17 = tmpvar_19;
  tmpvar_18 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_20;
  mediump vec3 tmpvar_21;
  mediump vec4 tmpvar_22;
  tmpvar_22.w = 1.0;
  tmpvar_22.xyz = tmpvar_8;
  mediump vec3 x1_23;
  x1_23.x = dot (unity_SHAr, tmpvar_22);
  x1_23.y = dot (unity_SHAg, tmpvar_22);
  x1_23.z = dot (unity_SHAb, tmpvar_22);
  tmpvar_20 = (xlv_TEXCOORD5.xyz + x1_23);
  tmpvar_20 = (tmpvar_20 * tmpvar_16);
  mediump vec3 worldNormal_24;
  highp vec3 tmpvar_25;
  highp vec3 I_26;
  I_26 = -(tmpvar_17);
  tmpvar_25 = (I_26 - (2.0 * (
    dot (tmpvar_8, I_26)
   * tmpvar_8)));
  worldNormal_24 = tmpvar_25;
  mediump vec4 hdr_27;
  hdr_27 = tmpvar_18;
  highp float mip_28;
  mediump float tmpvar_29;
  tmpvar_29 = (pow ((1.0 - sg_10.w), 0.75) * 7.0);
  mip_28 = tmpvar_29;
  highp vec4 tmpvar_30;
  tmpvar_30.xyz = worldNormal_24;
  tmpvar_30.w = mip_28;
  lowp vec4 tmpvar_31;
  tmpvar_31 = textureLod (unity_SpecCube0, tmpvar_30.xyz, mip_28);
  mediump vec4 tmpvar_32;
  tmpvar_32 = tmpvar_31;
  tmpvar_21 = ((hdr_27.x * tmpvar_32.w) * tmpvar_32.xyz);
  tmpvar_21 = (tmpvar_21 * tmpvar_16);
  mediump float x_33;
  x_33 = (1.0 - max (0.0, dot (tmpvar_8, 
    -(tmpvar_9)
  )));
  mediump vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = ((tmpvar_20 * tmpvar_12) + (tmpvar_21 * mix (sg_10.xyz, vec3(
    clamp ((sg_10.w + (1.0 - tmpvar_13)), 0.0, 1.0)
  ), vec3(
    (((x_33 * x_33) * x_33) * x_33)
  ))));
  lowp vec4 tmpvar_35;
  tmpvar_35 = texture (_EmissionMap, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_36;
  tmpvar_36.xyz = tmpvar_12;
  tmpvar_36.w = tmpvar_16;
  mediump vec4 tmpvar_37;
  tmpvar_37.xyz = sg_10.xyz;
  tmpvar_37.w = sg_10.w;
  mediump vec4 tmpvar_38;
  tmpvar_38.w = 1.0;
  tmpvar_38.xyz = ((tmpvar_8 * 0.5) + 0.5);
  mediump vec4 tmpvar_39;
  tmpvar_39.w = 1.0;
  tmpvar_39.xyz = (tmpvar_34.xyz + (tmpvar_35.xyz * _EmissionColor.xyz));
  _glesFragData[0] = tmpvar_36;
  _glesFragData[1] = tmpvar_37;
  _glesFragData[2] = tmpvar_38;
  _glesFragData[3] = tmpvar_39;
}



#endif"
}
}
Program "fp" {
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "_EMISSION" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "_NORMALMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "_NORMALMAP" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "UNITY_HDR_ON" "_EMISSION" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES3"
}
}
 }
}
SubShader { 
 LOD 150
 Tags { "RenderType"="Opaque" "PerformanceChecks"="False" }
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  ZWrite [_ZWrite]
  Blend [_SrcBlend] [_DstBlend]
  GpuProgramID 360936
Program "vp" {
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_10;
  texcoord_10.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_2;
  } else {
    tmpvar_11 = tmpvar_3;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_13;
  norm_13 = tmpvar_1;
  highp vec4 v_14;
  v_14.x = _World2Object[0].x;
  v_14.y = _World2Object[1].x;
  v_14.z = _World2Object[2].x;
  v_14.w = _World2Object[3].x;
  highp vec4 v_15;
  v_15.x = _World2Object[0].y;
  v_15.y = _World2Object[1].y;
  v_15.z = _World2Object[2].y;
  v_15.w = _World2Object[3].y;
  highp vec4 v_16;
  v_16.x = _World2Object[0].z;
  v_16.y = _World2Object[1].z;
  v_16.z = _World2Object[2].z;
  v_16.w = _World2Object[3].z;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize(((
    (v_14.xyz * norm_13.x)
   + 
    (v_15.xyz * norm_13.y)
  ) + (v_16.xyz * norm_13.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = tmpvar_17;
  mediump vec4 normal_19;
  normal_19 = tmpvar_18;
  mediump vec3 x2_20;
  mediump vec3 x1_21;
  x1_21.x = dot (unity_SHAr, normal_19);
  x1_21.y = dot (unity_SHAg, normal_19);
  x1_21.z = dot (unity_SHAb, normal_19);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (normal_19.xyzz * normal_19.yzzx);
  x2_20.x = dot (unity_SHBr, tmpvar_22);
  x2_20.y = dot (unity_SHBg, tmpvar_22);
  x2_20.z = dot (unity_SHBb, tmpvar_22);
  tmpvar_7.xyz = ((x2_20 + (unity_SHC.xyz * 
    ((normal_19.x * normal_19.x) - (normal_19.y * normal_19.y))
  )) + x1_21);
  gl_Position = tmpvar_9;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = normalize(n_12);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
uniform sampler2D _OcclusionMap;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 c_1;
  mediump vec3 tmpvar_2;
  tmpvar_2 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_3;
  cse_3 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_4;
  tmpvar_4.xyz = _SpecColor.xyz;
  tmpvar_4.w = _Glossiness;
  mediump vec3 tmpvar_5;
  mediump float tmpvar_6;
  tmpvar_6 = (1.0 - tmpvar_4.x);
  tmpvar_5 = ((_Color.xyz * cse_3.xyz) * tmpvar_6);
  mediump vec3 tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = _LightColor0.xyz;
  tmpvar_7 = tmpvar_8;
  mediump float tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_9 = tmpvar_10.y;
  highp vec3 tmpvar_11;
  highp vec4 tmpvar_12;
  mediump vec3 cse_13;
  cse_13 = -(xlv_TEXCOORD1);
  tmpvar_11 = cse_13;
  tmpvar_12 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_14;
  mediump vec3 worldNormal_15;
  highp vec3 tmpvar_16;
  highp vec3 I_17;
  I_17 = -(tmpvar_11);
  tmpvar_16 = (I_17 - (2.0 * (
    dot (tmpvar_2, I_17)
   * tmpvar_2)));
  worldNormal_15 = tmpvar_16;
  mediump vec4 hdr_18;
  hdr_18 = tmpvar_12;
  highp float mip_19;
  mediump float tmpvar_20;
  mediump float cse_21;
  cse_21 = (1.0 - _Glossiness);
  tmpvar_20 = (cse_21 * 7.0);
  mip_19 = tmpvar_20;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = worldNormal_15;
  tmpvar_22.w = mip_19;
  lowp vec4 tmpvar_23;
  tmpvar_23 = textureCube (unity_SpecCube0, tmpvar_22.xyz, mip_19);
  mediump vec4 tmpvar_24;
  tmpvar_24 = tmpvar_23;
  tmpvar_14 = ((tmpvar_24.w * hdr_18.x) * tmpvar_24.xyz);
  tmpvar_14 = (tmpvar_14 * tmpvar_9);
  mediump vec2 tmpvar_25;
  tmpvar_25.x = dot ((cse_13 - (2.0 * 
    (dot (tmpvar_2, cse_13) * tmpvar_2)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_25.y = (1.0 - clamp (dot (tmpvar_2, cse_13), 0.0, 1.0));
  mediump vec2 tmpvar_26;
  tmpvar_26 = (((tmpvar_25 * tmpvar_25) * tmpvar_25) * tmpvar_25);
  mediump vec2 tmpvar_27;
  tmpvar_27.x = tmpvar_26.x;
  tmpvar_27.y = cse_21;
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture2D (unity_NHxRoughness, tmpvar_27);
  mediump vec3 tmpvar_29;
  tmpvar_29 = (((
    ((tmpvar_5 + ((tmpvar_28.w * 16.0) * tmpvar_4.xyz)) * tmpvar_7)
   * 
    clamp (dot (tmpvar_2, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_9)
   * tmpvar_5)) + (tmpvar_14 * mix (tmpvar_4.xyz, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_6)), 0.0, 1.0)
  ), tmpvar_26.yyy)));
  mediump vec4 tmpvar_30;
  tmpvar_30.w = 1.0;
  tmpvar_30.xyz = tmpvar_29;
  c_1.w = tmpvar_30.w;
  c_1.xyz = tmpvar_29;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_31;
  xlat_varoutput_31.xyz = c_1.xyz;
  xlat_varoutput_31.w = 1.0;
  gl_FragData[0] = xlat_varoutput_31;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_10;
  texcoord_10.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_2;
  } else {
    tmpvar_11 = tmpvar_3;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_13;
  norm_13 = tmpvar_1;
  highp vec4 v_14;
  v_14.x = _World2Object[0].x;
  v_14.y = _World2Object[1].x;
  v_14.z = _World2Object[2].x;
  v_14.w = _World2Object[3].x;
  highp vec4 v_15;
  v_15.x = _World2Object[0].y;
  v_15.y = _World2Object[1].y;
  v_15.z = _World2Object[2].y;
  v_15.w = _World2Object[3].y;
  highp vec4 v_16;
  v_16.x = _World2Object[0].z;
  v_16.y = _World2Object[1].z;
  v_16.z = _World2Object[2].z;
  v_16.w = _World2Object[3].z;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize(((
    (v_14.xyz * norm_13.x)
   + 
    (v_15.xyz * norm_13.y)
  ) + (v_16.xyz * norm_13.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = tmpvar_17;
  mediump vec4 normal_19;
  normal_19 = tmpvar_18;
  mediump vec3 x2_20;
  mediump vec3 x1_21;
  x1_21.x = dot (unity_SHAr, normal_19);
  x1_21.y = dot (unity_SHAg, normal_19);
  x1_21.z = dot (unity_SHAb, normal_19);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (normal_19.xyzz * normal_19.yzzx);
  x2_20.x = dot (unity_SHBr, tmpvar_22);
  x2_20.y = dot (unity_SHBg, tmpvar_22);
  x2_20.z = dot (unity_SHBb, tmpvar_22);
  tmpvar_7.xyz = ((x2_20 + (unity_SHC.xyz * 
    ((normal_19.x * normal_19.x) - (normal_19.y * normal_19.y))
  )) + x1_21);
  gl_Position = tmpvar_9;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = normalize(n_12);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
uniform sampler2D _OcclusionMap;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 c_1;
  mediump vec3 tmpvar_2;
  tmpvar_2 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_3;
  cse_3 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_4;
  tmpvar_4.xyz = _SpecColor.xyz;
  tmpvar_4.w = _Glossiness;
  mediump vec3 tmpvar_5;
  mediump float tmpvar_6;
  tmpvar_6 = (1.0 - tmpvar_4.x);
  tmpvar_5 = ((_Color.xyz * cse_3.xyz) * tmpvar_6);
  mediump vec3 tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = _LightColor0.xyz;
  tmpvar_7 = tmpvar_8;
  mediump float tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_9 = tmpvar_10.y;
  highp vec3 tmpvar_11;
  highp vec4 tmpvar_12;
  mediump vec3 cse_13;
  cse_13 = -(xlv_TEXCOORD1);
  tmpvar_11 = cse_13;
  tmpvar_12 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_14;
  mediump vec3 worldNormal_15;
  highp vec3 tmpvar_16;
  highp vec3 I_17;
  I_17 = -(tmpvar_11);
  tmpvar_16 = (I_17 - (2.0 * (
    dot (tmpvar_2, I_17)
   * tmpvar_2)));
  worldNormal_15 = tmpvar_16;
  mediump vec4 hdr_18;
  hdr_18 = tmpvar_12;
  highp float mip_19;
  mediump float tmpvar_20;
  mediump float cse_21;
  cse_21 = (1.0 - _Glossiness);
  tmpvar_20 = (cse_21 * 7.0);
  mip_19 = tmpvar_20;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = worldNormal_15;
  tmpvar_22.w = mip_19;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture (unity_SpecCube0, tmpvar_22.xyz, mip_19);
  mediump vec4 tmpvar_24;
  tmpvar_24 = tmpvar_23;
  tmpvar_14 = ((tmpvar_24.w * hdr_18.x) * tmpvar_24.xyz);
  tmpvar_14 = (tmpvar_14 * tmpvar_9);
  mediump vec2 tmpvar_25;
  tmpvar_25.x = dot ((cse_13 - (2.0 * 
    (dot (tmpvar_2, cse_13) * tmpvar_2)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_25.y = (1.0 - clamp (dot (tmpvar_2, cse_13), 0.0, 1.0));
  mediump vec2 tmpvar_26;
  tmpvar_26 = (((tmpvar_25 * tmpvar_25) * tmpvar_25) * tmpvar_25);
  mediump vec2 tmpvar_27;
  tmpvar_27.x = tmpvar_26.x;
  tmpvar_27.y = cse_21;
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture (unity_NHxRoughness, tmpvar_27);
  mediump vec3 tmpvar_29;
  tmpvar_29 = (((
    ((tmpvar_5 + ((tmpvar_28.w * 16.0) * tmpvar_4.xyz)) * tmpvar_7)
   * 
    clamp (dot (tmpvar_2, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_9)
   * tmpvar_5)) + (tmpvar_14 * mix (tmpvar_4.xyz, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_6)), 0.0, 1.0)
  ), tmpvar_26.yyy)));
  mediump vec4 tmpvar_30;
  tmpvar_30.w = 1.0;
  tmpvar_30.xyz = tmpvar_29;
  c_1.w = tmpvar_30.w;
  c_1.xyz = tmpvar_29;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_31;
  xlat_varoutput_31.xyz = c_1.xyz;
  xlat_varoutput_31.w = 1.0;
  _glesFragData[0] = xlat_varoutput_31;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_10;
  tmpvar_10 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_11;
  texcoord_11.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_12;
  if ((_UVSec == 0.0)) {
    tmpvar_12 = tmpvar_2;
  } else {
    tmpvar_12 = tmpvar_3;
  };
  texcoord_11.zw = ((tmpvar_12 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_13;
  n_13 = (tmpvar_9.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_14;
  norm_14 = tmpvar_1;
  highp vec4 v_15;
  v_15.x = _World2Object[0].x;
  v_15.y = _World2Object[1].x;
  v_15.z = _World2Object[2].x;
  v_15.w = _World2Object[3].x;
  highp vec4 v_16;
  v_16.x = _World2Object[0].y;
  v_16.y = _World2Object[1].y;
  v_16.z = _World2Object[2].y;
  v_16.w = _World2Object[3].y;
  highp vec4 v_17;
  v_17.x = _World2Object[0].z;
  v_17.y = _World2Object[1].z;
  v_17.z = _World2Object[2].z;
  v_17.w = _World2Object[3].z;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(((
    (v_15.xyz * norm_14.x)
   + 
    (v_16.xyz * norm_14.y)
  ) + (v_17.xyz * norm_14.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_8 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = tmpvar_18;
  mediump vec4 normal_21;
  normal_21 = tmpvar_20;
  mediump vec3 x2_22;
  mediump vec3 x1_23;
  x1_23.x = dot (unity_SHAr, normal_21);
  x1_23.y = dot (unity_SHAg, normal_21);
  x1_23.z = dot (unity_SHAb, normal_21);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_21.xyzz * normal_21.yzzx);
  x2_22.x = dot (unity_SHBr, tmpvar_24);
  x2_22.y = dot (unity_SHBg, tmpvar_24);
  x2_22.z = dot (unity_SHBb, tmpvar_24);
  tmpvar_7.xyz = ((x2_22 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )) + x1_23);
  gl_Position = tmpvar_10;
  xlv_TEXCOORD0 = texcoord_11;
  xlv_TEXCOORD1 = normalize(n_13);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform sampler2D _ShadowMapTexture;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_4;
  cse_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_5;
  tmpvar_5.xyz = _SpecColor.xyz;
  tmpvar_5.w = _Glossiness;
  mediump vec3 tmpvar_6;
  mediump float tmpvar_7;
  tmpvar_7 = (1.0 - tmpvar_5.x);
  tmpvar_6 = ((_Color.xyz * cse_4.xyz) * tmpvar_7);
  mediump vec3 tmpvar_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = _LightColor0.xyz;
  tmpvar_8 = tmpvar_9;
  lowp float tmpvar_10;
  mediump float dist_11;
  lowp float tmpvar_12;
  tmpvar_12 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_11 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = max (float((dist_11 > 
    (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w)
  )), _LightShadowData.x);
  tmpvar_10 = tmpvar_13;
  atten_2 = tmpvar_10;
  mediump float tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_14 = tmpvar_15.y;
  highp vec3 tmpvar_16;
  highp vec4 tmpvar_17;
  mediump vec3 cse_18;
  cse_18 = -(xlv_TEXCOORD1);
  tmpvar_16 = cse_18;
  tmpvar_17 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_19;
  mediump vec3 worldNormal_20;
  highp vec3 tmpvar_21;
  highp vec3 I_22;
  I_22 = -(tmpvar_16);
  tmpvar_21 = (I_22 - (2.0 * (
    dot (tmpvar_3, I_22)
   * tmpvar_3)));
  worldNormal_20 = tmpvar_21;
  mediump vec4 hdr_23;
  hdr_23 = tmpvar_17;
  highp float mip_24;
  mediump float tmpvar_25;
  mediump float cse_26;
  cse_26 = (1.0 - _Glossiness);
  tmpvar_25 = (cse_26 * 7.0);
  mip_24 = tmpvar_25;
  highp vec4 tmpvar_27;
  tmpvar_27.xyz = worldNormal_20;
  tmpvar_27.w = mip_24;
  lowp vec4 tmpvar_28;
  tmpvar_28 = textureCube (unity_SpecCube0, tmpvar_27.xyz, mip_24);
  mediump vec4 tmpvar_29;
  tmpvar_29 = tmpvar_28;
  tmpvar_19 = ((tmpvar_29.w * hdr_23.x) * tmpvar_29.xyz);
  tmpvar_19 = (tmpvar_19 * tmpvar_14);
  mediump vec2 tmpvar_30;
  tmpvar_30.x = dot ((cse_18 - (2.0 * 
    (dot (tmpvar_3, cse_18) * tmpvar_3)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_30.y = (1.0 - clamp (dot (tmpvar_3, cse_18), 0.0, 1.0));
  mediump vec2 tmpvar_31;
  tmpvar_31 = (((tmpvar_30 * tmpvar_30) * tmpvar_30) * tmpvar_30);
  mediump vec2 tmpvar_32;
  tmpvar_32.x = tmpvar_31.x;
  tmpvar_32.y = cse_26;
  lowp vec4 tmpvar_33;
  tmpvar_33 = texture2D (unity_NHxRoughness, tmpvar_32);
  mediump vec3 tmpvar_34;
  tmpvar_34 = (((
    ((tmpvar_6 + ((tmpvar_33.w * 16.0) * tmpvar_5.xyz)) * (tmpvar_8 * atten_2))
   * 
    clamp (dot (tmpvar_3, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_14)
   * tmpvar_6)) + (tmpvar_19 * mix (tmpvar_5.xyz, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_7)), 0.0, 1.0)
  ), tmpvar_31.yyy)));
  mediump vec4 tmpvar_35;
  tmpvar_35.w = 1.0;
  tmpvar_35.xyz = tmpvar_34;
  c_1.w = tmpvar_35.w;
  c_1.xyz = tmpvar_34;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_36;
  xlat_varoutput_36.xyz = c_1.xyz;
  xlat_varoutput_36.w = 1.0;
  gl_FragData[0] = xlat_varoutput_36;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_10;
  texcoord_10.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_2;
  } else {
    tmpvar_11 = tmpvar_3;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_13;
  norm_13 = tmpvar_1;
  highp vec4 v_14;
  v_14.x = _World2Object[0].x;
  v_14.y = _World2Object[1].x;
  v_14.z = _World2Object[2].x;
  v_14.w = _World2Object[3].x;
  highp vec4 v_15;
  v_15.x = _World2Object[0].y;
  v_15.y = _World2Object[1].y;
  v_15.z = _World2Object[2].y;
  v_15.w = _World2Object[3].y;
  highp vec4 v_16;
  v_16.x = _World2Object[0].z;
  v_16.y = _World2Object[1].z;
  v_16.z = _World2Object[2].z;
  v_16.w = _World2Object[3].z;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize(((
    (v_14.xyz * norm_13.x)
   + 
    (v_15.xyz * norm_13.y)
  ) + (v_16.xyz * norm_13.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = tmpvar_17;
  mediump vec4 normal_19;
  normal_19 = tmpvar_18;
  mediump vec3 x2_20;
  mediump vec3 x1_21;
  x1_21.x = dot (unity_SHAr, normal_19);
  x1_21.y = dot (unity_SHAg, normal_19);
  x1_21.z = dot (unity_SHAb, normal_19);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (normal_19.xyzz * normal_19.yzzx);
  x2_20.x = dot (unity_SHBr, tmpvar_22);
  x2_20.y = dot (unity_SHBg, tmpvar_22);
  x2_20.z = dot (unity_SHBb, tmpvar_22);
  tmpvar_7.xyz = ((x2_20 + (unity_SHC.xyz * 
    ((normal_19.x * normal_19.x) - (normal_19.y * normal_19.y))
  )) + x1_21);
  highp vec3 lightColor0_23;
  lightColor0_23 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_24;
  lightColor1_24 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_25;
  lightColor2_25 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_26;
  lightColor3_26 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_27;
  lightAttenSq_27 = unity_4LightAtten0;
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_4LightPosX0 - tmpvar_8.x);
  highp vec4 tmpvar_29;
  tmpvar_29 = (unity_4LightPosY0 - tmpvar_8.y);
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_4LightPosZ0 - tmpvar_8.z);
  highp vec4 tmpvar_31;
  tmpvar_31 = (((tmpvar_28 * tmpvar_28) + (tmpvar_29 * tmpvar_29)) + (tmpvar_30 * tmpvar_30));
  highp vec4 tmpvar_32;
  tmpvar_32 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_28 * tmpvar_17.x) + (tmpvar_29 * tmpvar_17.y)) + (tmpvar_30 * tmpvar_17.z))
   * 
    inversesqrt(tmpvar_31)
  )) * (1.0/((1.0 + 
    (tmpvar_31 * lightAttenSq_27)
  ))));
  highp vec3 tmpvar_33;
  tmpvar_33 = (tmpvar_7.xyz + ((
    ((lightColor0_23 * tmpvar_32.x) + (lightColor1_24 * tmpvar_32.y))
   + 
    (lightColor2_25 * tmpvar_32.z)
  ) + (lightColor3_26 * tmpvar_32.w)));
  tmpvar_7.xyz = tmpvar_33;
  gl_Position = tmpvar_9;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = normalize(n_12);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
uniform sampler2D _OcclusionMap;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 c_1;
  mediump vec3 tmpvar_2;
  tmpvar_2 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_3;
  cse_3 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_4;
  tmpvar_4.xyz = _SpecColor.xyz;
  tmpvar_4.w = _Glossiness;
  mediump vec3 tmpvar_5;
  mediump float tmpvar_6;
  tmpvar_6 = (1.0 - tmpvar_4.x);
  tmpvar_5 = ((_Color.xyz * cse_3.xyz) * tmpvar_6);
  mediump vec3 tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = _LightColor0.xyz;
  tmpvar_7 = tmpvar_8;
  mediump float tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_9 = tmpvar_10.y;
  highp vec3 tmpvar_11;
  highp vec4 tmpvar_12;
  mediump vec3 cse_13;
  cse_13 = -(xlv_TEXCOORD1);
  tmpvar_11 = cse_13;
  tmpvar_12 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_14;
  mediump vec3 worldNormal_15;
  highp vec3 tmpvar_16;
  highp vec3 I_17;
  I_17 = -(tmpvar_11);
  tmpvar_16 = (I_17 - (2.0 * (
    dot (tmpvar_2, I_17)
   * tmpvar_2)));
  worldNormal_15 = tmpvar_16;
  mediump vec4 hdr_18;
  hdr_18 = tmpvar_12;
  highp float mip_19;
  mediump float tmpvar_20;
  mediump float cse_21;
  cse_21 = (1.0 - _Glossiness);
  tmpvar_20 = (cse_21 * 7.0);
  mip_19 = tmpvar_20;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = worldNormal_15;
  tmpvar_22.w = mip_19;
  lowp vec4 tmpvar_23;
  tmpvar_23 = textureCube (unity_SpecCube0, tmpvar_22.xyz, mip_19);
  mediump vec4 tmpvar_24;
  tmpvar_24 = tmpvar_23;
  tmpvar_14 = ((tmpvar_24.w * hdr_18.x) * tmpvar_24.xyz);
  tmpvar_14 = (tmpvar_14 * tmpvar_9);
  mediump vec2 tmpvar_25;
  tmpvar_25.x = dot ((cse_13 - (2.0 * 
    (dot (tmpvar_2, cse_13) * tmpvar_2)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_25.y = (1.0 - clamp (dot (tmpvar_2, cse_13), 0.0, 1.0));
  mediump vec2 tmpvar_26;
  tmpvar_26 = (((tmpvar_25 * tmpvar_25) * tmpvar_25) * tmpvar_25);
  mediump vec2 tmpvar_27;
  tmpvar_27.x = tmpvar_26.x;
  tmpvar_27.y = cse_21;
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture2D (unity_NHxRoughness, tmpvar_27);
  mediump vec3 tmpvar_29;
  tmpvar_29 = (((
    ((tmpvar_5 + ((tmpvar_28.w * 16.0) * tmpvar_4.xyz)) * tmpvar_7)
   * 
    clamp (dot (tmpvar_2, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_9)
   * tmpvar_5)) + (tmpvar_14 * mix (tmpvar_4.xyz, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_6)), 0.0, 1.0)
  ), tmpvar_26.yyy)));
  mediump vec4 tmpvar_30;
  tmpvar_30.w = 1.0;
  tmpvar_30.xyz = tmpvar_29;
  c_1.w = tmpvar_30.w;
  c_1.xyz = tmpvar_29;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_31;
  xlat_varoutput_31.xyz = c_1.xyz;
  xlat_varoutput_31.w = 1.0;
  gl_FragData[0] = xlat_varoutput_31;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_10;
  texcoord_10.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_2;
  } else {
    tmpvar_11 = tmpvar_3;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_13;
  norm_13 = tmpvar_1;
  highp vec4 v_14;
  v_14.x = _World2Object[0].x;
  v_14.y = _World2Object[1].x;
  v_14.z = _World2Object[2].x;
  v_14.w = _World2Object[3].x;
  highp vec4 v_15;
  v_15.x = _World2Object[0].y;
  v_15.y = _World2Object[1].y;
  v_15.z = _World2Object[2].y;
  v_15.w = _World2Object[3].y;
  highp vec4 v_16;
  v_16.x = _World2Object[0].z;
  v_16.y = _World2Object[1].z;
  v_16.z = _World2Object[2].z;
  v_16.w = _World2Object[3].z;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize(((
    (v_14.xyz * norm_13.x)
   + 
    (v_15.xyz * norm_13.y)
  ) + (v_16.xyz * norm_13.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = tmpvar_17;
  mediump vec4 normal_19;
  normal_19 = tmpvar_18;
  mediump vec3 x2_20;
  mediump vec3 x1_21;
  x1_21.x = dot (unity_SHAr, normal_19);
  x1_21.y = dot (unity_SHAg, normal_19);
  x1_21.z = dot (unity_SHAb, normal_19);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (normal_19.xyzz * normal_19.yzzx);
  x2_20.x = dot (unity_SHBr, tmpvar_22);
  x2_20.y = dot (unity_SHBg, tmpvar_22);
  x2_20.z = dot (unity_SHBb, tmpvar_22);
  tmpvar_7.xyz = ((x2_20 + (unity_SHC.xyz * 
    ((normal_19.x * normal_19.x) - (normal_19.y * normal_19.y))
  )) + x1_21);
  highp vec3 lightColor0_23;
  lightColor0_23 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_24;
  lightColor1_24 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_25;
  lightColor2_25 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_26;
  lightColor3_26 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_27;
  lightAttenSq_27 = unity_4LightAtten0;
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_4LightPosX0 - tmpvar_8.x);
  highp vec4 tmpvar_29;
  tmpvar_29 = (unity_4LightPosY0 - tmpvar_8.y);
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_4LightPosZ0 - tmpvar_8.z);
  highp vec4 tmpvar_31;
  tmpvar_31 = (((tmpvar_28 * tmpvar_28) + (tmpvar_29 * tmpvar_29)) + (tmpvar_30 * tmpvar_30));
  highp vec4 tmpvar_32;
  tmpvar_32 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_28 * tmpvar_17.x) + (tmpvar_29 * tmpvar_17.y)) + (tmpvar_30 * tmpvar_17.z))
   * 
    inversesqrt(tmpvar_31)
  )) * (1.0/((1.0 + 
    (tmpvar_31 * lightAttenSq_27)
  ))));
  highp vec3 tmpvar_33;
  tmpvar_33 = (tmpvar_7.xyz + ((
    ((lightColor0_23 * tmpvar_32.x) + (lightColor1_24 * tmpvar_32.y))
   + 
    (lightColor2_25 * tmpvar_32.z)
  ) + (lightColor3_26 * tmpvar_32.w)));
  tmpvar_7.xyz = tmpvar_33;
  gl_Position = tmpvar_9;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = normalize(n_12);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
uniform sampler2D _OcclusionMap;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 c_1;
  mediump vec3 tmpvar_2;
  tmpvar_2 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_3;
  cse_3 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_4;
  tmpvar_4.xyz = _SpecColor.xyz;
  tmpvar_4.w = _Glossiness;
  mediump vec3 tmpvar_5;
  mediump float tmpvar_6;
  tmpvar_6 = (1.0 - tmpvar_4.x);
  tmpvar_5 = ((_Color.xyz * cse_3.xyz) * tmpvar_6);
  mediump vec3 tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = _LightColor0.xyz;
  tmpvar_7 = tmpvar_8;
  mediump float tmpvar_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_9 = tmpvar_10.y;
  highp vec3 tmpvar_11;
  highp vec4 tmpvar_12;
  mediump vec3 cse_13;
  cse_13 = -(xlv_TEXCOORD1);
  tmpvar_11 = cse_13;
  tmpvar_12 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_14;
  mediump vec3 worldNormal_15;
  highp vec3 tmpvar_16;
  highp vec3 I_17;
  I_17 = -(tmpvar_11);
  tmpvar_16 = (I_17 - (2.0 * (
    dot (tmpvar_2, I_17)
   * tmpvar_2)));
  worldNormal_15 = tmpvar_16;
  mediump vec4 hdr_18;
  hdr_18 = tmpvar_12;
  highp float mip_19;
  mediump float tmpvar_20;
  mediump float cse_21;
  cse_21 = (1.0 - _Glossiness);
  tmpvar_20 = (cse_21 * 7.0);
  mip_19 = tmpvar_20;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = worldNormal_15;
  tmpvar_22.w = mip_19;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture (unity_SpecCube0, tmpvar_22.xyz, mip_19);
  mediump vec4 tmpvar_24;
  tmpvar_24 = tmpvar_23;
  tmpvar_14 = ((tmpvar_24.w * hdr_18.x) * tmpvar_24.xyz);
  tmpvar_14 = (tmpvar_14 * tmpvar_9);
  mediump vec2 tmpvar_25;
  tmpvar_25.x = dot ((cse_13 - (2.0 * 
    (dot (tmpvar_2, cse_13) * tmpvar_2)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_25.y = (1.0 - clamp (dot (tmpvar_2, cse_13), 0.0, 1.0));
  mediump vec2 tmpvar_26;
  tmpvar_26 = (((tmpvar_25 * tmpvar_25) * tmpvar_25) * tmpvar_25);
  mediump vec2 tmpvar_27;
  tmpvar_27.x = tmpvar_26.x;
  tmpvar_27.y = cse_21;
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture (unity_NHxRoughness, tmpvar_27);
  mediump vec3 tmpvar_29;
  tmpvar_29 = (((
    ((tmpvar_5 + ((tmpvar_28.w * 16.0) * tmpvar_4.xyz)) * tmpvar_7)
   * 
    clamp (dot (tmpvar_2, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_9)
   * tmpvar_5)) + (tmpvar_14 * mix (tmpvar_4.xyz, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_6)), 0.0, 1.0)
  ), tmpvar_26.yyy)));
  mediump vec4 tmpvar_30;
  tmpvar_30.w = 1.0;
  tmpvar_30.xyz = tmpvar_29;
  c_1.w = tmpvar_30.w;
  c_1.xyz = tmpvar_29;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_31;
  xlat_varoutput_31.xyz = c_1.xyz;
  xlat_varoutput_31.w = 1.0;
  _glesFragData[0] = xlat_varoutput_31;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_10;
  tmpvar_10 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_11;
  texcoord_11.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_12;
  if ((_UVSec == 0.0)) {
    tmpvar_12 = tmpvar_2;
  } else {
    tmpvar_12 = tmpvar_3;
  };
  texcoord_11.zw = ((tmpvar_12 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_13;
  n_13 = (tmpvar_9.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_14;
  norm_14 = tmpvar_1;
  highp vec4 v_15;
  v_15.x = _World2Object[0].x;
  v_15.y = _World2Object[1].x;
  v_15.z = _World2Object[2].x;
  v_15.w = _World2Object[3].x;
  highp vec4 v_16;
  v_16.x = _World2Object[0].y;
  v_16.y = _World2Object[1].y;
  v_16.z = _World2Object[2].y;
  v_16.w = _World2Object[3].y;
  highp vec4 v_17;
  v_17.x = _World2Object[0].z;
  v_17.y = _World2Object[1].z;
  v_17.z = _World2Object[2].z;
  v_17.w = _World2Object[3].z;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(((
    (v_15.xyz * norm_14.x)
   + 
    (v_16.xyz * norm_14.y)
  ) + (v_17.xyz * norm_14.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_8 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = tmpvar_18;
  mediump vec4 normal_21;
  normal_21 = tmpvar_20;
  mediump vec3 x2_22;
  mediump vec3 x1_23;
  x1_23.x = dot (unity_SHAr, normal_21);
  x1_23.y = dot (unity_SHAg, normal_21);
  x1_23.z = dot (unity_SHAb, normal_21);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_21.xyzz * normal_21.yzzx);
  x2_22.x = dot (unity_SHBr, tmpvar_24);
  x2_22.y = dot (unity_SHBg, tmpvar_24);
  x2_22.z = dot (unity_SHBb, tmpvar_24);
  tmpvar_7.xyz = ((x2_22 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )) + x1_23);
  highp vec3 lightColor0_25;
  lightColor0_25 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_26;
  lightColor1_26 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_27;
  lightColor2_27 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_28;
  lightColor3_28 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_29;
  lightAttenSq_29 = unity_4LightAtten0;
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_4LightPosX0 - tmpvar_9.x);
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_4LightPosY0 - tmpvar_9.y);
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosZ0 - tmpvar_9.z);
  highp vec4 tmpvar_33;
  tmpvar_33 = (((tmpvar_30 * tmpvar_30) + (tmpvar_31 * tmpvar_31)) + (tmpvar_32 * tmpvar_32));
  highp vec4 tmpvar_34;
  tmpvar_34 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_30 * tmpvar_18.x) + (tmpvar_31 * tmpvar_18.y)) + (tmpvar_32 * tmpvar_18.z))
   * 
    inversesqrt(tmpvar_33)
  )) * (1.0/((1.0 + 
    (tmpvar_33 * lightAttenSq_29)
  ))));
  highp vec3 tmpvar_35;
  tmpvar_35 = (tmpvar_7.xyz + ((
    ((lightColor0_25 * tmpvar_34.x) + (lightColor1_26 * tmpvar_34.y))
   + 
    (lightColor2_27 * tmpvar_34.z)
  ) + (lightColor3_28 * tmpvar_34.w)));
  tmpvar_7.xyz = tmpvar_35;
  gl_Position = tmpvar_10;
  xlv_TEXCOORD0 = texcoord_11;
  xlv_TEXCOORD1 = normalize(n_13);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform sampler2D _ShadowMapTexture;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_4;
  cse_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_5;
  tmpvar_5.xyz = _SpecColor.xyz;
  tmpvar_5.w = _Glossiness;
  mediump vec3 tmpvar_6;
  mediump float tmpvar_7;
  tmpvar_7 = (1.0 - tmpvar_5.x);
  tmpvar_6 = ((_Color.xyz * cse_4.xyz) * tmpvar_7);
  mediump vec3 tmpvar_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = _LightColor0.xyz;
  tmpvar_8 = tmpvar_9;
  lowp float tmpvar_10;
  mediump float dist_11;
  lowp float tmpvar_12;
  tmpvar_12 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_11 = tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = max (float((dist_11 > 
    (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w)
  )), _LightShadowData.x);
  tmpvar_10 = tmpvar_13;
  atten_2 = tmpvar_10;
  mediump float tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_14 = tmpvar_15.y;
  highp vec3 tmpvar_16;
  highp vec4 tmpvar_17;
  mediump vec3 cse_18;
  cse_18 = -(xlv_TEXCOORD1);
  tmpvar_16 = cse_18;
  tmpvar_17 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_19;
  mediump vec3 worldNormal_20;
  highp vec3 tmpvar_21;
  highp vec3 I_22;
  I_22 = -(tmpvar_16);
  tmpvar_21 = (I_22 - (2.0 * (
    dot (tmpvar_3, I_22)
   * tmpvar_3)));
  worldNormal_20 = tmpvar_21;
  mediump vec4 hdr_23;
  hdr_23 = tmpvar_17;
  highp float mip_24;
  mediump float tmpvar_25;
  mediump float cse_26;
  cse_26 = (1.0 - _Glossiness);
  tmpvar_25 = (cse_26 * 7.0);
  mip_24 = tmpvar_25;
  highp vec4 tmpvar_27;
  tmpvar_27.xyz = worldNormal_20;
  tmpvar_27.w = mip_24;
  lowp vec4 tmpvar_28;
  tmpvar_28 = textureCube (unity_SpecCube0, tmpvar_27.xyz, mip_24);
  mediump vec4 tmpvar_29;
  tmpvar_29 = tmpvar_28;
  tmpvar_19 = ((tmpvar_29.w * hdr_23.x) * tmpvar_29.xyz);
  tmpvar_19 = (tmpvar_19 * tmpvar_14);
  mediump vec2 tmpvar_30;
  tmpvar_30.x = dot ((cse_18 - (2.0 * 
    (dot (tmpvar_3, cse_18) * tmpvar_3)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_30.y = (1.0 - clamp (dot (tmpvar_3, cse_18), 0.0, 1.0));
  mediump vec2 tmpvar_31;
  tmpvar_31 = (((tmpvar_30 * tmpvar_30) * tmpvar_30) * tmpvar_30);
  mediump vec2 tmpvar_32;
  tmpvar_32.x = tmpvar_31.x;
  tmpvar_32.y = cse_26;
  lowp vec4 tmpvar_33;
  tmpvar_33 = texture2D (unity_NHxRoughness, tmpvar_32);
  mediump vec3 tmpvar_34;
  tmpvar_34 = (((
    ((tmpvar_6 + ((tmpvar_33.w * 16.0) * tmpvar_5.xyz)) * (tmpvar_8 * atten_2))
   * 
    clamp (dot (tmpvar_3, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_14)
   * tmpvar_6)) + (tmpvar_19 * mix (tmpvar_5.xyz, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_7)), 0.0, 1.0)
  ), tmpvar_31.yyy)));
  mediump vec4 tmpvar_35;
  tmpvar_35.w = 1.0;
  tmpvar_35.xyz = tmpvar_34;
  c_1.w = tmpvar_35.w;
  c_1.xyz = tmpvar_34;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_36;
  xlat_varoutput_36.xyz = c_1.xyz;
  xlat_varoutput_36.w = 1.0;
  gl_FragData[0] = xlat_varoutput_36;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_10;
  tmpvar_10 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_11;
  texcoord_11.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_12;
  if ((_UVSec == 0.0)) {
    tmpvar_12 = tmpvar_2;
  } else {
    tmpvar_12 = tmpvar_3;
  };
  texcoord_11.zw = ((tmpvar_12 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_13;
  n_13 = (tmpvar_9.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_14;
  norm_14 = tmpvar_1;
  highp vec4 v_15;
  v_15.x = _World2Object[0].x;
  v_15.y = _World2Object[1].x;
  v_15.z = _World2Object[2].x;
  v_15.w = _World2Object[3].x;
  highp vec4 v_16;
  v_16.x = _World2Object[0].y;
  v_16.y = _World2Object[1].y;
  v_16.z = _World2Object[2].y;
  v_16.w = _World2Object[3].y;
  highp vec4 v_17;
  v_17.x = _World2Object[0].z;
  v_17.y = _World2Object[1].z;
  v_17.z = _World2Object[2].z;
  v_17.w = _World2Object[3].z;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(((
    (v_15.xyz * norm_14.x)
   + 
    (v_16.xyz * norm_14.y)
  ) + (v_17.xyz * norm_14.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_8 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = tmpvar_18;
  mediump vec4 normal_21;
  normal_21 = tmpvar_20;
  mediump vec3 x2_22;
  mediump vec3 x1_23;
  x1_23.x = dot (unity_SHAr, normal_21);
  x1_23.y = dot (unity_SHAg, normal_21);
  x1_23.z = dot (unity_SHAb, normal_21);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_21.xyzz * normal_21.yzzx);
  x2_22.x = dot (unity_SHBr, tmpvar_24);
  x2_22.y = dot (unity_SHBg, tmpvar_24);
  x2_22.z = dot (unity_SHBb, tmpvar_24);
  tmpvar_7.xyz = ((x2_22 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )) + x1_23);
  gl_Position = tmpvar_10;
  xlv_TEXCOORD0 = texcoord_11;
  xlv_TEXCOORD1 = normalize(n_13);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform lowp sampler2DShadow _ShadowMapTexture;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_4;
  cse_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_5;
  tmpvar_5.xyz = _SpecColor.xyz;
  tmpvar_5.w = _Glossiness;
  mediump vec3 tmpvar_6;
  mediump float tmpvar_7;
  tmpvar_7 = (1.0 - tmpvar_5.x);
  tmpvar_6 = ((_Color.xyz * cse_4.xyz) * tmpvar_7);
  mediump vec3 tmpvar_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = _LightColor0.xyz;
  tmpvar_8 = tmpvar_9;
  lowp float shadow_10;
  lowp float tmpvar_11;
  tmpvar_11 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  mediump float tmpvar_12;
  tmpvar_12 = (_LightShadowData.x + (tmpvar_11 * (1.0 - _LightShadowData.x)));
  shadow_10 = tmpvar_12;
  atten_2 = shadow_10;
  mediump float tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_13 = tmpvar_14.y;
  highp vec3 tmpvar_15;
  highp vec4 tmpvar_16;
  mediump vec3 cse_17;
  cse_17 = -(xlv_TEXCOORD1);
  tmpvar_15 = cse_17;
  tmpvar_16 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_18;
  mediump vec3 worldNormal_19;
  highp vec3 tmpvar_20;
  highp vec3 I_21;
  I_21 = -(tmpvar_15);
  tmpvar_20 = (I_21 - (2.0 * (
    dot (tmpvar_3, I_21)
   * tmpvar_3)));
  worldNormal_19 = tmpvar_20;
  mediump vec4 hdr_22;
  hdr_22 = tmpvar_16;
  highp float mip_23;
  mediump float tmpvar_24;
  mediump float cse_25;
  cse_25 = (1.0 - _Glossiness);
  tmpvar_24 = (cse_25 * 7.0);
  mip_23 = tmpvar_24;
  highp vec4 tmpvar_26;
  tmpvar_26.xyz = worldNormal_19;
  tmpvar_26.w = mip_23;
  lowp vec4 tmpvar_27;
  tmpvar_27 = textureCube (unity_SpecCube0, tmpvar_26.xyz, mip_23);
  mediump vec4 tmpvar_28;
  tmpvar_28 = tmpvar_27;
  tmpvar_18 = ((tmpvar_28.w * hdr_22.x) * tmpvar_28.xyz);
  tmpvar_18 = (tmpvar_18 * tmpvar_13);
  mediump vec2 tmpvar_29;
  tmpvar_29.x = dot ((cse_17 - (2.0 * 
    (dot (tmpvar_3, cse_17) * tmpvar_3)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_29.y = (1.0 - clamp (dot (tmpvar_3, cse_17), 0.0, 1.0));
  mediump vec2 tmpvar_30;
  tmpvar_30 = (((tmpvar_29 * tmpvar_29) * tmpvar_29) * tmpvar_29);
  mediump vec2 tmpvar_31;
  tmpvar_31.x = tmpvar_30.x;
  tmpvar_31.y = cse_25;
  lowp vec4 tmpvar_32;
  tmpvar_32 = texture2D (unity_NHxRoughness, tmpvar_31);
  mediump vec3 tmpvar_33;
  tmpvar_33 = (((
    ((tmpvar_6 + ((tmpvar_32.w * 16.0) * tmpvar_5.xyz)) * (tmpvar_8 * atten_2))
   * 
    clamp (dot (tmpvar_3, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_13)
   * tmpvar_6)) + (tmpvar_18 * mix (tmpvar_5.xyz, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_7)), 0.0, 1.0)
  ), tmpvar_30.yyy)));
  mediump vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = tmpvar_33;
  c_1.w = tmpvar_34.w;
  c_1.xyz = tmpvar_33;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_35;
  xlat_varoutput_35.xyz = c_1.xyz;
  xlat_varoutput_35.w = 1.0;
  gl_FragData[0] = xlat_varoutput_35;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
out mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_10;
  tmpvar_10 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_11;
  texcoord_11.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_12;
  if ((_UVSec == 0.0)) {
    tmpvar_12 = tmpvar_2;
  } else {
    tmpvar_12 = tmpvar_3;
  };
  texcoord_11.zw = ((tmpvar_12 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_13;
  n_13 = (tmpvar_9.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_14;
  norm_14 = tmpvar_1;
  highp vec4 v_15;
  v_15.x = _World2Object[0].x;
  v_15.y = _World2Object[1].x;
  v_15.z = _World2Object[2].x;
  v_15.w = _World2Object[3].x;
  highp vec4 v_16;
  v_16.x = _World2Object[0].y;
  v_16.y = _World2Object[1].y;
  v_16.z = _World2Object[2].y;
  v_16.w = _World2Object[3].y;
  highp vec4 v_17;
  v_17.x = _World2Object[0].z;
  v_17.y = _World2Object[1].z;
  v_17.z = _World2Object[2].z;
  v_17.w = _World2Object[3].z;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(((
    (v_15.xyz * norm_14.x)
   + 
    (v_16.xyz * norm_14.y)
  ) + (v_17.xyz * norm_14.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_8 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = tmpvar_18;
  mediump vec4 normal_21;
  normal_21 = tmpvar_20;
  mediump vec3 x2_22;
  mediump vec3 x1_23;
  x1_23.x = dot (unity_SHAr, normal_21);
  x1_23.y = dot (unity_SHAg, normal_21);
  x1_23.z = dot (unity_SHAb, normal_21);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_21.xyzz * normal_21.yzzx);
  x2_22.x = dot (unity_SHBr, tmpvar_24);
  x2_22.y = dot (unity_SHBg, tmpvar_24);
  x2_22.z = dot (unity_SHBb, tmpvar_24);
  tmpvar_7.xyz = ((x2_22 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )) + x1_23);
  gl_Position = tmpvar_10;
  xlv_TEXCOORD0 = texcoord_11;
  xlv_TEXCOORD1 = normalize(n_13);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_8;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform lowp sampler2DShadow _ShadowMapTexture;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
in mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_4;
  cse_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_5;
  tmpvar_5.xyz = _SpecColor.xyz;
  tmpvar_5.w = _Glossiness;
  mediump vec3 tmpvar_6;
  mediump float tmpvar_7;
  tmpvar_7 = (1.0 - tmpvar_5.x);
  tmpvar_6 = ((_Color.xyz * cse_4.xyz) * tmpvar_7);
  mediump vec3 tmpvar_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = _LightColor0.xyz;
  tmpvar_8 = tmpvar_9;
  lowp float shadow_10;
  mediump float tmpvar_11;
  tmpvar_11 = texture (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  lowp float tmpvar_12;
  tmpvar_12 = tmpvar_11;
  mediump float tmpvar_13;
  tmpvar_13 = (_LightShadowData.x + (tmpvar_12 * (1.0 - _LightShadowData.x)));
  shadow_10 = tmpvar_13;
  atten_2 = shadow_10;
  mediump float tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_14 = tmpvar_15.y;
  highp vec3 tmpvar_16;
  highp vec4 tmpvar_17;
  mediump vec3 cse_18;
  cse_18 = -(xlv_TEXCOORD1);
  tmpvar_16 = cse_18;
  tmpvar_17 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_19;
  mediump vec3 worldNormal_20;
  highp vec3 tmpvar_21;
  highp vec3 I_22;
  I_22 = -(tmpvar_16);
  tmpvar_21 = (I_22 - (2.0 * (
    dot (tmpvar_3, I_22)
   * tmpvar_3)));
  worldNormal_20 = tmpvar_21;
  mediump vec4 hdr_23;
  hdr_23 = tmpvar_17;
  highp float mip_24;
  mediump float tmpvar_25;
  mediump float cse_26;
  cse_26 = (1.0 - _Glossiness);
  tmpvar_25 = (cse_26 * 7.0);
  mip_24 = tmpvar_25;
  highp vec4 tmpvar_27;
  tmpvar_27.xyz = worldNormal_20;
  tmpvar_27.w = mip_24;
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture (unity_SpecCube0, tmpvar_27.xyz, mip_24);
  mediump vec4 tmpvar_29;
  tmpvar_29 = tmpvar_28;
  tmpvar_19 = ((tmpvar_29.w * hdr_23.x) * tmpvar_29.xyz);
  tmpvar_19 = (tmpvar_19 * tmpvar_14);
  mediump vec2 tmpvar_30;
  tmpvar_30.x = dot ((cse_18 - (2.0 * 
    (dot (tmpvar_3, cse_18) * tmpvar_3)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_30.y = (1.0 - clamp (dot (tmpvar_3, cse_18), 0.0, 1.0));
  mediump vec2 tmpvar_31;
  tmpvar_31 = (((tmpvar_30 * tmpvar_30) * tmpvar_30) * tmpvar_30);
  mediump vec2 tmpvar_32;
  tmpvar_32.x = tmpvar_31.x;
  tmpvar_32.y = cse_26;
  lowp vec4 tmpvar_33;
  tmpvar_33 = texture (unity_NHxRoughness, tmpvar_32);
  mediump vec3 tmpvar_34;
  tmpvar_34 = (((
    ((tmpvar_6 + ((tmpvar_33.w * 16.0) * tmpvar_5.xyz)) * (tmpvar_8 * atten_2))
   * 
    clamp (dot (tmpvar_3, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_14)
   * tmpvar_6)) + (tmpvar_19 * mix (tmpvar_5.xyz, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_7)), 0.0, 1.0)
  ), tmpvar_31.yyy)));
  mediump vec4 tmpvar_35;
  tmpvar_35.w = 1.0;
  tmpvar_35.xyz = tmpvar_34;
  c_1.w = tmpvar_35.w;
  c_1.xyz = tmpvar_34;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_36;
  xlat_varoutput_36.xyz = c_1.xyz;
  xlat_varoutput_36.w = 1.0;
  _glesFragData[0] = xlat_varoutput_36;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_10;
  tmpvar_10 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_11;
  texcoord_11.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_12;
  if ((_UVSec == 0.0)) {
    tmpvar_12 = tmpvar_2;
  } else {
    tmpvar_12 = tmpvar_3;
  };
  texcoord_11.zw = ((tmpvar_12 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_13;
  n_13 = (tmpvar_9.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_14;
  norm_14 = tmpvar_1;
  highp vec4 v_15;
  v_15.x = _World2Object[0].x;
  v_15.y = _World2Object[1].x;
  v_15.z = _World2Object[2].x;
  v_15.w = _World2Object[3].x;
  highp vec4 v_16;
  v_16.x = _World2Object[0].y;
  v_16.y = _World2Object[1].y;
  v_16.z = _World2Object[2].y;
  v_16.w = _World2Object[3].y;
  highp vec4 v_17;
  v_17.x = _World2Object[0].z;
  v_17.y = _World2Object[1].z;
  v_17.z = _World2Object[2].z;
  v_17.w = _World2Object[3].z;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(((
    (v_15.xyz * norm_14.x)
   + 
    (v_16.xyz * norm_14.y)
  ) + (v_17.xyz * norm_14.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_8 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = tmpvar_18;
  mediump vec4 normal_21;
  normal_21 = tmpvar_20;
  mediump vec3 x2_22;
  mediump vec3 x1_23;
  x1_23.x = dot (unity_SHAr, normal_21);
  x1_23.y = dot (unity_SHAg, normal_21);
  x1_23.z = dot (unity_SHAb, normal_21);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_21.xyzz * normal_21.yzzx);
  x2_22.x = dot (unity_SHBr, tmpvar_24);
  x2_22.y = dot (unity_SHBg, tmpvar_24);
  x2_22.z = dot (unity_SHBb, tmpvar_24);
  tmpvar_7.xyz = ((x2_22 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )) + x1_23);
  highp vec3 lightColor0_25;
  lightColor0_25 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_26;
  lightColor1_26 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_27;
  lightColor2_27 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_28;
  lightColor3_28 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_29;
  lightAttenSq_29 = unity_4LightAtten0;
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_4LightPosX0 - tmpvar_9.x);
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_4LightPosY0 - tmpvar_9.y);
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosZ0 - tmpvar_9.z);
  highp vec4 tmpvar_33;
  tmpvar_33 = (((tmpvar_30 * tmpvar_30) + (tmpvar_31 * tmpvar_31)) + (tmpvar_32 * tmpvar_32));
  highp vec4 tmpvar_34;
  tmpvar_34 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_30 * tmpvar_18.x) + (tmpvar_31 * tmpvar_18.y)) + (tmpvar_32 * tmpvar_18.z))
   * 
    inversesqrt(tmpvar_33)
  )) * (1.0/((1.0 + 
    (tmpvar_33 * lightAttenSq_29)
  ))));
  highp vec3 tmpvar_35;
  tmpvar_35 = (tmpvar_7.xyz + ((
    ((lightColor0_25 * tmpvar_34.x) + (lightColor1_26 * tmpvar_34.y))
   + 
    (lightColor2_27 * tmpvar_34.z)
  ) + (lightColor3_28 * tmpvar_34.w)));
  tmpvar_7.xyz = tmpvar_35;
  gl_Position = tmpvar_10;
  xlv_TEXCOORD0 = texcoord_11;
  xlv_TEXCOORD1 = normalize(n_13);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform lowp sampler2DShadow _ShadowMapTexture;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_4;
  cse_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_5;
  tmpvar_5.xyz = _SpecColor.xyz;
  tmpvar_5.w = _Glossiness;
  mediump vec3 tmpvar_6;
  mediump float tmpvar_7;
  tmpvar_7 = (1.0 - tmpvar_5.x);
  tmpvar_6 = ((_Color.xyz * cse_4.xyz) * tmpvar_7);
  mediump vec3 tmpvar_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = _LightColor0.xyz;
  tmpvar_8 = tmpvar_9;
  lowp float shadow_10;
  lowp float tmpvar_11;
  tmpvar_11 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  mediump float tmpvar_12;
  tmpvar_12 = (_LightShadowData.x + (tmpvar_11 * (1.0 - _LightShadowData.x)));
  shadow_10 = tmpvar_12;
  atten_2 = shadow_10;
  mediump float tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_13 = tmpvar_14.y;
  highp vec3 tmpvar_15;
  highp vec4 tmpvar_16;
  mediump vec3 cse_17;
  cse_17 = -(xlv_TEXCOORD1);
  tmpvar_15 = cse_17;
  tmpvar_16 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_18;
  mediump vec3 worldNormal_19;
  highp vec3 tmpvar_20;
  highp vec3 I_21;
  I_21 = -(tmpvar_15);
  tmpvar_20 = (I_21 - (2.0 * (
    dot (tmpvar_3, I_21)
   * tmpvar_3)));
  worldNormal_19 = tmpvar_20;
  mediump vec4 hdr_22;
  hdr_22 = tmpvar_16;
  highp float mip_23;
  mediump float tmpvar_24;
  mediump float cse_25;
  cse_25 = (1.0 - _Glossiness);
  tmpvar_24 = (cse_25 * 7.0);
  mip_23 = tmpvar_24;
  highp vec4 tmpvar_26;
  tmpvar_26.xyz = worldNormal_19;
  tmpvar_26.w = mip_23;
  lowp vec4 tmpvar_27;
  tmpvar_27 = textureCube (unity_SpecCube0, tmpvar_26.xyz, mip_23);
  mediump vec4 tmpvar_28;
  tmpvar_28 = tmpvar_27;
  tmpvar_18 = ((tmpvar_28.w * hdr_22.x) * tmpvar_28.xyz);
  tmpvar_18 = (tmpvar_18 * tmpvar_13);
  mediump vec2 tmpvar_29;
  tmpvar_29.x = dot ((cse_17 - (2.0 * 
    (dot (tmpvar_3, cse_17) * tmpvar_3)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_29.y = (1.0 - clamp (dot (tmpvar_3, cse_17), 0.0, 1.0));
  mediump vec2 tmpvar_30;
  tmpvar_30 = (((tmpvar_29 * tmpvar_29) * tmpvar_29) * tmpvar_29);
  mediump vec2 tmpvar_31;
  tmpvar_31.x = tmpvar_30.x;
  tmpvar_31.y = cse_25;
  lowp vec4 tmpvar_32;
  tmpvar_32 = texture2D (unity_NHxRoughness, tmpvar_31);
  mediump vec3 tmpvar_33;
  tmpvar_33 = (((
    ((tmpvar_6 + ((tmpvar_32.w * 16.0) * tmpvar_5.xyz)) * (tmpvar_8 * atten_2))
   * 
    clamp (dot (tmpvar_3, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_13)
   * tmpvar_6)) + (tmpvar_18 * mix (tmpvar_5.xyz, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_7)), 0.0, 1.0)
  ), tmpvar_30.yyy)));
  mediump vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = tmpvar_33;
  c_1.w = tmpvar_34.w;
  c_1.xyz = tmpvar_33;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_35;
  xlat_varoutput_35.xyz = c_1.xyz;
  xlat_varoutput_35.w = 1.0;
  gl_FragData[0] = xlat_varoutput_35;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
out mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_10;
  tmpvar_10 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_11;
  texcoord_11.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_12;
  if ((_UVSec == 0.0)) {
    tmpvar_12 = tmpvar_2;
  } else {
    tmpvar_12 = tmpvar_3;
  };
  texcoord_11.zw = ((tmpvar_12 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_13;
  n_13 = (tmpvar_9.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_14;
  norm_14 = tmpvar_1;
  highp vec4 v_15;
  v_15.x = _World2Object[0].x;
  v_15.y = _World2Object[1].x;
  v_15.z = _World2Object[2].x;
  v_15.w = _World2Object[3].x;
  highp vec4 v_16;
  v_16.x = _World2Object[0].y;
  v_16.y = _World2Object[1].y;
  v_16.z = _World2Object[2].y;
  v_16.w = _World2Object[3].y;
  highp vec4 v_17;
  v_17.x = _World2Object[0].z;
  v_17.y = _World2Object[1].z;
  v_17.z = _World2Object[2].z;
  v_17.w = _World2Object[3].z;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(((
    (v_15.xyz * norm_14.x)
   + 
    (v_16.xyz * norm_14.y)
  ) + (v_17.xyz * norm_14.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_8 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = tmpvar_18;
  mediump vec4 normal_21;
  normal_21 = tmpvar_20;
  mediump vec3 x2_22;
  mediump vec3 x1_23;
  x1_23.x = dot (unity_SHAr, normal_21);
  x1_23.y = dot (unity_SHAg, normal_21);
  x1_23.z = dot (unity_SHAb, normal_21);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_21.xyzz * normal_21.yzzx);
  x2_22.x = dot (unity_SHBr, tmpvar_24);
  x2_22.y = dot (unity_SHBg, tmpvar_24);
  x2_22.z = dot (unity_SHBb, tmpvar_24);
  tmpvar_7.xyz = ((x2_22 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )) + x1_23);
  highp vec3 lightColor0_25;
  lightColor0_25 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_26;
  lightColor1_26 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_27;
  lightColor2_27 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_28;
  lightColor3_28 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_29;
  lightAttenSq_29 = unity_4LightAtten0;
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_4LightPosX0 - tmpvar_9.x);
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_4LightPosY0 - tmpvar_9.y);
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosZ0 - tmpvar_9.z);
  highp vec4 tmpvar_33;
  tmpvar_33 = (((tmpvar_30 * tmpvar_30) + (tmpvar_31 * tmpvar_31)) + (tmpvar_32 * tmpvar_32));
  highp vec4 tmpvar_34;
  tmpvar_34 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_30 * tmpvar_18.x) + (tmpvar_31 * tmpvar_18.y)) + (tmpvar_32 * tmpvar_18.z))
   * 
    inversesqrt(tmpvar_33)
  )) * (1.0/((1.0 + 
    (tmpvar_33 * lightAttenSq_29)
  ))));
  highp vec3 tmpvar_35;
  tmpvar_35 = (tmpvar_7.xyz + ((
    ((lightColor0_25 * tmpvar_34.x) + (lightColor1_26 * tmpvar_34.y))
   + 
    (lightColor2_27 * tmpvar_34.z)
  ) + (lightColor3_28 * tmpvar_34.w)));
  tmpvar_7.xyz = tmpvar_35;
  gl_Position = tmpvar_10;
  xlv_TEXCOORD0 = texcoord_11;
  xlv_TEXCOORD1 = normalize(n_13);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_8;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform lowp sampler2DShadow _ShadowMapTexture;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
in mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_4;
  cse_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_5;
  tmpvar_5.xyz = _SpecColor.xyz;
  tmpvar_5.w = _Glossiness;
  mediump vec3 tmpvar_6;
  mediump float tmpvar_7;
  tmpvar_7 = (1.0 - tmpvar_5.x);
  tmpvar_6 = ((_Color.xyz * cse_4.xyz) * tmpvar_7);
  mediump vec3 tmpvar_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = _LightColor0.xyz;
  tmpvar_8 = tmpvar_9;
  lowp float shadow_10;
  mediump float tmpvar_11;
  tmpvar_11 = texture (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  lowp float tmpvar_12;
  tmpvar_12 = tmpvar_11;
  mediump float tmpvar_13;
  tmpvar_13 = (_LightShadowData.x + (tmpvar_12 * (1.0 - _LightShadowData.x)));
  shadow_10 = tmpvar_13;
  atten_2 = shadow_10;
  mediump float tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_14 = tmpvar_15.y;
  highp vec3 tmpvar_16;
  highp vec4 tmpvar_17;
  mediump vec3 cse_18;
  cse_18 = -(xlv_TEXCOORD1);
  tmpvar_16 = cse_18;
  tmpvar_17 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_19;
  mediump vec3 worldNormal_20;
  highp vec3 tmpvar_21;
  highp vec3 I_22;
  I_22 = -(tmpvar_16);
  tmpvar_21 = (I_22 - (2.0 * (
    dot (tmpvar_3, I_22)
   * tmpvar_3)));
  worldNormal_20 = tmpvar_21;
  mediump vec4 hdr_23;
  hdr_23 = tmpvar_17;
  highp float mip_24;
  mediump float tmpvar_25;
  mediump float cse_26;
  cse_26 = (1.0 - _Glossiness);
  tmpvar_25 = (cse_26 * 7.0);
  mip_24 = tmpvar_25;
  highp vec4 tmpvar_27;
  tmpvar_27.xyz = worldNormal_20;
  tmpvar_27.w = mip_24;
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture (unity_SpecCube0, tmpvar_27.xyz, mip_24);
  mediump vec4 tmpvar_29;
  tmpvar_29 = tmpvar_28;
  tmpvar_19 = ((tmpvar_29.w * hdr_23.x) * tmpvar_29.xyz);
  tmpvar_19 = (tmpvar_19 * tmpvar_14);
  mediump vec2 tmpvar_30;
  tmpvar_30.x = dot ((cse_18 - (2.0 * 
    (dot (tmpvar_3, cse_18) * tmpvar_3)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_30.y = (1.0 - clamp (dot (tmpvar_3, cse_18), 0.0, 1.0));
  mediump vec2 tmpvar_31;
  tmpvar_31 = (((tmpvar_30 * tmpvar_30) * tmpvar_30) * tmpvar_30);
  mediump vec2 tmpvar_32;
  tmpvar_32.x = tmpvar_31.x;
  tmpvar_32.y = cse_26;
  lowp vec4 tmpvar_33;
  tmpvar_33 = texture (unity_NHxRoughness, tmpvar_32);
  mediump vec3 tmpvar_34;
  tmpvar_34 = (((
    ((tmpvar_6 + ((tmpvar_33.w * 16.0) * tmpvar_5.xyz)) * (tmpvar_8 * atten_2))
   * 
    clamp (dot (tmpvar_3, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_14)
   * tmpvar_6)) + (tmpvar_19 * mix (tmpvar_5.xyz, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_7)), 0.0, 1.0)
  ), tmpvar_31.yyy)));
  mediump vec4 tmpvar_35;
  tmpvar_35.w = 1.0;
  tmpvar_35.xyz = tmpvar_34;
  c_1.w = tmpvar_35.w;
  c_1.xyz = tmpvar_34;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_36;
  xlat_varoutput_36.xyz = c_1.xyz;
  xlat_varoutput_36.w = 1.0;
  _glesFragData[0] = xlat_varoutput_36;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_SPECGLOSSMAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_10;
  texcoord_10.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_2;
  } else {
    tmpvar_11 = tmpvar_3;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_13;
  norm_13 = tmpvar_1;
  highp vec4 v_14;
  v_14.x = _World2Object[0].x;
  v_14.y = _World2Object[1].x;
  v_14.z = _World2Object[2].x;
  v_14.w = _World2Object[3].x;
  highp vec4 v_15;
  v_15.x = _World2Object[0].y;
  v_15.y = _World2Object[1].y;
  v_15.z = _World2Object[2].y;
  v_15.w = _World2Object[3].y;
  highp vec4 v_16;
  v_16.x = _World2Object[0].z;
  v_16.y = _World2Object[1].z;
  v_16.z = _World2Object[2].z;
  v_16.w = _World2Object[3].z;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize(((
    (v_14.xyz * norm_13.x)
   + 
    (v_15.xyz * norm_13.y)
  ) + (v_16.xyz * norm_13.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = tmpvar_17;
  mediump vec4 normal_19;
  normal_19 = tmpvar_18;
  mediump vec3 x2_20;
  mediump vec3 x1_21;
  x1_21.x = dot (unity_SHAr, normal_19);
  x1_21.y = dot (unity_SHAg, normal_19);
  x1_21.z = dot (unity_SHAb, normal_19);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (normal_19.xyzz * normal_19.yzzx);
  x2_20.x = dot (unity_SHBr, tmpvar_22);
  x2_20.y = dot (unity_SHBg, tmpvar_22);
  x2_20.z = dot (unity_SHBb, tmpvar_22);
  tmpvar_7.xyz = ((x2_20 + (unity_SHC.xyz * 
    ((normal_19.x * normal_19.x) - (normal_19.y * normal_19.y))
  )) + x1_21);
  gl_Position = tmpvar_9;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = normalize(n_12);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 c_1;
  mediump vec3 tmpvar_2;
  tmpvar_2 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_3;
  cse_3 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 sg_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_4 = tmpvar_5;
  mediump vec3 tmpvar_6;
  mediump float tmpvar_7;
  tmpvar_7 = (1.0 - sg_4.x);
  tmpvar_6 = ((_Color.xyz * cse_3.xyz) * tmpvar_7);
  mediump vec3 tmpvar_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = _LightColor0.xyz;
  tmpvar_8 = tmpvar_9;
  mediump float tmpvar_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_10 = tmpvar_11.y;
  highp vec3 tmpvar_12;
  highp vec4 tmpvar_13;
  mediump vec3 cse_14;
  cse_14 = -(xlv_TEXCOORD1);
  tmpvar_12 = cse_14;
  tmpvar_13 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_15;
  mediump vec3 worldNormal_16;
  highp vec3 tmpvar_17;
  highp vec3 I_18;
  I_18 = -(tmpvar_12);
  tmpvar_17 = (I_18 - (2.0 * (
    dot (tmpvar_2, I_18)
   * tmpvar_2)));
  worldNormal_16 = tmpvar_17;
  mediump vec4 hdr_19;
  hdr_19 = tmpvar_13;
  highp float mip_20;
  mediump float tmpvar_21;
  tmpvar_21 = ((1.0 - sg_4.w) * 7.0);
  mip_20 = tmpvar_21;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = worldNormal_16;
  tmpvar_22.w = mip_20;
  lowp vec4 tmpvar_23;
  tmpvar_23 = textureCube (unity_SpecCube0, tmpvar_22.xyz, mip_20);
  mediump vec4 tmpvar_24;
  tmpvar_24 = tmpvar_23;
  tmpvar_15 = ((tmpvar_24.w * hdr_19.x) * tmpvar_24.xyz);
  tmpvar_15 = (tmpvar_15 * tmpvar_10);
  mediump vec2 tmpvar_25;
  tmpvar_25.x = dot ((cse_14 - (2.0 * 
    (dot (tmpvar_2, cse_14) * tmpvar_2)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_25.y = (1.0 - clamp (dot (tmpvar_2, cse_14), 0.0, 1.0));
  mediump vec2 tmpvar_26;
  tmpvar_26 = (((tmpvar_25 * tmpvar_25) * tmpvar_25) * tmpvar_25);
  mediump vec2 tmpvar_27;
  tmpvar_27.x = tmpvar_26.x;
  tmpvar_27.y = (1.0 - sg_4.w);
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture2D (unity_NHxRoughness, tmpvar_27);
  mediump vec3 tmpvar_29;
  tmpvar_29 = (((
    ((tmpvar_6 + ((tmpvar_28.w * 16.0) * sg_4.xyz)) * tmpvar_8)
   * 
    clamp (dot (tmpvar_2, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_10)
   * tmpvar_6)) + (tmpvar_15 * mix (sg_4.xyz, vec3(
    clamp ((sg_4.w + (1.0 - tmpvar_7)), 0.0, 1.0)
  ), tmpvar_26.yyy)));
  mediump vec4 tmpvar_30;
  tmpvar_30.w = 1.0;
  tmpvar_30.xyz = tmpvar_29;
  c_1.w = tmpvar_30.w;
  c_1.xyz = tmpvar_29;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_31;
  xlat_varoutput_31.xyz = c_1.xyz;
  xlat_varoutput_31.w = 1.0;
  gl_FragData[0] = xlat_varoutput_31;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_SPECGLOSSMAP" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_10;
  texcoord_10.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_2;
  } else {
    tmpvar_11 = tmpvar_3;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_13;
  norm_13 = tmpvar_1;
  highp vec4 v_14;
  v_14.x = _World2Object[0].x;
  v_14.y = _World2Object[1].x;
  v_14.z = _World2Object[2].x;
  v_14.w = _World2Object[3].x;
  highp vec4 v_15;
  v_15.x = _World2Object[0].y;
  v_15.y = _World2Object[1].y;
  v_15.z = _World2Object[2].y;
  v_15.w = _World2Object[3].y;
  highp vec4 v_16;
  v_16.x = _World2Object[0].z;
  v_16.y = _World2Object[1].z;
  v_16.z = _World2Object[2].z;
  v_16.w = _World2Object[3].z;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize(((
    (v_14.xyz * norm_13.x)
   + 
    (v_15.xyz * norm_13.y)
  ) + (v_16.xyz * norm_13.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = tmpvar_17;
  mediump vec4 normal_19;
  normal_19 = tmpvar_18;
  mediump vec3 x2_20;
  mediump vec3 x1_21;
  x1_21.x = dot (unity_SHAr, normal_19);
  x1_21.y = dot (unity_SHAg, normal_19);
  x1_21.z = dot (unity_SHAb, normal_19);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (normal_19.xyzz * normal_19.yzzx);
  x2_20.x = dot (unity_SHBr, tmpvar_22);
  x2_20.y = dot (unity_SHBg, tmpvar_22);
  x2_20.z = dot (unity_SHBb, tmpvar_22);
  tmpvar_7.xyz = ((x2_20 + (unity_SHC.xyz * 
    ((normal_19.x * normal_19.x) - (normal_19.y * normal_19.y))
  )) + x1_21);
  gl_Position = tmpvar_9;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = normalize(n_12);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 c_1;
  mediump vec3 tmpvar_2;
  tmpvar_2 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_3;
  cse_3 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 sg_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_4 = tmpvar_5;
  mediump vec3 tmpvar_6;
  mediump float tmpvar_7;
  tmpvar_7 = (1.0 - sg_4.x);
  tmpvar_6 = ((_Color.xyz * cse_3.xyz) * tmpvar_7);
  mediump vec3 tmpvar_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = _LightColor0.xyz;
  tmpvar_8 = tmpvar_9;
  mediump float tmpvar_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_10 = tmpvar_11.y;
  highp vec3 tmpvar_12;
  highp vec4 tmpvar_13;
  mediump vec3 cse_14;
  cse_14 = -(xlv_TEXCOORD1);
  tmpvar_12 = cse_14;
  tmpvar_13 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_15;
  mediump vec3 worldNormal_16;
  highp vec3 tmpvar_17;
  highp vec3 I_18;
  I_18 = -(tmpvar_12);
  tmpvar_17 = (I_18 - (2.0 * (
    dot (tmpvar_2, I_18)
   * tmpvar_2)));
  worldNormal_16 = tmpvar_17;
  mediump vec4 hdr_19;
  hdr_19 = tmpvar_13;
  highp float mip_20;
  mediump float tmpvar_21;
  tmpvar_21 = ((1.0 - sg_4.w) * 7.0);
  mip_20 = tmpvar_21;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = worldNormal_16;
  tmpvar_22.w = mip_20;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture (unity_SpecCube0, tmpvar_22.xyz, mip_20);
  mediump vec4 tmpvar_24;
  tmpvar_24 = tmpvar_23;
  tmpvar_15 = ((tmpvar_24.w * hdr_19.x) * tmpvar_24.xyz);
  tmpvar_15 = (tmpvar_15 * tmpvar_10);
  mediump vec2 tmpvar_25;
  tmpvar_25.x = dot ((cse_14 - (2.0 * 
    (dot (tmpvar_2, cse_14) * tmpvar_2)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_25.y = (1.0 - clamp (dot (tmpvar_2, cse_14), 0.0, 1.0));
  mediump vec2 tmpvar_26;
  tmpvar_26 = (((tmpvar_25 * tmpvar_25) * tmpvar_25) * tmpvar_25);
  mediump vec2 tmpvar_27;
  tmpvar_27.x = tmpvar_26.x;
  tmpvar_27.y = (1.0 - sg_4.w);
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture (unity_NHxRoughness, tmpvar_27);
  mediump vec3 tmpvar_29;
  tmpvar_29 = (((
    ((tmpvar_6 + ((tmpvar_28.w * 16.0) * sg_4.xyz)) * tmpvar_8)
   * 
    clamp (dot (tmpvar_2, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_10)
   * tmpvar_6)) + (tmpvar_15 * mix (sg_4.xyz, vec3(
    clamp ((sg_4.w + (1.0 - tmpvar_7)), 0.0, 1.0)
  ), tmpvar_26.yyy)));
  mediump vec4 tmpvar_30;
  tmpvar_30.w = 1.0;
  tmpvar_30.xyz = tmpvar_29;
  c_1.w = tmpvar_30.w;
  c_1.xyz = tmpvar_29;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_31;
  xlat_varoutput_31.xyz = c_1.xyz;
  xlat_varoutput_31.w = 1.0;
  _glesFragData[0] = xlat_varoutput_31;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_SPECGLOSSMAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_10;
  tmpvar_10 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_11;
  texcoord_11.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_12;
  if ((_UVSec == 0.0)) {
    tmpvar_12 = tmpvar_2;
  } else {
    tmpvar_12 = tmpvar_3;
  };
  texcoord_11.zw = ((tmpvar_12 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_13;
  n_13 = (tmpvar_9.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_14;
  norm_14 = tmpvar_1;
  highp vec4 v_15;
  v_15.x = _World2Object[0].x;
  v_15.y = _World2Object[1].x;
  v_15.z = _World2Object[2].x;
  v_15.w = _World2Object[3].x;
  highp vec4 v_16;
  v_16.x = _World2Object[0].y;
  v_16.y = _World2Object[1].y;
  v_16.z = _World2Object[2].y;
  v_16.w = _World2Object[3].y;
  highp vec4 v_17;
  v_17.x = _World2Object[0].z;
  v_17.y = _World2Object[1].z;
  v_17.z = _World2Object[2].z;
  v_17.w = _World2Object[3].z;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(((
    (v_15.xyz * norm_14.x)
   + 
    (v_16.xyz * norm_14.y)
  ) + (v_17.xyz * norm_14.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_8 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = tmpvar_18;
  mediump vec4 normal_21;
  normal_21 = tmpvar_20;
  mediump vec3 x2_22;
  mediump vec3 x1_23;
  x1_23.x = dot (unity_SHAr, normal_21);
  x1_23.y = dot (unity_SHAg, normal_21);
  x1_23.z = dot (unity_SHAb, normal_21);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_21.xyzz * normal_21.yzzx);
  x2_22.x = dot (unity_SHBr, tmpvar_24);
  x2_22.y = dot (unity_SHBg, tmpvar_24);
  x2_22.z = dot (unity_SHBb, tmpvar_24);
  tmpvar_7.xyz = ((x2_22 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )) + x1_23);
  gl_Position = tmpvar_10;
  xlv_TEXCOORD0 = texcoord_11;
  xlv_TEXCOORD1 = normalize(n_13);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform sampler2D _ShadowMapTexture;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_4;
  cse_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 sg_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_5 = tmpvar_6;
  mediump vec3 tmpvar_7;
  mediump float tmpvar_8;
  tmpvar_8 = (1.0 - sg_5.x);
  tmpvar_7 = ((_Color.xyz * cse_4.xyz) * tmpvar_8);
  mediump vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = _LightColor0.xyz;
  tmpvar_9 = tmpvar_10;
  lowp float tmpvar_11;
  mediump float dist_12;
  lowp float tmpvar_13;
  tmpvar_13 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_12 = tmpvar_13;
  mediump float tmpvar_14;
  tmpvar_14 = max (float((dist_12 > 
    (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w)
  )), _LightShadowData.x);
  tmpvar_11 = tmpvar_14;
  atten_2 = tmpvar_11;
  mediump float tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_15 = tmpvar_16.y;
  highp vec3 tmpvar_17;
  highp vec4 tmpvar_18;
  mediump vec3 cse_19;
  cse_19 = -(xlv_TEXCOORD1);
  tmpvar_17 = cse_19;
  tmpvar_18 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_20;
  mediump vec3 worldNormal_21;
  highp vec3 tmpvar_22;
  highp vec3 I_23;
  I_23 = -(tmpvar_17);
  tmpvar_22 = (I_23 - (2.0 * (
    dot (tmpvar_3, I_23)
   * tmpvar_3)));
  worldNormal_21 = tmpvar_22;
  mediump vec4 hdr_24;
  hdr_24 = tmpvar_18;
  highp float mip_25;
  mediump float tmpvar_26;
  tmpvar_26 = ((1.0 - sg_5.w) * 7.0);
  mip_25 = tmpvar_26;
  highp vec4 tmpvar_27;
  tmpvar_27.xyz = worldNormal_21;
  tmpvar_27.w = mip_25;
  lowp vec4 tmpvar_28;
  tmpvar_28 = textureCube (unity_SpecCube0, tmpvar_27.xyz, mip_25);
  mediump vec4 tmpvar_29;
  tmpvar_29 = tmpvar_28;
  tmpvar_20 = ((tmpvar_29.w * hdr_24.x) * tmpvar_29.xyz);
  tmpvar_20 = (tmpvar_20 * tmpvar_15);
  mediump vec2 tmpvar_30;
  tmpvar_30.x = dot ((cse_19 - (2.0 * 
    (dot (tmpvar_3, cse_19) * tmpvar_3)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_30.y = (1.0 - clamp (dot (tmpvar_3, cse_19), 0.0, 1.0));
  mediump vec2 tmpvar_31;
  tmpvar_31 = (((tmpvar_30 * tmpvar_30) * tmpvar_30) * tmpvar_30);
  mediump vec2 tmpvar_32;
  tmpvar_32.x = tmpvar_31.x;
  tmpvar_32.y = (1.0 - sg_5.w);
  lowp vec4 tmpvar_33;
  tmpvar_33 = texture2D (unity_NHxRoughness, tmpvar_32);
  mediump vec3 tmpvar_34;
  tmpvar_34 = (((
    ((tmpvar_7 + ((tmpvar_33.w * 16.0) * sg_5.xyz)) * (tmpvar_9 * atten_2))
   * 
    clamp (dot (tmpvar_3, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_15)
   * tmpvar_7)) + (tmpvar_20 * mix (sg_5.xyz, vec3(
    clamp ((sg_5.w + (1.0 - tmpvar_8)), 0.0, 1.0)
  ), tmpvar_31.yyy)));
  mediump vec4 tmpvar_35;
  tmpvar_35.w = 1.0;
  tmpvar_35.xyz = tmpvar_34;
  c_1.w = tmpvar_35.w;
  c_1.xyz = tmpvar_34;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_36;
  xlat_varoutput_36.xyz = c_1.xyz;
  xlat_varoutput_36.w = 1.0;
  gl_FragData[0] = xlat_varoutput_36;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_SPECGLOSSMAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_10;
  texcoord_10.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_2;
  } else {
    tmpvar_11 = tmpvar_3;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_13;
  norm_13 = tmpvar_1;
  highp vec4 v_14;
  v_14.x = _World2Object[0].x;
  v_14.y = _World2Object[1].x;
  v_14.z = _World2Object[2].x;
  v_14.w = _World2Object[3].x;
  highp vec4 v_15;
  v_15.x = _World2Object[0].y;
  v_15.y = _World2Object[1].y;
  v_15.z = _World2Object[2].y;
  v_15.w = _World2Object[3].y;
  highp vec4 v_16;
  v_16.x = _World2Object[0].z;
  v_16.y = _World2Object[1].z;
  v_16.z = _World2Object[2].z;
  v_16.w = _World2Object[3].z;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize(((
    (v_14.xyz * norm_13.x)
   + 
    (v_15.xyz * norm_13.y)
  ) + (v_16.xyz * norm_13.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = tmpvar_17;
  mediump vec4 normal_19;
  normal_19 = tmpvar_18;
  mediump vec3 x2_20;
  mediump vec3 x1_21;
  x1_21.x = dot (unity_SHAr, normal_19);
  x1_21.y = dot (unity_SHAg, normal_19);
  x1_21.z = dot (unity_SHAb, normal_19);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (normal_19.xyzz * normal_19.yzzx);
  x2_20.x = dot (unity_SHBr, tmpvar_22);
  x2_20.y = dot (unity_SHBg, tmpvar_22);
  x2_20.z = dot (unity_SHBb, tmpvar_22);
  tmpvar_7.xyz = ((x2_20 + (unity_SHC.xyz * 
    ((normal_19.x * normal_19.x) - (normal_19.y * normal_19.y))
  )) + x1_21);
  highp vec3 lightColor0_23;
  lightColor0_23 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_24;
  lightColor1_24 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_25;
  lightColor2_25 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_26;
  lightColor3_26 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_27;
  lightAttenSq_27 = unity_4LightAtten0;
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_4LightPosX0 - tmpvar_8.x);
  highp vec4 tmpvar_29;
  tmpvar_29 = (unity_4LightPosY0 - tmpvar_8.y);
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_4LightPosZ0 - tmpvar_8.z);
  highp vec4 tmpvar_31;
  tmpvar_31 = (((tmpvar_28 * tmpvar_28) + (tmpvar_29 * tmpvar_29)) + (tmpvar_30 * tmpvar_30));
  highp vec4 tmpvar_32;
  tmpvar_32 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_28 * tmpvar_17.x) + (tmpvar_29 * tmpvar_17.y)) + (tmpvar_30 * tmpvar_17.z))
   * 
    inversesqrt(tmpvar_31)
  )) * (1.0/((1.0 + 
    (tmpvar_31 * lightAttenSq_27)
  ))));
  highp vec3 tmpvar_33;
  tmpvar_33 = (tmpvar_7.xyz + ((
    ((lightColor0_23 * tmpvar_32.x) + (lightColor1_24 * tmpvar_32.y))
   + 
    (lightColor2_25 * tmpvar_32.z)
  ) + (lightColor3_26 * tmpvar_32.w)));
  tmpvar_7.xyz = tmpvar_33;
  gl_Position = tmpvar_9;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = normalize(n_12);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 c_1;
  mediump vec3 tmpvar_2;
  tmpvar_2 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_3;
  cse_3 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 sg_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_4 = tmpvar_5;
  mediump vec3 tmpvar_6;
  mediump float tmpvar_7;
  tmpvar_7 = (1.0 - sg_4.x);
  tmpvar_6 = ((_Color.xyz * cse_3.xyz) * tmpvar_7);
  mediump vec3 tmpvar_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = _LightColor0.xyz;
  tmpvar_8 = tmpvar_9;
  mediump float tmpvar_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_10 = tmpvar_11.y;
  highp vec3 tmpvar_12;
  highp vec4 tmpvar_13;
  mediump vec3 cse_14;
  cse_14 = -(xlv_TEXCOORD1);
  tmpvar_12 = cse_14;
  tmpvar_13 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_15;
  mediump vec3 worldNormal_16;
  highp vec3 tmpvar_17;
  highp vec3 I_18;
  I_18 = -(tmpvar_12);
  tmpvar_17 = (I_18 - (2.0 * (
    dot (tmpvar_2, I_18)
   * tmpvar_2)));
  worldNormal_16 = tmpvar_17;
  mediump vec4 hdr_19;
  hdr_19 = tmpvar_13;
  highp float mip_20;
  mediump float tmpvar_21;
  tmpvar_21 = ((1.0 - sg_4.w) * 7.0);
  mip_20 = tmpvar_21;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = worldNormal_16;
  tmpvar_22.w = mip_20;
  lowp vec4 tmpvar_23;
  tmpvar_23 = textureCube (unity_SpecCube0, tmpvar_22.xyz, mip_20);
  mediump vec4 tmpvar_24;
  tmpvar_24 = tmpvar_23;
  tmpvar_15 = ((tmpvar_24.w * hdr_19.x) * tmpvar_24.xyz);
  tmpvar_15 = (tmpvar_15 * tmpvar_10);
  mediump vec2 tmpvar_25;
  tmpvar_25.x = dot ((cse_14 - (2.0 * 
    (dot (tmpvar_2, cse_14) * tmpvar_2)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_25.y = (1.0 - clamp (dot (tmpvar_2, cse_14), 0.0, 1.0));
  mediump vec2 tmpvar_26;
  tmpvar_26 = (((tmpvar_25 * tmpvar_25) * tmpvar_25) * tmpvar_25);
  mediump vec2 tmpvar_27;
  tmpvar_27.x = tmpvar_26.x;
  tmpvar_27.y = (1.0 - sg_4.w);
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture2D (unity_NHxRoughness, tmpvar_27);
  mediump vec3 tmpvar_29;
  tmpvar_29 = (((
    ((tmpvar_6 + ((tmpvar_28.w * 16.0) * sg_4.xyz)) * tmpvar_8)
   * 
    clamp (dot (tmpvar_2, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_10)
   * tmpvar_6)) + (tmpvar_15 * mix (sg_4.xyz, vec3(
    clamp ((sg_4.w + (1.0 - tmpvar_7)), 0.0, 1.0)
  ), tmpvar_26.yyy)));
  mediump vec4 tmpvar_30;
  tmpvar_30.w = 1.0;
  tmpvar_30.xyz = tmpvar_29;
  c_1.w = tmpvar_30.w;
  c_1.xyz = tmpvar_29;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_31;
  xlat_varoutput_31.xyz = c_1.xyz;
  xlat_varoutput_31.w = 1.0;
  gl_FragData[0] = xlat_varoutput_31;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_SPECGLOSSMAP" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_10;
  texcoord_10.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_2;
  } else {
    tmpvar_11 = tmpvar_3;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_13;
  norm_13 = tmpvar_1;
  highp vec4 v_14;
  v_14.x = _World2Object[0].x;
  v_14.y = _World2Object[1].x;
  v_14.z = _World2Object[2].x;
  v_14.w = _World2Object[3].x;
  highp vec4 v_15;
  v_15.x = _World2Object[0].y;
  v_15.y = _World2Object[1].y;
  v_15.z = _World2Object[2].y;
  v_15.w = _World2Object[3].y;
  highp vec4 v_16;
  v_16.x = _World2Object[0].z;
  v_16.y = _World2Object[1].z;
  v_16.z = _World2Object[2].z;
  v_16.w = _World2Object[3].z;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize(((
    (v_14.xyz * norm_13.x)
   + 
    (v_15.xyz * norm_13.y)
  ) + (v_16.xyz * norm_13.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = tmpvar_17;
  mediump vec4 normal_19;
  normal_19 = tmpvar_18;
  mediump vec3 x2_20;
  mediump vec3 x1_21;
  x1_21.x = dot (unity_SHAr, normal_19);
  x1_21.y = dot (unity_SHAg, normal_19);
  x1_21.z = dot (unity_SHAb, normal_19);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (normal_19.xyzz * normal_19.yzzx);
  x2_20.x = dot (unity_SHBr, tmpvar_22);
  x2_20.y = dot (unity_SHBg, tmpvar_22);
  x2_20.z = dot (unity_SHBb, tmpvar_22);
  tmpvar_7.xyz = ((x2_20 + (unity_SHC.xyz * 
    ((normal_19.x * normal_19.x) - (normal_19.y * normal_19.y))
  )) + x1_21);
  highp vec3 lightColor0_23;
  lightColor0_23 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_24;
  lightColor1_24 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_25;
  lightColor2_25 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_26;
  lightColor3_26 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_27;
  lightAttenSq_27 = unity_4LightAtten0;
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_4LightPosX0 - tmpvar_8.x);
  highp vec4 tmpvar_29;
  tmpvar_29 = (unity_4LightPosY0 - tmpvar_8.y);
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_4LightPosZ0 - tmpvar_8.z);
  highp vec4 tmpvar_31;
  tmpvar_31 = (((tmpvar_28 * tmpvar_28) + (tmpvar_29 * tmpvar_29)) + (tmpvar_30 * tmpvar_30));
  highp vec4 tmpvar_32;
  tmpvar_32 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_28 * tmpvar_17.x) + (tmpvar_29 * tmpvar_17.y)) + (tmpvar_30 * tmpvar_17.z))
   * 
    inversesqrt(tmpvar_31)
  )) * (1.0/((1.0 + 
    (tmpvar_31 * lightAttenSq_27)
  ))));
  highp vec3 tmpvar_33;
  tmpvar_33 = (tmpvar_7.xyz + ((
    ((lightColor0_23 * tmpvar_32.x) + (lightColor1_24 * tmpvar_32.y))
   + 
    (lightColor2_25 * tmpvar_32.z)
  ) + (lightColor3_26 * tmpvar_32.w)));
  tmpvar_7.xyz = tmpvar_33;
  gl_Position = tmpvar_9;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = normalize(n_12);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 c_1;
  mediump vec3 tmpvar_2;
  tmpvar_2 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_3;
  cse_3 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 sg_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_4 = tmpvar_5;
  mediump vec3 tmpvar_6;
  mediump float tmpvar_7;
  tmpvar_7 = (1.0 - sg_4.x);
  tmpvar_6 = ((_Color.xyz * cse_3.xyz) * tmpvar_7);
  mediump vec3 tmpvar_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = _LightColor0.xyz;
  tmpvar_8 = tmpvar_9;
  mediump float tmpvar_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_10 = tmpvar_11.y;
  highp vec3 tmpvar_12;
  highp vec4 tmpvar_13;
  mediump vec3 cse_14;
  cse_14 = -(xlv_TEXCOORD1);
  tmpvar_12 = cse_14;
  tmpvar_13 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_15;
  mediump vec3 worldNormal_16;
  highp vec3 tmpvar_17;
  highp vec3 I_18;
  I_18 = -(tmpvar_12);
  tmpvar_17 = (I_18 - (2.0 * (
    dot (tmpvar_2, I_18)
   * tmpvar_2)));
  worldNormal_16 = tmpvar_17;
  mediump vec4 hdr_19;
  hdr_19 = tmpvar_13;
  highp float mip_20;
  mediump float tmpvar_21;
  tmpvar_21 = ((1.0 - sg_4.w) * 7.0);
  mip_20 = tmpvar_21;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = worldNormal_16;
  tmpvar_22.w = mip_20;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture (unity_SpecCube0, tmpvar_22.xyz, mip_20);
  mediump vec4 tmpvar_24;
  tmpvar_24 = tmpvar_23;
  tmpvar_15 = ((tmpvar_24.w * hdr_19.x) * tmpvar_24.xyz);
  tmpvar_15 = (tmpvar_15 * tmpvar_10);
  mediump vec2 tmpvar_25;
  tmpvar_25.x = dot ((cse_14 - (2.0 * 
    (dot (tmpvar_2, cse_14) * tmpvar_2)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_25.y = (1.0 - clamp (dot (tmpvar_2, cse_14), 0.0, 1.0));
  mediump vec2 tmpvar_26;
  tmpvar_26 = (((tmpvar_25 * tmpvar_25) * tmpvar_25) * tmpvar_25);
  mediump vec2 tmpvar_27;
  tmpvar_27.x = tmpvar_26.x;
  tmpvar_27.y = (1.0 - sg_4.w);
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture (unity_NHxRoughness, tmpvar_27);
  mediump vec3 tmpvar_29;
  tmpvar_29 = (((
    ((tmpvar_6 + ((tmpvar_28.w * 16.0) * sg_4.xyz)) * tmpvar_8)
   * 
    clamp (dot (tmpvar_2, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_10)
   * tmpvar_6)) + (tmpvar_15 * mix (sg_4.xyz, vec3(
    clamp ((sg_4.w + (1.0 - tmpvar_7)), 0.0, 1.0)
  ), tmpvar_26.yyy)));
  mediump vec4 tmpvar_30;
  tmpvar_30.w = 1.0;
  tmpvar_30.xyz = tmpvar_29;
  c_1.w = tmpvar_30.w;
  c_1.xyz = tmpvar_29;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_31;
  xlat_varoutput_31.xyz = c_1.xyz;
  xlat_varoutput_31.w = 1.0;
  _glesFragData[0] = xlat_varoutput_31;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_SPECGLOSSMAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_10;
  tmpvar_10 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_11;
  texcoord_11.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_12;
  if ((_UVSec == 0.0)) {
    tmpvar_12 = tmpvar_2;
  } else {
    tmpvar_12 = tmpvar_3;
  };
  texcoord_11.zw = ((tmpvar_12 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_13;
  n_13 = (tmpvar_9.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_14;
  norm_14 = tmpvar_1;
  highp vec4 v_15;
  v_15.x = _World2Object[0].x;
  v_15.y = _World2Object[1].x;
  v_15.z = _World2Object[2].x;
  v_15.w = _World2Object[3].x;
  highp vec4 v_16;
  v_16.x = _World2Object[0].y;
  v_16.y = _World2Object[1].y;
  v_16.z = _World2Object[2].y;
  v_16.w = _World2Object[3].y;
  highp vec4 v_17;
  v_17.x = _World2Object[0].z;
  v_17.y = _World2Object[1].z;
  v_17.z = _World2Object[2].z;
  v_17.w = _World2Object[3].z;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(((
    (v_15.xyz * norm_14.x)
   + 
    (v_16.xyz * norm_14.y)
  ) + (v_17.xyz * norm_14.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_8 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = tmpvar_18;
  mediump vec4 normal_21;
  normal_21 = tmpvar_20;
  mediump vec3 x2_22;
  mediump vec3 x1_23;
  x1_23.x = dot (unity_SHAr, normal_21);
  x1_23.y = dot (unity_SHAg, normal_21);
  x1_23.z = dot (unity_SHAb, normal_21);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_21.xyzz * normal_21.yzzx);
  x2_22.x = dot (unity_SHBr, tmpvar_24);
  x2_22.y = dot (unity_SHBg, tmpvar_24);
  x2_22.z = dot (unity_SHBb, tmpvar_24);
  tmpvar_7.xyz = ((x2_22 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )) + x1_23);
  highp vec3 lightColor0_25;
  lightColor0_25 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_26;
  lightColor1_26 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_27;
  lightColor2_27 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_28;
  lightColor3_28 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_29;
  lightAttenSq_29 = unity_4LightAtten0;
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_4LightPosX0 - tmpvar_9.x);
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_4LightPosY0 - tmpvar_9.y);
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosZ0 - tmpvar_9.z);
  highp vec4 tmpvar_33;
  tmpvar_33 = (((tmpvar_30 * tmpvar_30) + (tmpvar_31 * tmpvar_31)) + (tmpvar_32 * tmpvar_32));
  highp vec4 tmpvar_34;
  tmpvar_34 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_30 * tmpvar_18.x) + (tmpvar_31 * tmpvar_18.y)) + (tmpvar_32 * tmpvar_18.z))
   * 
    inversesqrt(tmpvar_33)
  )) * (1.0/((1.0 + 
    (tmpvar_33 * lightAttenSq_29)
  ))));
  highp vec3 tmpvar_35;
  tmpvar_35 = (tmpvar_7.xyz + ((
    ((lightColor0_25 * tmpvar_34.x) + (lightColor1_26 * tmpvar_34.y))
   + 
    (lightColor2_27 * tmpvar_34.z)
  ) + (lightColor3_28 * tmpvar_34.w)));
  tmpvar_7.xyz = tmpvar_35;
  gl_Position = tmpvar_10;
  xlv_TEXCOORD0 = texcoord_11;
  xlv_TEXCOORD1 = normalize(n_13);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform sampler2D _ShadowMapTexture;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_4;
  cse_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 sg_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_5 = tmpvar_6;
  mediump vec3 tmpvar_7;
  mediump float tmpvar_8;
  tmpvar_8 = (1.0 - sg_5.x);
  tmpvar_7 = ((_Color.xyz * cse_4.xyz) * tmpvar_8);
  mediump vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = _LightColor0.xyz;
  tmpvar_9 = tmpvar_10;
  lowp float tmpvar_11;
  mediump float dist_12;
  lowp float tmpvar_13;
  tmpvar_13 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_12 = tmpvar_13;
  mediump float tmpvar_14;
  tmpvar_14 = max (float((dist_12 > 
    (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w)
  )), _LightShadowData.x);
  tmpvar_11 = tmpvar_14;
  atten_2 = tmpvar_11;
  mediump float tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_15 = tmpvar_16.y;
  highp vec3 tmpvar_17;
  highp vec4 tmpvar_18;
  mediump vec3 cse_19;
  cse_19 = -(xlv_TEXCOORD1);
  tmpvar_17 = cse_19;
  tmpvar_18 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_20;
  mediump vec3 worldNormal_21;
  highp vec3 tmpvar_22;
  highp vec3 I_23;
  I_23 = -(tmpvar_17);
  tmpvar_22 = (I_23 - (2.0 * (
    dot (tmpvar_3, I_23)
   * tmpvar_3)));
  worldNormal_21 = tmpvar_22;
  mediump vec4 hdr_24;
  hdr_24 = tmpvar_18;
  highp float mip_25;
  mediump float tmpvar_26;
  tmpvar_26 = ((1.0 - sg_5.w) * 7.0);
  mip_25 = tmpvar_26;
  highp vec4 tmpvar_27;
  tmpvar_27.xyz = worldNormal_21;
  tmpvar_27.w = mip_25;
  lowp vec4 tmpvar_28;
  tmpvar_28 = textureCube (unity_SpecCube0, tmpvar_27.xyz, mip_25);
  mediump vec4 tmpvar_29;
  tmpvar_29 = tmpvar_28;
  tmpvar_20 = ((tmpvar_29.w * hdr_24.x) * tmpvar_29.xyz);
  tmpvar_20 = (tmpvar_20 * tmpvar_15);
  mediump vec2 tmpvar_30;
  tmpvar_30.x = dot ((cse_19 - (2.0 * 
    (dot (tmpvar_3, cse_19) * tmpvar_3)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_30.y = (1.0 - clamp (dot (tmpvar_3, cse_19), 0.0, 1.0));
  mediump vec2 tmpvar_31;
  tmpvar_31 = (((tmpvar_30 * tmpvar_30) * tmpvar_30) * tmpvar_30);
  mediump vec2 tmpvar_32;
  tmpvar_32.x = tmpvar_31.x;
  tmpvar_32.y = (1.0 - sg_5.w);
  lowp vec4 tmpvar_33;
  tmpvar_33 = texture2D (unity_NHxRoughness, tmpvar_32);
  mediump vec3 tmpvar_34;
  tmpvar_34 = (((
    ((tmpvar_7 + ((tmpvar_33.w * 16.0) * sg_5.xyz)) * (tmpvar_9 * atten_2))
   * 
    clamp (dot (tmpvar_3, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_15)
   * tmpvar_7)) + (tmpvar_20 * mix (sg_5.xyz, vec3(
    clamp ((sg_5.w + (1.0 - tmpvar_8)), 0.0, 1.0)
  ), tmpvar_31.yyy)));
  mediump vec4 tmpvar_35;
  tmpvar_35.w = 1.0;
  tmpvar_35.xyz = tmpvar_34;
  c_1.w = tmpvar_35.w;
  c_1.xyz = tmpvar_34;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_36;
  xlat_varoutput_36.xyz = c_1.xyz;
  xlat_varoutput_36.w = 1.0;
  gl_FragData[0] = xlat_varoutput_36;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_SPECGLOSSMAP" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_10;
  tmpvar_10 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_11;
  texcoord_11.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_12;
  if ((_UVSec == 0.0)) {
    tmpvar_12 = tmpvar_2;
  } else {
    tmpvar_12 = tmpvar_3;
  };
  texcoord_11.zw = ((tmpvar_12 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_13;
  n_13 = (tmpvar_9.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_14;
  norm_14 = tmpvar_1;
  highp vec4 v_15;
  v_15.x = _World2Object[0].x;
  v_15.y = _World2Object[1].x;
  v_15.z = _World2Object[2].x;
  v_15.w = _World2Object[3].x;
  highp vec4 v_16;
  v_16.x = _World2Object[0].y;
  v_16.y = _World2Object[1].y;
  v_16.z = _World2Object[2].y;
  v_16.w = _World2Object[3].y;
  highp vec4 v_17;
  v_17.x = _World2Object[0].z;
  v_17.y = _World2Object[1].z;
  v_17.z = _World2Object[2].z;
  v_17.w = _World2Object[3].z;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(((
    (v_15.xyz * norm_14.x)
   + 
    (v_16.xyz * norm_14.y)
  ) + (v_17.xyz * norm_14.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_8 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = tmpvar_18;
  mediump vec4 normal_21;
  normal_21 = tmpvar_20;
  mediump vec3 x2_22;
  mediump vec3 x1_23;
  x1_23.x = dot (unity_SHAr, normal_21);
  x1_23.y = dot (unity_SHAg, normal_21);
  x1_23.z = dot (unity_SHAb, normal_21);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_21.xyzz * normal_21.yzzx);
  x2_22.x = dot (unity_SHBr, tmpvar_24);
  x2_22.y = dot (unity_SHBg, tmpvar_24);
  x2_22.z = dot (unity_SHBb, tmpvar_24);
  tmpvar_7.xyz = ((x2_22 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )) + x1_23);
  gl_Position = tmpvar_10;
  xlv_TEXCOORD0 = texcoord_11;
  xlv_TEXCOORD1 = normalize(n_13);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform lowp sampler2DShadow _ShadowMapTexture;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_4;
  cse_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 sg_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_5 = tmpvar_6;
  mediump vec3 tmpvar_7;
  mediump float tmpvar_8;
  tmpvar_8 = (1.0 - sg_5.x);
  tmpvar_7 = ((_Color.xyz * cse_4.xyz) * tmpvar_8);
  mediump vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = _LightColor0.xyz;
  tmpvar_9 = tmpvar_10;
  lowp float shadow_11;
  lowp float tmpvar_12;
  tmpvar_12 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  mediump float tmpvar_13;
  tmpvar_13 = (_LightShadowData.x + (tmpvar_12 * (1.0 - _LightShadowData.x)));
  shadow_11 = tmpvar_13;
  atten_2 = shadow_11;
  mediump float tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_14 = tmpvar_15.y;
  highp vec3 tmpvar_16;
  highp vec4 tmpvar_17;
  mediump vec3 cse_18;
  cse_18 = -(xlv_TEXCOORD1);
  tmpvar_16 = cse_18;
  tmpvar_17 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_19;
  mediump vec3 worldNormal_20;
  highp vec3 tmpvar_21;
  highp vec3 I_22;
  I_22 = -(tmpvar_16);
  tmpvar_21 = (I_22 - (2.0 * (
    dot (tmpvar_3, I_22)
   * tmpvar_3)));
  worldNormal_20 = tmpvar_21;
  mediump vec4 hdr_23;
  hdr_23 = tmpvar_17;
  highp float mip_24;
  mediump float tmpvar_25;
  tmpvar_25 = ((1.0 - sg_5.w) * 7.0);
  mip_24 = tmpvar_25;
  highp vec4 tmpvar_26;
  tmpvar_26.xyz = worldNormal_20;
  tmpvar_26.w = mip_24;
  lowp vec4 tmpvar_27;
  tmpvar_27 = textureCube (unity_SpecCube0, tmpvar_26.xyz, mip_24);
  mediump vec4 tmpvar_28;
  tmpvar_28 = tmpvar_27;
  tmpvar_19 = ((tmpvar_28.w * hdr_23.x) * tmpvar_28.xyz);
  tmpvar_19 = (tmpvar_19 * tmpvar_14);
  mediump vec2 tmpvar_29;
  tmpvar_29.x = dot ((cse_18 - (2.0 * 
    (dot (tmpvar_3, cse_18) * tmpvar_3)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_29.y = (1.0 - clamp (dot (tmpvar_3, cse_18), 0.0, 1.0));
  mediump vec2 tmpvar_30;
  tmpvar_30 = (((tmpvar_29 * tmpvar_29) * tmpvar_29) * tmpvar_29);
  mediump vec2 tmpvar_31;
  tmpvar_31.x = tmpvar_30.x;
  tmpvar_31.y = (1.0 - sg_5.w);
  lowp vec4 tmpvar_32;
  tmpvar_32 = texture2D (unity_NHxRoughness, tmpvar_31);
  mediump vec3 tmpvar_33;
  tmpvar_33 = (((
    ((tmpvar_7 + ((tmpvar_32.w * 16.0) * sg_5.xyz)) * (tmpvar_9 * atten_2))
   * 
    clamp (dot (tmpvar_3, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_14)
   * tmpvar_7)) + (tmpvar_19 * mix (sg_5.xyz, vec3(
    clamp ((sg_5.w + (1.0 - tmpvar_8)), 0.0, 1.0)
  ), tmpvar_30.yyy)));
  mediump vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = tmpvar_33;
  c_1.w = tmpvar_34.w;
  c_1.xyz = tmpvar_33;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_35;
  xlat_varoutput_35.xyz = c_1.xyz;
  xlat_varoutput_35.w = 1.0;
  gl_FragData[0] = xlat_varoutput_35;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_SPECGLOSSMAP" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
out mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_10;
  tmpvar_10 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_11;
  texcoord_11.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_12;
  if ((_UVSec == 0.0)) {
    tmpvar_12 = tmpvar_2;
  } else {
    tmpvar_12 = tmpvar_3;
  };
  texcoord_11.zw = ((tmpvar_12 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_13;
  n_13 = (tmpvar_9.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_14;
  norm_14 = tmpvar_1;
  highp vec4 v_15;
  v_15.x = _World2Object[0].x;
  v_15.y = _World2Object[1].x;
  v_15.z = _World2Object[2].x;
  v_15.w = _World2Object[3].x;
  highp vec4 v_16;
  v_16.x = _World2Object[0].y;
  v_16.y = _World2Object[1].y;
  v_16.z = _World2Object[2].y;
  v_16.w = _World2Object[3].y;
  highp vec4 v_17;
  v_17.x = _World2Object[0].z;
  v_17.y = _World2Object[1].z;
  v_17.z = _World2Object[2].z;
  v_17.w = _World2Object[3].z;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(((
    (v_15.xyz * norm_14.x)
   + 
    (v_16.xyz * norm_14.y)
  ) + (v_17.xyz * norm_14.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_8 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = tmpvar_18;
  mediump vec4 normal_21;
  normal_21 = tmpvar_20;
  mediump vec3 x2_22;
  mediump vec3 x1_23;
  x1_23.x = dot (unity_SHAr, normal_21);
  x1_23.y = dot (unity_SHAg, normal_21);
  x1_23.z = dot (unity_SHAb, normal_21);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_21.xyzz * normal_21.yzzx);
  x2_22.x = dot (unity_SHBr, tmpvar_24);
  x2_22.y = dot (unity_SHBg, tmpvar_24);
  x2_22.z = dot (unity_SHBb, tmpvar_24);
  tmpvar_7.xyz = ((x2_22 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )) + x1_23);
  gl_Position = tmpvar_10;
  xlv_TEXCOORD0 = texcoord_11;
  xlv_TEXCOORD1 = normalize(n_13);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_8;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform lowp sampler2DShadow _ShadowMapTexture;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
in mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_4;
  cse_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 sg_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_5 = tmpvar_6;
  mediump vec3 tmpvar_7;
  mediump float tmpvar_8;
  tmpvar_8 = (1.0 - sg_5.x);
  tmpvar_7 = ((_Color.xyz * cse_4.xyz) * tmpvar_8);
  mediump vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = _LightColor0.xyz;
  tmpvar_9 = tmpvar_10;
  lowp float shadow_11;
  mediump float tmpvar_12;
  tmpvar_12 = texture (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  lowp float tmpvar_13;
  tmpvar_13 = tmpvar_12;
  mediump float tmpvar_14;
  tmpvar_14 = (_LightShadowData.x + (tmpvar_13 * (1.0 - _LightShadowData.x)));
  shadow_11 = tmpvar_14;
  atten_2 = shadow_11;
  mediump float tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_15 = tmpvar_16.y;
  highp vec3 tmpvar_17;
  highp vec4 tmpvar_18;
  mediump vec3 cse_19;
  cse_19 = -(xlv_TEXCOORD1);
  tmpvar_17 = cse_19;
  tmpvar_18 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_20;
  mediump vec3 worldNormal_21;
  highp vec3 tmpvar_22;
  highp vec3 I_23;
  I_23 = -(tmpvar_17);
  tmpvar_22 = (I_23 - (2.0 * (
    dot (tmpvar_3, I_23)
   * tmpvar_3)));
  worldNormal_21 = tmpvar_22;
  mediump vec4 hdr_24;
  hdr_24 = tmpvar_18;
  highp float mip_25;
  mediump float tmpvar_26;
  tmpvar_26 = ((1.0 - sg_5.w) * 7.0);
  mip_25 = tmpvar_26;
  highp vec4 tmpvar_27;
  tmpvar_27.xyz = worldNormal_21;
  tmpvar_27.w = mip_25;
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture (unity_SpecCube0, tmpvar_27.xyz, mip_25);
  mediump vec4 tmpvar_29;
  tmpvar_29 = tmpvar_28;
  tmpvar_20 = ((tmpvar_29.w * hdr_24.x) * tmpvar_29.xyz);
  tmpvar_20 = (tmpvar_20 * tmpvar_15);
  mediump vec2 tmpvar_30;
  tmpvar_30.x = dot ((cse_19 - (2.0 * 
    (dot (tmpvar_3, cse_19) * tmpvar_3)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_30.y = (1.0 - clamp (dot (tmpvar_3, cse_19), 0.0, 1.0));
  mediump vec2 tmpvar_31;
  tmpvar_31 = (((tmpvar_30 * tmpvar_30) * tmpvar_30) * tmpvar_30);
  mediump vec2 tmpvar_32;
  tmpvar_32.x = tmpvar_31.x;
  tmpvar_32.y = (1.0 - sg_5.w);
  lowp vec4 tmpvar_33;
  tmpvar_33 = texture (unity_NHxRoughness, tmpvar_32);
  mediump vec3 tmpvar_34;
  tmpvar_34 = (((
    ((tmpvar_7 + ((tmpvar_33.w * 16.0) * sg_5.xyz)) * (tmpvar_9 * atten_2))
   * 
    clamp (dot (tmpvar_3, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_15)
   * tmpvar_7)) + (tmpvar_20 * mix (sg_5.xyz, vec3(
    clamp ((sg_5.w + (1.0 - tmpvar_8)), 0.0, 1.0)
  ), tmpvar_31.yyy)));
  mediump vec4 tmpvar_35;
  tmpvar_35.w = 1.0;
  tmpvar_35.xyz = tmpvar_34;
  c_1.w = tmpvar_35.w;
  c_1.xyz = tmpvar_34;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_36;
  xlat_varoutput_36.xyz = c_1.xyz;
  xlat_varoutput_36.w = 1.0;
  _glesFragData[0] = xlat_varoutput_36;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_SPECGLOSSMAP" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_10;
  tmpvar_10 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_11;
  texcoord_11.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_12;
  if ((_UVSec == 0.0)) {
    tmpvar_12 = tmpvar_2;
  } else {
    tmpvar_12 = tmpvar_3;
  };
  texcoord_11.zw = ((tmpvar_12 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_13;
  n_13 = (tmpvar_9.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_14;
  norm_14 = tmpvar_1;
  highp vec4 v_15;
  v_15.x = _World2Object[0].x;
  v_15.y = _World2Object[1].x;
  v_15.z = _World2Object[2].x;
  v_15.w = _World2Object[3].x;
  highp vec4 v_16;
  v_16.x = _World2Object[0].y;
  v_16.y = _World2Object[1].y;
  v_16.z = _World2Object[2].y;
  v_16.w = _World2Object[3].y;
  highp vec4 v_17;
  v_17.x = _World2Object[0].z;
  v_17.y = _World2Object[1].z;
  v_17.z = _World2Object[2].z;
  v_17.w = _World2Object[3].z;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(((
    (v_15.xyz * norm_14.x)
   + 
    (v_16.xyz * norm_14.y)
  ) + (v_17.xyz * norm_14.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_8 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = tmpvar_18;
  mediump vec4 normal_21;
  normal_21 = tmpvar_20;
  mediump vec3 x2_22;
  mediump vec3 x1_23;
  x1_23.x = dot (unity_SHAr, normal_21);
  x1_23.y = dot (unity_SHAg, normal_21);
  x1_23.z = dot (unity_SHAb, normal_21);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_21.xyzz * normal_21.yzzx);
  x2_22.x = dot (unity_SHBr, tmpvar_24);
  x2_22.y = dot (unity_SHBg, tmpvar_24);
  x2_22.z = dot (unity_SHBb, tmpvar_24);
  tmpvar_7.xyz = ((x2_22 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )) + x1_23);
  highp vec3 lightColor0_25;
  lightColor0_25 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_26;
  lightColor1_26 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_27;
  lightColor2_27 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_28;
  lightColor3_28 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_29;
  lightAttenSq_29 = unity_4LightAtten0;
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_4LightPosX0 - tmpvar_9.x);
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_4LightPosY0 - tmpvar_9.y);
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosZ0 - tmpvar_9.z);
  highp vec4 tmpvar_33;
  tmpvar_33 = (((tmpvar_30 * tmpvar_30) + (tmpvar_31 * tmpvar_31)) + (tmpvar_32 * tmpvar_32));
  highp vec4 tmpvar_34;
  tmpvar_34 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_30 * tmpvar_18.x) + (tmpvar_31 * tmpvar_18.y)) + (tmpvar_32 * tmpvar_18.z))
   * 
    inversesqrt(tmpvar_33)
  )) * (1.0/((1.0 + 
    (tmpvar_33 * lightAttenSq_29)
  ))));
  highp vec3 tmpvar_35;
  tmpvar_35 = (tmpvar_7.xyz + ((
    ((lightColor0_25 * tmpvar_34.x) + (lightColor1_26 * tmpvar_34.y))
   + 
    (lightColor2_27 * tmpvar_34.z)
  ) + (lightColor3_28 * tmpvar_34.w)));
  tmpvar_7.xyz = tmpvar_35;
  gl_Position = tmpvar_10;
  xlv_TEXCOORD0 = texcoord_11;
  xlv_TEXCOORD1 = normalize(n_13);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform lowp sampler2DShadow _ShadowMapTexture;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_4;
  cse_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 sg_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_5 = tmpvar_6;
  mediump vec3 tmpvar_7;
  mediump float tmpvar_8;
  tmpvar_8 = (1.0 - sg_5.x);
  tmpvar_7 = ((_Color.xyz * cse_4.xyz) * tmpvar_8);
  mediump vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = _LightColor0.xyz;
  tmpvar_9 = tmpvar_10;
  lowp float shadow_11;
  lowp float tmpvar_12;
  tmpvar_12 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  mediump float tmpvar_13;
  tmpvar_13 = (_LightShadowData.x + (tmpvar_12 * (1.0 - _LightShadowData.x)));
  shadow_11 = tmpvar_13;
  atten_2 = shadow_11;
  mediump float tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_14 = tmpvar_15.y;
  highp vec3 tmpvar_16;
  highp vec4 tmpvar_17;
  mediump vec3 cse_18;
  cse_18 = -(xlv_TEXCOORD1);
  tmpvar_16 = cse_18;
  tmpvar_17 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_19;
  mediump vec3 worldNormal_20;
  highp vec3 tmpvar_21;
  highp vec3 I_22;
  I_22 = -(tmpvar_16);
  tmpvar_21 = (I_22 - (2.0 * (
    dot (tmpvar_3, I_22)
   * tmpvar_3)));
  worldNormal_20 = tmpvar_21;
  mediump vec4 hdr_23;
  hdr_23 = tmpvar_17;
  highp float mip_24;
  mediump float tmpvar_25;
  tmpvar_25 = ((1.0 - sg_5.w) * 7.0);
  mip_24 = tmpvar_25;
  highp vec4 tmpvar_26;
  tmpvar_26.xyz = worldNormal_20;
  tmpvar_26.w = mip_24;
  lowp vec4 tmpvar_27;
  tmpvar_27 = textureCube (unity_SpecCube0, tmpvar_26.xyz, mip_24);
  mediump vec4 tmpvar_28;
  tmpvar_28 = tmpvar_27;
  tmpvar_19 = ((tmpvar_28.w * hdr_23.x) * tmpvar_28.xyz);
  tmpvar_19 = (tmpvar_19 * tmpvar_14);
  mediump vec2 tmpvar_29;
  tmpvar_29.x = dot ((cse_18 - (2.0 * 
    (dot (tmpvar_3, cse_18) * tmpvar_3)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_29.y = (1.0 - clamp (dot (tmpvar_3, cse_18), 0.0, 1.0));
  mediump vec2 tmpvar_30;
  tmpvar_30 = (((tmpvar_29 * tmpvar_29) * tmpvar_29) * tmpvar_29);
  mediump vec2 tmpvar_31;
  tmpvar_31.x = tmpvar_30.x;
  tmpvar_31.y = (1.0 - sg_5.w);
  lowp vec4 tmpvar_32;
  tmpvar_32 = texture2D (unity_NHxRoughness, tmpvar_31);
  mediump vec3 tmpvar_33;
  tmpvar_33 = (((
    ((tmpvar_7 + ((tmpvar_32.w * 16.0) * sg_5.xyz)) * (tmpvar_9 * atten_2))
   * 
    clamp (dot (tmpvar_3, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_14)
   * tmpvar_7)) + (tmpvar_19 * mix (sg_5.xyz, vec3(
    clamp ((sg_5.w + (1.0 - tmpvar_8)), 0.0, 1.0)
  ), tmpvar_30.yyy)));
  mediump vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = tmpvar_33;
  c_1.w = tmpvar_34.w;
  c_1.xyz = tmpvar_33;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_35;
  xlat_varoutput_35.xyz = c_1.xyz;
  xlat_varoutput_35.w = 1.0;
  gl_FragData[0] = xlat_varoutput_35;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_SPECGLOSSMAP" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
out mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_10;
  tmpvar_10 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_11;
  texcoord_11.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_12;
  if ((_UVSec == 0.0)) {
    tmpvar_12 = tmpvar_2;
  } else {
    tmpvar_12 = tmpvar_3;
  };
  texcoord_11.zw = ((tmpvar_12 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_13;
  n_13 = (tmpvar_9.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_14;
  norm_14 = tmpvar_1;
  highp vec4 v_15;
  v_15.x = _World2Object[0].x;
  v_15.y = _World2Object[1].x;
  v_15.z = _World2Object[2].x;
  v_15.w = _World2Object[3].x;
  highp vec4 v_16;
  v_16.x = _World2Object[0].y;
  v_16.y = _World2Object[1].y;
  v_16.z = _World2Object[2].y;
  v_16.w = _World2Object[3].y;
  highp vec4 v_17;
  v_17.x = _World2Object[0].z;
  v_17.y = _World2Object[1].z;
  v_17.z = _World2Object[2].z;
  v_17.w = _World2Object[3].z;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(((
    (v_15.xyz * norm_14.x)
   + 
    (v_16.xyz * norm_14.y)
  ) + (v_17.xyz * norm_14.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_8 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = tmpvar_18;
  mediump vec4 normal_21;
  normal_21 = tmpvar_20;
  mediump vec3 x2_22;
  mediump vec3 x1_23;
  x1_23.x = dot (unity_SHAr, normal_21);
  x1_23.y = dot (unity_SHAg, normal_21);
  x1_23.z = dot (unity_SHAb, normal_21);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_21.xyzz * normal_21.yzzx);
  x2_22.x = dot (unity_SHBr, tmpvar_24);
  x2_22.y = dot (unity_SHBg, tmpvar_24);
  x2_22.z = dot (unity_SHBb, tmpvar_24);
  tmpvar_7.xyz = ((x2_22 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )) + x1_23);
  highp vec3 lightColor0_25;
  lightColor0_25 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_26;
  lightColor1_26 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_27;
  lightColor2_27 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_28;
  lightColor3_28 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_29;
  lightAttenSq_29 = unity_4LightAtten0;
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_4LightPosX0 - tmpvar_9.x);
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_4LightPosY0 - tmpvar_9.y);
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosZ0 - tmpvar_9.z);
  highp vec4 tmpvar_33;
  tmpvar_33 = (((tmpvar_30 * tmpvar_30) + (tmpvar_31 * tmpvar_31)) + (tmpvar_32 * tmpvar_32));
  highp vec4 tmpvar_34;
  tmpvar_34 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_30 * tmpvar_18.x) + (tmpvar_31 * tmpvar_18.y)) + (tmpvar_32 * tmpvar_18.z))
   * 
    inversesqrt(tmpvar_33)
  )) * (1.0/((1.0 + 
    (tmpvar_33 * lightAttenSq_29)
  ))));
  highp vec3 tmpvar_35;
  tmpvar_35 = (tmpvar_7.xyz + ((
    ((lightColor0_25 * tmpvar_34.x) + (lightColor1_26 * tmpvar_34.y))
   + 
    (lightColor2_27 * tmpvar_34.z)
  ) + (lightColor3_28 * tmpvar_34.w)));
  tmpvar_7.xyz = tmpvar_35;
  gl_Position = tmpvar_10;
  xlv_TEXCOORD0 = texcoord_11;
  xlv_TEXCOORD1 = normalize(n_13);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_8;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform lowp sampler2DShadow _ShadowMapTexture;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
in mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_4;
  cse_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 sg_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_5 = tmpvar_6;
  mediump vec3 tmpvar_7;
  mediump float tmpvar_8;
  tmpvar_8 = (1.0 - sg_5.x);
  tmpvar_7 = ((_Color.xyz * cse_4.xyz) * tmpvar_8);
  mediump vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = _LightColor0.xyz;
  tmpvar_9 = tmpvar_10;
  lowp float shadow_11;
  mediump float tmpvar_12;
  tmpvar_12 = texture (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  lowp float tmpvar_13;
  tmpvar_13 = tmpvar_12;
  mediump float tmpvar_14;
  tmpvar_14 = (_LightShadowData.x + (tmpvar_13 * (1.0 - _LightShadowData.x)));
  shadow_11 = tmpvar_14;
  atten_2 = shadow_11;
  mediump float tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_15 = tmpvar_16.y;
  highp vec3 tmpvar_17;
  highp vec4 tmpvar_18;
  mediump vec3 cse_19;
  cse_19 = -(xlv_TEXCOORD1);
  tmpvar_17 = cse_19;
  tmpvar_18 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_20;
  mediump vec3 worldNormal_21;
  highp vec3 tmpvar_22;
  highp vec3 I_23;
  I_23 = -(tmpvar_17);
  tmpvar_22 = (I_23 - (2.0 * (
    dot (tmpvar_3, I_23)
   * tmpvar_3)));
  worldNormal_21 = tmpvar_22;
  mediump vec4 hdr_24;
  hdr_24 = tmpvar_18;
  highp float mip_25;
  mediump float tmpvar_26;
  tmpvar_26 = ((1.0 - sg_5.w) * 7.0);
  mip_25 = tmpvar_26;
  highp vec4 tmpvar_27;
  tmpvar_27.xyz = worldNormal_21;
  tmpvar_27.w = mip_25;
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture (unity_SpecCube0, tmpvar_27.xyz, mip_25);
  mediump vec4 tmpvar_29;
  tmpvar_29 = tmpvar_28;
  tmpvar_20 = ((tmpvar_29.w * hdr_24.x) * tmpvar_29.xyz);
  tmpvar_20 = (tmpvar_20 * tmpvar_15);
  mediump vec2 tmpvar_30;
  tmpvar_30.x = dot ((cse_19 - (2.0 * 
    (dot (tmpvar_3, cse_19) * tmpvar_3)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_30.y = (1.0 - clamp (dot (tmpvar_3, cse_19), 0.0, 1.0));
  mediump vec2 tmpvar_31;
  tmpvar_31 = (((tmpvar_30 * tmpvar_30) * tmpvar_30) * tmpvar_30);
  mediump vec2 tmpvar_32;
  tmpvar_32.x = tmpvar_31.x;
  tmpvar_32.y = (1.0 - sg_5.w);
  lowp vec4 tmpvar_33;
  tmpvar_33 = texture (unity_NHxRoughness, tmpvar_32);
  mediump vec3 tmpvar_34;
  tmpvar_34 = (((
    ((tmpvar_7 + ((tmpvar_33.w * 16.0) * sg_5.xyz)) * (tmpvar_9 * atten_2))
   * 
    clamp (dot (tmpvar_3, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_15)
   * tmpvar_7)) + (tmpvar_20 * mix (sg_5.xyz, vec3(
    clamp ((sg_5.w + (1.0 - tmpvar_8)), 0.0, 1.0)
  ), tmpvar_31.yyy)));
  mediump vec4 tmpvar_35;
  tmpvar_35.w = 1.0;
  tmpvar_35.xyz = tmpvar_34;
  c_1.w = tmpvar_35.w;
  c_1.xyz = tmpvar_34;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_36;
  xlat_varoutput_36.xyz = c_1.xyz;
  xlat_varoutput_36.w = 1.0;
  _glesFragData[0] = xlat_varoutput_36;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_10;
  texcoord_10.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_2;
  } else {
    tmpvar_11 = tmpvar_3;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_13;
  norm_13 = tmpvar_1;
  highp vec4 v_14;
  v_14.x = _World2Object[0].x;
  v_14.y = _World2Object[1].x;
  v_14.z = _World2Object[2].x;
  v_14.w = _World2Object[3].x;
  highp vec4 v_15;
  v_15.x = _World2Object[0].y;
  v_15.y = _World2Object[1].y;
  v_15.z = _World2Object[2].y;
  v_15.w = _World2Object[3].y;
  highp vec4 v_16;
  v_16.x = _World2Object[0].z;
  v_16.y = _World2Object[1].z;
  v_16.z = _World2Object[2].z;
  v_16.w = _World2Object[3].z;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize(((
    (v_14.xyz * norm_13.x)
   + 
    (v_15.xyz * norm_13.y)
  ) + (v_16.xyz * norm_13.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = tmpvar_17;
  mediump vec4 normal_19;
  normal_19 = tmpvar_18;
  mediump vec3 x2_20;
  mediump vec3 x1_21;
  x1_21.x = dot (unity_SHAr, normal_19);
  x1_21.y = dot (unity_SHAg, normal_19);
  x1_21.z = dot (unity_SHAb, normal_19);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (normal_19.xyzz * normal_19.yzzx);
  x2_20.x = dot (unity_SHBr, tmpvar_22);
  x2_20.y = dot (unity_SHBg, tmpvar_22);
  x2_20.z = dot (unity_SHBb, tmpvar_22);
  tmpvar_7.xyz = ((x2_20 + (unity_SHC.xyz * 
    ((normal_19.x * normal_19.x) - (normal_19.y * normal_19.y))
  )) + x1_21);
  gl_Position = tmpvar_9;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = normalize(n_12);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 unity_ColorSpaceDouble;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _DetailAlbedoMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 c_1;
  mediump vec3 tmpvar_2;
  tmpvar_2 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_3;
  cse_3 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 sg_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_4 = tmpvar_5;
  mediump vec3 detailAlbedo_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = texture2D (_DetailAlbedoMap, xlv_TEXCOORD0.zw).xyz;
  detailAlbedo_6 = tmpvar_7;
  mediump vec3 tmpvar_8;
  mediump float tmpvar_9;
  tmpvar_9 = (1.0 - sg_4.x);
  tmpvar_8 = (((_Color.xyz * cse_3.xyz) * (detailAlbedo_6 * unity_ColorSpaceDouble.xyz)) * tmpvar_9);
  mediump vec3 tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = _LightColor0.xyz;
  tmpvar_10 = tmpvar_11;
  mediump float tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_12 = tmpvar_13.y;
  highp vec3 tmpvar_14;
  highp vec4 tmpvar_15;
  mediump vec3 cse_16;
  cse_16 = -(xlv_TEXCOORD1);
  tmpvar_14 = cse_16;
  tmpvar_15 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_17;
  mediump vec3 worldNormal_18;
  highp vec3 tmpvar_19;
  highp vec3 I_20;
  I_20 = -(tmpvar_14);
  tmpvar_19 = (I_20 - (2.0 * (
    dot (tmpvar_2, I_20)
   * tmpvar_2)));
  worldNormal_18 = tmpvar_19;
  mediump vec4 hdr_21;
  hdr_21 = tmpvar_15;
  highp float mip_22;
  mediump float tmpvar_23;
  tmpvar_23 = ((1.0 - sg_4.w) * 7.0);
  mip_22 = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24.xyz = worldNormal_18;
  tmpvar_24.w = mip_22;
  lowp vec4 tmpvar_25;
  tmpvar_25 = textureCube (unity_SpecCube0, tmpvar_24.xyz, mip_22);
  mediump vec4 tmpvar_26;
  tmpvar_26 = tmpvar_25;
  tmpvar_17 = ((tmpvar_26.w * hdr_21.x) * tmpvar_26.xyz);
  tmpvar_17 = (tmpvar_17 * tmpvar_12);
  mediump vec2 tmpvar_27;
  tmpvar_27.x = dot ((cse_16 - (2.0 * 
    (dot (tmpvar_2, cse_16) * tmpvar_2)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_27.y = (1.0 - clamp (dot (tmpvar_2, cse_16), 0.0, 1.0));
  mediump vec2 tmpvar_28;
  tmpvar_28 = (((tmpvar_27 * tmpvar_27) * tmpvar_27) * tmpvar_27);
  mediump vec2 tmpvar_29;
  tmpvar_29.x = tmpvar_28.x;
  tmpvar_29.y = (1.0 - sg_4.w);
  lowp vec4 tmpvar_30;
  tmpvar_30 = texture2D (unity_NHxRoughness, tmpvar_29);
  mediump vec3 tmpvar_31;
  tmpvar_31 = (((
    ((tmpvar_8 + ((tmpvar_30.w * 16.0) * sg_4.xyz)) * tmpvar_10)
   * 
    clamp (dot (tmpvar_2, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_12)
   * tmpvar_8)) + (tmpvar_17 * mix (sg_4.xyz, vec3(
    clamp ((sg_4.w + (1.0 - tmpvar_9)), 0.0, 1.0)
  ), tmpvar_28.yyy)));
  mediump vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = tmpvar_31;
  c_1.w = tmpvar_32.w;
  c_1.xyz = tmpvar_31;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_33;
  xlat_varoutput_33.xyz = c_1.xyz;
  xlat_varoutput_33.w = 1.0;
  gl_FragData[0] = xlat_varoutput_33;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_10;
  texcoord_10.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_2;
  } else {
    tmpvar_11 = tmpvar_3;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_13;
  norm_13 = tmpvar_1;
  highp vec4 v_14;
  v_14.x = _World2Object[0].x;
  v_14.y = _World2Object[1].x;
  v_14.z = _World2Object[2].x;
  v_14.w = _World2Object[3].x;
  highp vec4 v_15;
  v_15.x = _World2Object[0].y;
  v_15.y = _World2Object[1].y;
  v_15.z = _World2Object[2].y;
  v_15.w = _World2Object[3].y;
  highp vec4 v_16;
  v_16.x = _World2Object[0].z;
  v_16.y = _World2Object[1].z;
  v_16.z = _World2Object[2].z;
  v_16.w = _World2Object[3].z;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize(((
    (v_14.xyz * norm_13.x)
   + 
    (v_15.xyz * norm_13.y)
  ) + (v_16.xyz * norm_13.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = tmpvar_17;
  mediump vec4 normal_19;
  normal_19 = tmpvar_18;
  mediump vec3 x2_20;
  mediump vec3 x1_21;
  x1_21.x = dot (unity_SHAr, normal_19);
  x1_21.y = dot (unity_SHAg, normal_19);
  x1_21.z = dot (unity_SHAb, normal_19);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (normal_19.xyzz * normal_19.yzzx);
  x2_20.x = dot (unity_SHBr, tmpvar_22);
  x2_20.y = dot (unity_SHBg, tmpvar_22);
  x2_20.z = dot (unity_SHBb, tmpvar_22);
  tmpvar_7.xyz = ((x2_20 + (unity_SHC.xyz * 
    ((normal_19.x * normal_19.x) - (normal_19.y * normal_19.y))
  )) + x1_21);
  gl_Position = tmpvar_9;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = normalize(n_12);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 unity_ColorSpaceDouble;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _DetailAlbedoMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 c_1;
  mediump vec3 tmpvar_2;
  tmpvar_2 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_3;
  cse_3 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 sg_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_4 = tmpvar_5;
  mediump vec3 detailAlbedo_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = texture (_DetailAlbedoMap, xlv_TEXCOORD0.zw).xyz;
  detailAlbedo_6 = tmpvar_7;
  mediump vec3 tmpvar_8;
  mediump float tmpvar_9;
  tmpvar_9 = (1.0 - sg_4.x);
  tmpvar_8 = (((_Color.xyz * cse_3.xyz) * (detailAlbedo_6 * unity_ColorSpaceDouble.xyz)) * tmpvar_9);
  mediump vec3 tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = _LightColor0.xyz;
  tmpvar_10 = tmpvar_11;
  mediump float tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_12 = tmpvar_13.y;
  highp vec3 tmpvar_14;
  highp vec4 tmpvar_15;
  mediump vec3 cse_16;
  cse_16 = -(xlv_TEXCOORD1);
  tmpvar_14 = cse_16;
  tmpvar_15 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_17;
  mediump vec3 worldNormal_18;
  highp vec3 tmpvar_19;
  highp vec3 I_20;
  I_20 = -(tmpvar_14);
  tmpvar_19 = (I_20 - (2.0 * (
    dot (tmpvar_2, I_20)
   * tmpvar_2)));
  worldNormal_18 = tmpvar_19;
  mediump vec4 hdr_21;
  hdr_21 = tmpvar_15;
  highp float mip_22;
  mediump float tmpvar_23;
  tmpvar_23 = ((1.0 - sg_4.w) * 7.0);
  mip_22 = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24.xyz = worldNormal_18;
  tmpvar_24.w = mip_22;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture (unity_SpecCube0, tmpvar_24.xyz, mip_22);
  mediump vec4 tmpvar_26;
  tmpvar_26 = tmpvar_25;
  tmpvar_17 = ((tmpvar_26.w * hdr_21.x) * tmpvar_26.xyz);
  tmpvar_17 = (tmpvar_17 * tmpvar_12);
  mediump vec2 tmpvar_27;
  tmpvar_27.x = dot ((cse_16 - (2.0 * 
    (dot (tmpvar_2, cse_16) * tmpvar_2)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_27.y = (1.0 - clamp (dot (tmpvar_2, cse_16), 0.0, 1.0));
  mediump vec2 tmpvar_28;
  tmpvar_28 = (((tmpvar_27 * tmpvar_27) * tmpvar_27) * tmpvar_27);
  mediump vec2 tmpvar_29;
  tmpvar_29.x = tmpvar_28.x;
  tmpvar_29.y = (1.0 - sg_4.w);
  lowp vec4 tmpvar_30;
  tmpvar_30 = texture (unity_NHxRoughness, tmpvar_29);
  mediump vec3 tmpvar_31;
  tmpvar_31 = (((
    ((tmpvar_8 + ((tmpvar_30.w * 16.0) * sg_4.xyz)) * tmpvar_10)
   * 
    clamp (dot (tmpvar_2, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_12)
   * tmpvar_8)) + (tmpvar_17 * mix (sg_4.xyz, vec3(
    clamp ((sg_4.w + (1.0 - tmpvar_9)), 0.0, 1.0)
  ), tmpvar_28.yyy)));
  mediump vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = tmpvar_31;
  c_1.w = tmpvar_32.w;
  c_1.xyz = tmpvar_31;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_33;
  xlat_varoutput_33.xyz = c_1.xyz;
  xlat_varoutput_33.w = 1.0;
  _glesFragData[0] = xlat_varoutput_33;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_10;
  tmpvar_10 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_11;
  texcoord_11.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_12;
  if ((_UVSec == 0.0)) {
    tmpvar_12 = tmpvar_2;
  } else {
    tmpvar_12 = tmpvar_3;
  };
  texcoord_11.zw = ((tmpvar_12 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_13;
  n_13 = (tmpvar_9.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_14;
  norm_14 = tmpvar_1;
  highp vec4 v_15;
  v_15.x = _World2Object[0].x;
  v_15.y = _World2Object[1].x;
  v_15.z = _World2Object[2].x;
  v_15.w = _World2Object[3].x;
  highp vec4 v_16;
  v_16.x = _World2Object[0].y;
  v_16.y = _World2Object[1].y;
  v_16.z = _World2Object[2].y;
  v_16.w = _World2Object[3].y;
  highp vec4 v_17;
  v_17.x = _World2Object[0].z;
  v_17.y = _World2Object[1].z;
  v_17.z = _World2Object[2].z;
  v_17.w = _World2Object[3].z;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(((
    (v_15.xyz * norm_14.x)
   + 
    (v_16.xyz * norm_14.y)
  ) + (v_17.xyz * norm_14.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_8 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = tmpvar_18;
  mediump vec4 normal_21;
  normal_21 = tmpvar_20;
  mediump vec3 x2_22;
  mediump vec3 x1_23;
  x1_23.x = dot (unity_SHAr, normal_21);
  x1_23.y = dot (unity_SHAg, normal_21);
  x1_23.z = dot (unity_SHAb, normal_21);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_21.xyzz * normal_21.yzzx);
  x2_22.x = dot (unity_SHBr, tmpvar_24);
  x2_22.y = dot (unity_SHBg, tmpvar_24);
  x2_22.z = dot (unity_SHBb, tmpvar_24);
  tmpvar_7.xyz = ((x2_22 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )) + x1_23);
  gl_Position = tmpvar_10;
  xlv_TEXCOORD0 = texcoord_11;
  xlv_TEXCOORD1 = normalize(n_13);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 unity_ColorSpaceDouble;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _DetailAlbedoMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform sampler2D _ShadowMapTexture;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_4;
  cse_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 sg_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_5 = tmpvar_6;
  mediump vec3 detailAlbedo_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = texture2D (_DetailAlbedoMap, xlv_TEXCOORD0.zw).xyz;
  detailAlbedo_7 = tmpvar_8;
  mediump vec3 tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = (1.0 - sg_5.x);
  tmpvar_9 = (((_Color.xyz * cse_4.xyz) * (detailAlbedo_7 * unity_ColorSpaceDouble.xyz)) * tmpvar_10);
  mediump vec3 tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = _LightColor0.xyz;
  tmpvar_11 = tmpvar_12;
  lowp float tmpvar_13;
  mediump float dist_14;
  lowp float tmpvar_15;
  tmpvar_15 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_14 = tmpvar_15;
  mediump float tmpvar_16;
  tmpvar_16 = max (float((dist_14 > 
    (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w)
  )), _LightShadowData.x);
  tmpvar_13 = tmpvar_16;
  atten_2 = tmpvar_13;
  mediump float tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_17 = tmpvar_18.y;
  highp vec3 tmpvar_19;
  highp vec4 tmpvar_20;
  mediump vec3 cse_21;
  cse_21 = -(xlv_TEXCOORD1);
  tmpvar_19 = cse_21;
  tmpvar_20 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_22;
  mediump vec3 worldNormal_23;
  highp vec3 tmpvar_24;
  highp vec3 I_25;
  I_25 = -(tmpvar_19);
  tmpvar_24 = (I_25 - (2.0 * (
    dot (tmpvar_3, I_25)
   * tmpvar_3)));
  worldNormal_23 = tmpvar_24;
  mediump vec4 hdr_26;
  hdr_26 = tmpvar_20;
  highp float mip_27;
  mediump float tmpvar_28;
  tmpvar_28 = ((1.0 - sg_5.w) * 7.0);
  mip_27 = tmpvar_28;
  highp vec4 tmpvar_29;
  tmpvar_29.xyz = worldNormal_23;
  tmpvar_29.w = mip_27;
  lowp vec4 tmpvar_30;
  tmpvar_30 = textureCube (unity_SpecCube0, tmpvar_29.xyz, mip_27);
  mediump vec4 tmpvar_31;
  tmpvar_31 = tmpvar_30;
  tmpvar_22 = ((tmpvar_31.w * hdr_26.x) * tmpvar_31.xyz);
  tmpvar_22 = (tmpvar_22 * tmpvar_17);
  mediump vec2 tmpvar_32;
  tmpvar_32.x = dot ((cse_21 - (2.0 * 
    (dot (tmpvar_3, cse_21) * tmpvar_3)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_32.y = (1.0 - clamp (dot (tmpvar_3, cse_21), 0.0, 1.0));
  mediump vec2 tmpvar_33;
  tmpvar_33 = (((tmpvar_32 * tmpvar_32) * tmpvar_32) * tmpvar_32);
  mediump vec2 tmpvar_34;
  tmpvar_34.x = tmpvar_33.x;
  tmpvar_34.y = (1.0 - sg_5.w);
  lowp vec4 tmpvar_35;
  tmpvar_35 = texture2D (unity_NHxRoughness, tmpvar_34);
  mediump vec3 tmpvar_36;
  tmpvar_36 = (((
    ((tmpvar_9 + ((tmpvar_35.w * 16.0) * sg_5.xyz)) * (tmpvar_11 * atten_2))
   * 
    clamp (dot (tmpvar_3, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_17)
   * tmpvar_9)) + (tmpvar_22 * mix (sg_5.xyz, vec3(
    clamp ((sg_5.w + (1.0 - tmpvar_10)), 0.0, 1.0)
  ), tmpvar_33.yyy)));
  mediump vec4 tmpvar_37;
  tmpvar_37.w = 1.0;
  tmpvar_37.xyz = tmpvar_36;
  c_1.w = tmpvar_37.w;
  c_1.xyz = tmpvar_36;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_38;
  xlat_varoutput_38.xyz = c_1.xyz;
  xlat_varoutput_38.w = 1.0;
  gl_FragData[0] = xlat_varoutput_38;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_10;
  texcoord_10.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_2;
  } else {
    tmpvar_11 = tmpvar_3;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_13;
  norm_13 = tmpvar_1;
  highp vec4 v_14;
  v_14.x = _World2Object[0].x;
  v_14.y = _World2Object[1].x;
  v_14.z = _World2Object[2].x;
  v_14.w = _World2Object[3].x;
  highp vec4 v_15;
  v_15.x = _World2Object[0].y;
  v_15.y = _World2Object[1].y;
  v_15.z = _World2Object[2].y;
  v_15.w = _World2Object[3].y;
  highp vec4 v_16;
  v_16.x = _World2Object[0].z;
  v_16.y = _World2Object[1].z;
  v_16.z = _World2Object[2].z;
  v_16.w = _World2Object[3].z;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize(((
    (v_14.xyz * norm_13.x)
   + 
    (v_15.xyz * norm_13.y)
  ) + (v_16.xyz * norm_13.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = tmpvar_17;
  mediump vec4 normal_19;
  normal_19 = tmpvar_18;
  mediump vec3 x2_20;
  mediump vec3 x1_21;
  x1_21.x = dot (unity_SHAr, normal_19);
  x1_21.y = dot (unity_SHAg, normal_19);
  x1_21.z = dot (unity_SHAb, normal_19);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (normal_19.xyzz * normal_19.yzzx);
  x2_20.x = dot (unity_SHBr, tmpvar_22);
  x2_20.y = dot (unity_SHBg, tmpvar_22);
  x2_20.z = dot (unity_SHBb, tmpvar_22);
  tmpvar_7.xyz = ((x2_20 + (unity_SHC.xyz * 
    ((normal_19.x * normal_19.x) - (normal_19.y * normal_19.y))
  )) + x1_21);
  highp vec3 lightColor0_23;
  lightColor0_23 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_24;
  lightColor1_24 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_25;
  lightColor2_25 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_26;
  lightColor3_26 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_27;
  lightAttenSq_27 = unity_4LightAtten0;
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_4LightPosX0 - tmpvar_8.x);
  highp vec4 tmpvar_29;
  tmpvar_29 = (unity_4LightPosY0 - tmpvar_8.y);
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_4LightPosZ0 - tmpvar_8.z);
  highp vec4 tmpvar_31;
  tmpvar_31 = (((tmpvar_28 * tmpvar_28) + (tmpvar_29 * tmpvar_29)) + (tmpvar_30 * tmpvar_30));
  highp vec4 tmpvar_32;
  tmpvar_32 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_28 * tmpvar_17.x) + (tmpvar_29 * tmpvar_17.y)) + (tmpvar_30 * tmpvar_17.z))
   * 
    inversesqrt(tmpvar_31)
  )) * (1.0/((1.0 + 
    (tmpvar_31 * lightAttenSq_27)
  ))));
  highp vec3 tmpvar_33;
  tmpvar_33 = (tmpvar_7.xyz + ((
    ((lightColor0_23 * tmpvar_32.x) + (lightColor1_24 * tmpvar_32.y))
   + 
    (lightColor2_25 * tmpvar_32.z)
  ) + (lightColor3_26 * tmpvar_32.w)));
  tmpvar_7.xyz = tmpvar_33;
  gl_Position = tmpvar_9;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = normalize(n_12);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 unity_ColorSpaceDouble;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _DetailAlbedoMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 c_1;
  mediump vec3 tmpvar_2;
  tmpvar_2 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_3;
  cse_3 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 sg_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_4 = tmpvar_5;
  mediump vec3 detailAlbedo_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = texture2D (_DetailAlbedoMap, xlv_TEXCOORD0.zw).xyz;
  detailAlbedo_6 = tmpvar_7;
  mediump vec3 tmpvar_8;
  mediump float tmpvar_9;
  tmpvar_9 = (1.0 - sg_4.x);
  tmpvar_8 = (((_Color.xyz * cse_3.xyz) * (detailAlbedo_6 * unity_ColorSpaceDouble.xyz)) * tmpvar_9);
  mediump vec3 tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = _LightColor0.xyz;
  tmpvar_10 = tmpvar_11;
  mediump float tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_12 = tmpvar_13.y;
  highp vec3 tmpvar_14;
  highp vec4 tmpvar_15;
  mediump vec3 cse_16;
  cse_16 = -(xlv_TEXCOORD1);
  tmpvar_14 = cse_16;
  tmpvar_15 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_17;
  mediump vec3 worldNormal_18;
  highp vec3 tmpvar_19;
  highp vec3 I_20;
  I_20 = -(tmpvar_14);
  tmpvar_19 = (I_20 - (2.0 * (
    dot (tmpvar_2, I_20)
   * tmpvar_2)));
  worldNormal_18 = tmpvar_19;
  mediump vec4 hdr_21;
  hdr_21 = tmpvar_15;
  highp float mip_22;
  mediump float tmpvar_23;
  tmpvar_23 = ((1.0 - sg_4.w) * 7.0);
  mip_22 = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24.xyz = worldNormal_18;
  tmpvar_24.w = mip_22;
  lowp vec4 tmpvar_25;
  tmpvar_25 = textureCube (unity_SpecCube0, tmpvar_24.xyz, mip_22);
  mediump vec4 tmpvar_26;
  tmpvar_26 = tmpvar_25;
  tmpvar_17 = ((tmpvar_26.w * hdr_21.x) * tmpvar_26.xyz);
  tmpvar_17 = (tmpvar_17 * tmpvar_12);
  mediump vec2 tmpvar_27;
  tmpvar_27.x = dot ((cse_16 - (2.0 * 
    (dot (tmpvar_2, cse_16) * tmpvar_2)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_27.y = (1.0 - clamp (dot (tmpvar_2, cse_16), 0.0, 1.0));
  mediump vec2 tmpvar_28;
  tmpvar_28 = (((tmpvar_27 * tmpvar_27) * tmpvar_27) * tmpvar_27);
  mediump vec2 tmpvar_29;
  tmpvar_29.x = tmpvar_28.x;
  tmpvar_29.y = (1.0 - sg_4.w);
  lowp vec4 tmpvar_30;
  tmpvar_30 = texture2D (unity_NHxRoughness, tmpvar_29);
  mediump vec3 tmpvar_31;
  tmpvar_31 = (((
    ((tmpvar_8 + ((tmpvar_30.w * 16.0) * sg_4.xyz)) * tmpvar_10)
   * 
    clamp (dot (tmpvar_2, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_12)
   * tmpvar_8)) + (tmpvar_17 * mix (sg_4.xyz, vec3(
    clamp ((sg_4.w + (1.0 - tmpvar_9)), 0.0, 1.0)
  ), tmpvar_28.yyy)));
  mediump vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = tmpvar_31;
  c_1.w = tmpvar_32.w;
  c_1.xyz = tmpvar_31;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_33;
  xlat_varoutput_33.xyz = c_1.xyz;
  xlat_varoutput_33.w = 1.0;
  gl_FragData[0] = xlat_varoutput_33;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_10;
  texcoord_10.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_2;
  } else {
    tmpvar_11 = tmpvar_3;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_13;
  norm_13 = tmpvar_1;
  highp vec4 v_14;
  v_14.x = _World2Object[0].x;
  v_14.y = _World2Object[1].x;
  v_14.z = _World2Object[2].x;
  v_14.w = _World2Object[3].x;
  highp vec4 v_15;
  v_15.x = _World2Object[0].y;
  v_15.y = _World2Object[1].y;
  v_15.z = _World2Object[2].y;
  v_15.w = _World2Object[3].y;
  highp vec4 v_16;
  v_16.x = _World2Object[0].z;
  v_16.y = _World2Object[1].z;
  v_16.z = _World2Object[2].z;
  v_16.w = _World2Object[3].z;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize(((
    (v_14.xyz * norm_13.x)
   + 
    (v_15.xyz * norm_13.y)
  ) + (v_16.xyz * norm_13.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = tmpvar_17;
  mediump vec4 normal_19;
  normal_19 = tmpvar_18;
  mediump vec3 x2_20;
  mediump vec3 x1_21;
  x1_21.x = dot (unity_SHAr, normal_19);
  x1_21.y = dot (unity_SHAg, normal_19);
  x1_21.z = dot (unity_SHAb, normal_19);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (normal_19.xyzz * normal_19.yzzx);
  x2_20.x = dot (unity_SHBr, tmpvar_22);
  x2_20.y = dot (unity_SHBg, tmpvar_22);
  x2_20.z = dot (unity_SHBb, tmpvar_22);
  tmpvar_7.xyz = ((x2_20 + (unity_SHC.xyz * 
    ((normal_19.x * normal_19.x) - (normal_19.y * normal_19.y))
  )) + x1_21);
  highp vec3 lightColor0_23;
  lightColor0_23 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_24;
  lightColor1_24 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_25;
  lightColor2_25 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_26;
  lightColor3_26 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_27;
  lightAttenSq_27 = unity_4LightAtten0;
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_4LightPosX0 - tmpvar_8.x);
  highp vec4 tmpvar_29;
  tmpvar_29 = (unity_4LightPosY0 - tmpvar_8.y);
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_4LightPosZ0 - tmpvar_8.z);
  highp vec4 tmpvar_31;
  tmpvar_31 = (((tmpvar_28 * tmpvar_28) + (tmpvar_29 * tmpvar_29)) + (tmpvar_30 * tmpvar_30));
  highp vec4 tmpvar_32;
  tmpvar_32 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_28 * tmpvar_17.x) + (tmpvar_29 * tmpvar_17.y)) + (tmpvar_30 * tmpvar_17.z))
   * 
    inversesqrt(tmpvar_31)
  )) * (1.0/((1.0 + 
    (tmpvar_31 * lightAttenSq_27)
  ))));
  highp vec3 tmpvar_33;
  tmpvar_33 = (tmpvar_7.xyz + ((
    ((lightColor0_23 * tmpvar_32.x) + (lightColor1_24 * tmpvar_32.y))
   + 
    (lightColor2_25 * tmpvar_32.z)
  ) + (lightColor3_26 * tmpvar_32.w)));
  tmpvar_7.xyz = tmpvar_33;
  gl_Position = tmpvar_9;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = normalize(n_12);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 unity_ColorSpaceDouble;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _DetailAlbedoMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 c_1;
  mediump vec3 tmpvar_2;
  tmpvar_2 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_3;
  cse_3 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 sg_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_4 = tmpvar_5;
  mediump vec3 detailAlbedo_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = texture (_DetailAlbedoMap, xlv_TEXCOORD0.zw).xyz;
  detailAlbedo_6 = tmpvar_7;
  mediump vec3 tmpvar_8;
  mediump float tmpvar_9;
  tmpvar_9 = (1.0 - sg_4.x);
  tmpvar_8 = (((_Color.xyz * cse_3.xyz) * (detailAlbedo_6 * unity_ColorSpaceDouble.xyz)) * tmpvar_9);
  mediump vec3 tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = _LightColor0.xyz;
  tmpvar_10 = tmpvar_11;
  mediump float tmpvar_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_12 = tmpvar_13.y;
  highp vec3 tmpvar_14;
  highp vec4 tmpvar_15;
  mediump vec3 cse_16;
  cse_16 = -(xlv_TEXCOORD1);
  tmpvar_14 = cse_16;
  tmpvar_15 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_17;
  mediump vec3 worldNormal_18;
  highp vec3 tmpvar_19;
  highp vec3 I_20;
  I_20 = -(tmpvar_14);
  tmpvar_19 = (I_20 - (2.0 * (
    dot (tmpvar_2, I_20)
   * tmpvar_2)));
  worldNormal_18 = tmpvar_19;
  mediump vec4 hdr_21;
  hdr_21 = tmpvar_15;
  highp float mip_22;
  mediump float tmpvar_23;
  tmpvar_23 = ((1.0 - sg_4.w) * 7.0);
  mip_22 = tmpvar_23;
  highp vec4 tmpvar_24;
  tmpvar_24.xyz = worldNormal_18;
  tmpvar_24.w = mip_22;
  lowp vec4 tmpvar_25;
  tmpvar_25 = texture (unity_SpecCube0, tmpvar_24.xyz, mip_22);
  mediump vec4 tmpvar_26;
  tmpvar_26 = tmpvar_25;
  tmpvar_17 = ((tmpvar_26.w * hdr_21.x) * tmpvar_26.xyz);
  tmpvar_17 = (tmpvar_17 * tmpvar_12);
  mediump vec2 tmpvar_27;
  tmpvar_27.x = dot ((cse_16 - (2.0 * 
    (dot (tmpvar_2, cse_16) * tmpvar_2)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_27.y = (1.0 - clamp (dot (tmpvar_2, cse_16), 0.0, 1.0));
  mediump vec2 tmpvar_28;
  tmpvar_28 = (((tmpvar_27 * tmpvar_27) * tmpvar_27) * tmpvar_27);
  mediump vec2 tmpvar_29;
  tmpvar_29.x = tmpvar_28.x;
  tmpvar_29.y = (1.0 - sg_4.w);
  lowp vec4 tmpvar_30;
  tmpvar_30 = texture (unity_NHxRoughness, tmpvar_29);
  mediump vec3 tmpvar_31;
  tmpvar_31 = (((
    ((tmpvar_8 + ((tmpvar_30.w * 16.0) * sg_4.xyz)) * tmpvar_10)
   * 
    clamp (dot (tmpvar_2, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_12)
   * tmpvar_8)) + (tmpvar_17 * mix (sg_4.xyz, vec3(
    clamp ((sg_4.w + (1.0 - tmpvar_9)), 0.0, 1.0)
  ), tmpvar_28.yyy)));
  mediump vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = tmpvar_31;
  c_1.w = tmpvar_32.w;
  c_1.xyz = tmpvar_31;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_33;
  xlat_varoutput_33.xyz = c_1.xyz;
  xlat_varoutput_33.w = 1.0;
  _glesFragData[0] = xlat_varoutput_33;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_10;
  tmpvar_10 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_11;
  texcoord_11.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_12;
  if ((_UVSec == 0.0)) {
    tmpvar_12 = tmpvar_2;
  } else {
    tmpvar_12 = tmpvar_3;
  };
  texcoord_11.zw = ((tmpvar_12 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_13;
  n_13 = (tmpvar_9.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_14;
  norm_14 = tmpvar_1;
  highp vec4 v_15;
  v_15.x = _World2Object[0].x;
  v_15.y = _World2Object[1].x;
  v_15.z = _World2Object[2].x;
  v_15.w = _World2Object[3].x;
  highp vec4 v_16;
  v_16.x = _World2Object[0].y;
  v_16.y = _World2Object[1].y;
  v_16.z = _World2Object[2].y;
  v_16.w = _World2Object[3].y;
  highp vec4 v_17;
  v_17.x = _World2Object[0].z;
  v_17.y = _World2Object[1].z;
  v_17.z = _World2Object[2].z;
  v_17.w = _World2Object[3].z;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(((
    (v_15.xyz * norm_14.x)
   + 
    (v_16.xyz * norm_14.y)
  ) + (v_17.xyz * norm_14.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_8 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = tmpvar_18;
  mediump vec4 normal_21;
  normal_21 = tmpvar_20;
  mediump vec3 x2_22;
  mediump vec3 x1_23;
  x1_23.x = dot (unity_SHAr, normal_21);
  x1_23.y = dot (unity_SHAg, normal_21);
  x1_23.z = dot (unity_SHAb, normal_21);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_21.xyzz * normal_21.yzzx);
  x2_22.x = dot (unity_SHBr, tmpvar_24);
  x2_22.y = dot (unity_SHBg, tmpvar_24);
  x2_22.z = dot (unity_SHBb, tmpvar_24);
  tmpvar_7.xyz = ((x2_22 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )) + x1_23);
  highp vec3 lightColor0_25;
  lightColor0_25 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_26;
  lightColor1_26 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_27;
  lightColor2_27 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_28;
  lightColor3_28 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_29;
  lightAttenSq_29 = unity_4LightAtten0;
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_4LightPosX0 - tmpvar_9.x);
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_4LightPosY0 - tmpvar_9.y);
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosZ0 - tmpvar_9.z);
  highp vec4 tmpvar_33;
  tmpvar_33 = (((tmpvar_30 * tmpvar_30) + (tmpvar_31 * tmpvar_31)) + (tmpvar_32 * tmpvar_32));
  highp vec4 tmpvar_34;
  tmpvar_34 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_30 * tmpvar_18.x) + (tmpvar_31 * tmpvar_18.y)) + (tmpvar_32 * tmpvar_18.z))
   * 
    inversesqrt(tmpvar_33)
  )) * (1.0/((1.0 + 
    (tmpvar_33 * lightAttenSq_29)
  ))));
  highp vec3 tmpvar_35;
  tmpvar_35 = (tmpvar_7.xyz + ((
    ((lightColor0_25 * tmpvar_34.x) + (lightColor1_26 * tmpvar_34.y))
   + 
    (lightColor2_27 * tmpvar_34.z)
  ) + (lightColor3_28 * tmpvar_34.w)));
  tmpvar_7.xyz = tmpvar_35;
  gl_Position = tmpvar_10;
  xlv_TEXCOORD0 = texcoord_11;
  xlv_TEXCOORD1 = normalize(n_13);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 unity_ColorSpaceDouble;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _DetailAlbedoMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform sampler2D _ShadowMapTexture;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_4;
  cse_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 sg_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_5 = tmpvar_6;
  mediump vec3 detailAlbedo_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = texture2D (_DetailAlbedoMap, xlv_TEXCOORD0.zw).xyz;
  detailAlbedo_7 = tmpvar_8;
  mediump vec3 tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = (1.0 - sg_5.x);
  tmpvar_9 = (((_Color.xyz * cse_4.xyz) * (detailAlbedo_7 * unity_ColorSpaceDouble.xyz)) * tmpvar_10);
  mediump vec3 tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = _LightColor0.xyz;
  tmpvar_11 = tmpvar_12;
  lowp float tmpvar_13;
  mediump float dist_14;
  lowp float tmpvar_15;
  tmpvar_15 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_14 = tmpvar_15;
  mediump float tmpvar_16;
  tmpvar_16 = max (float((dist_14 > 
    (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w)
  )), _LightShadowData.x);
  tmpvar_13 = tmpvar_16;
  atten_2 = tmpvar_13;
  mediump float tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_17 = tmpvar_18.y;
  highp vec3 tmpvar_19;
  highp vec4 tmpvar_20;
  mediump vec3 cse_21;
  cse_21 = -(xlv_TEXCOORD1);
  tmpvar_19 = cse_21;
  tmpvar_20 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_22;
  mediump vec3 worldNormal_23;
  highp vec3 tmpvar_24;
  highp vec3 I_25;
  I_25 = -(tmpvar_19);
  tmpvar_24 = (I_25 - (2.0 * (
    dot (tmpvar_3, I_25)
   * tmpvar_3)));
  worldNormal_23 = tmpvar_24;
  mediump vec4 hdr_26;
  hdr_26 = tmpvar_20;
  highp float mip_27;
  mediump float tmpvar_28;
  tmpvar_28 = ((1.0 - sg_5.w) * 7.0);
  mip_27 = tmpvar_28;
  highp vec4 tmpvar_29;
  tmpvar_29.xyz = worldNormal_23;
  tmpvar_29.w = mip_27;
  lowp vec4 tmpvar_30;
  tmpvar_30 = textureCube (unity_SpecCube0, tmpvar_29.xyz, mip_27);
  mediump vec4 tmpvar_31;
  tmpvar_31 = tmpvar_30;
  tmpvar_22 = ((tmpvar_31.w * hdr_26.x) * tmpvar_31.xyz);
  tmpvar_22 = (tmpvar_22 * tmpvar_17);
  mediump vec2 tmpvar_32;
  tmpvar_32.x = dot ((cse_21 - (2.0 * 
    (dot (tmpvar_3, cse_21) * tmpvar_3)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_32.y = (1.0 - clamp (dot (tmpvar_3, cse_21), 0.0, 1.0));
  mediump vec2 tmpvar_33;
  tmpvar_33 = (((tmpvar_32 * tmpvar_32) * tmpvar_32) * tmpvar_32);
  mediump vec2 tmpvar_34;
  tmpvar_34.x = tmpvar_33.x;
  tmpvar_34.y = (1.0 - sg_5.w);
  lowp vec4 tmpvar_35;
  tmpvar_35 = texture2D (unity_NHxRoughness, tmpvar_34);
  mediump vec3 tmpvar_36;
  tmpvar_36 = (((
    ((tmpvar_9 + ((tmpvar_35.w * 16.0) * sg_5.xyz)) * (tmpvar_11 * atten_2))
   * 
    clamp (dot (tmpvar_3, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_17)
   * tmpvar_9)) + (tmpvar_22 * mix (sg_5.xyz, vec3(
    clamp ((sg_5.w + (1.0 - tmpvar_10)), 0.0, 1.0)
  ), tmpvar_33.yyy)));
  mediump vec4 tmpvar_37;
  tmpvar_37.w = 1.0;
  tmpvar_37.xyz = tmpvar_36;
  c_1.w = tmpvar_37.w;
  c_1.xyz = tmpvar_36;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_38;
  xlat_varoutput_38.xyz = c_1.xyz;
  xlat_varoutput_38.w = 1.0;
  gl_FragData[0] = xlat_varoutput_38;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_10;
  tmpvar_10 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_11;
  texcoord_11.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_12;
  if ((_UVSec == 0.0)) {
    tmpvar_12 = tmpvar_2;
  } else {
    tmpvar_12 = tmpvar_3;
  };
  texcoord_11.zw = ((tmpvar_12 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_13;
  n_13 = (tmpvar_9.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_14;
  norm_14 = tmpvar_1;
  highp vec4 v_15;
  v_15.x = _World2Object[0].x;
  v_15.y = _World2Object[1].x;
  v_15.z = _World2Object[2].x;
  v_15.w = _World2Object[3].x;
  highp vec4 v_16;
  v_16.x = _World2Object[0].y;
  v_16.y = _World2Object[1].y;
  v_16.z = _World2Object[2].y;
  v_16.w = _World2Object[3].y;
  highp vec4 v_17;
  v_17.x = _World2Object[0].z;
  v_17.y = _World2Object[1].z;
  v_17.z = _World2Object[2].z;
  v_17.w = _World2Object[3].z;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(((
    (v_15.xyz * norm_14.x)
   + 
    (v_16.xyz * norm_14.y)
  ) + (v_17.xyz * norm_14.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_8 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = tmpvar_18;
  mediump vec4 normal_21;
  normal_21 = tmpvar_20;
  mediump vec3 x2_22;
  mediump vec3 x1_23;
  x1_23.x = dot (unity_SHAr, normal_21);
  x1_23.y = dot (unity_SHAg, normal_21);
  x1_23.z = dot (unity_SHAb, normal_21);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_21.xyzz * normal_21.yzzx);
  x2_22.x = dot (unity_SHBr, tmpvar_24);
  x2_22.y = dot (unity_SHBg, tmpvar_24);
  x2_22.z = dot (unity_SHBb, tmpvar_24);
  tmpvar_7.xyz = ((x2_22 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )) + x1_23);
  gl_Position = tmpvar_10;
  xlv_TEXCOORD0 = texcoord_11;
  xlv_TEXCOORD1 = normalize(n_13);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 unity_ColorSpaceDouble;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _DetailAlbedoMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform lowp sampler2DShadow _ShadowMapTexture;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_4;
  cse_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 sg_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_5 = tmpvar_6;
  mediump vec3 detailAlbedo_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = texture2D (_DetailAlbedoMap, xlv_TEXCOORD0.zw).xyz;
  detailAlbedo_7 = tmpvar_8;
  mediump vec3 tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = (1.0 - sg_5.x);
  tmpvar_9 = (((_Color.xyz * cse_4.xyz) * (detailAlbedo_7 * unity_ColorSpaceDouble.xyz)) * tmpvar_10);
  mediump vec3 tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = _LightColor0.xyz;
  tmpvar_11 = tmpvar_12;
  lowp float shadow_13;
  lowp float tmpvar_14;
  tmpvar_14 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  mediump float tmpvar_15;
  tmpvar_15 = (_LightShadowData.x + (tmpvar_14 * (1.0 - _LightShadowData.x)));
  shadow_13 = tmpvar_15;
  atten_2 = shadow_13;
  mediump float tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_16 = tmpvar_17.y;
  highp vec3 tmpvar_18;
  highp vec4 tmpvar_19;
  mediump vec3 cse_20;
  cse_20 = -(xlv_TEXCOORD1);
  tmpvar_18 = cse_20;
  tmpvar_19 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_21;
  mediump vec3 worldNormal_22;
  highp vec3 tmpvar_23;
  highp vec3 I_24;
  I_24 = -(tmpvar_18);
  tmpvar_23 = (I_24 - (2.0 * (
    dot (tmpvar_3, I_24)
   * tmpvar_3)));
  worldNormal_22 = tmpvar_23;
  mediump vec4 hdr_25;
  hdr_25 = tmpvar_19;
  highp float mip_26;
  mediump float tmpvar_27;
  tmpvar_27 = ((1.0 - sg_5.w) * 7.0);
  mip_26 = tmpvar_27;
  highp vec4 tmpvar_28;
  tmpvar_28.xyz = worldNormal_22;
  tmpvar_28.w = mip_26;
  lowp vec4 tmpvar_29;
  tmpvar_29 = textureCube (unity_SpecCube0, tmpvar_28.xyz, mip_26);
  mediump vec4 tmpvar_30;
  tmpvar_30 = tmpvar_29;
  tmpvar_21 = ((tmpvar_30.w * hdr_25.x) * tmpvar_30.xyz);
  tmpvar_21 = (tmpvar_21 * tmpvar_16);
  mediump vec2 tmpvar_31;
  tmpvar_31.x = dot ((cse_20 - (2.0 * 
    (dot (tmpvar_3, cse_20) * tmpvar_3)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_31.y = (1.0 - clamp (dot (tmpvar_3, cse_20), 0.0, 1.0));
  mediump vec2 tmpvar_32;
  tmpvar_32 = (((tmpvar_31 * tmpvar_31) * tmpvar_31) * tmpvar_31);
  mediump vec2 tmpvar_33;
  tmpvar_33.x = tmpvar_32.x;
  tmpvar_33.y = (1.0 - sg_5.w);
  lowp vec4 tmpvar_34;
  tmpvar_34 = texture2D (unity_NHxRoughness, tmpvar_33);
  mediump vec3 tmpvar_35;
  tmpvar_35 = (((
    ((tmpvar_9 + ((tmpvar_34.w * 16.0) * sg_5.xyz)) * (tmpvar_11 * atten_2))
   * 
    clamp (dot (tmpvar_3, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_16)
   * tmpvar_9)) + (tmpvar_21 * mix (sg_5.xyz, vec3(
    clamp ((sg_5.w + (1.0 - tmpvar_10)), 0.0, 1.0)
  ), tmpvar_32.yyy)));
  mediump vec4 tmpvar_36;
  tmpvar_36.w = 1.0;
  tmpvar_36.xyz = tmpvar_35;
  c_1.w = tmpvar_36.w;
  c_1.xyz = tmpvar_35;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_37;
  xlat_varoutput_37.xyz = c_1.xyz;
  xlat_varoutput_37.w = 1.0;
  gl_FragData[0] = xlat_varoutput_37;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
out mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_10;
  tmpvar_10 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_11;
  texcoord_11.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_12;
  if ((_UVSec == 0.0)) {
    tmpvar_12 = tmpvar_2;
  } else {
    tmpvar_12 = tmpvar_3;
  };
  texcoord_11.zw = ((tmpvar_12 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_13;
  n_13 = (tmpvar_9.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_14;
  norm_14 = tmpvar_1;
  highp vec4 v_15;
  v_15.x = _World2Object[0].x;
  v_15.y = _World2Object[1].x;
  v_15.z = _World2Object[2].x;
  v_15.w = _World2Object[3].x;
  highp vec4 v_16;
  v_16.x = _World2Object[0].y;
  v_16.y = _World2Object[1].y;
  v_16.z = _World2Object[2].y;
  v_16.w = _World2Object[3].y;
  highp vec4 v_17;
  v_17.x = _World2Object[0].z;
  v_17.y = _World2Object[1].z;
  v_17.z = _World2Object[2].z;
  v_17.w = _World2Object[3].z;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(((
    (v_15.xyz * norm_14.x)
   + 
    (v_16.xyz * norm_14.y)
  ) + (v_17.xyz * norm_14.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_8 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = tmpvar_18;
  mediump vec4 normal_21;
  normal_21 = tmpvar_20;
  mediump vec3 x2_22;
  mediump vec3 x1_23;
  x1_23.x = dot (unity_SHAr, normal_21);
  x1_23.y = dot (unity_SHAg, normal_21);
  x1_23.z = dot (unity_SHAb, normal_21);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_21.xyzz * normal_21.yzzx);
  x2_22.x = dot (unity_SHBr, tmpvar_24);
  x2_22.y = dot (unity_SHBg, tmpvar_24);
  x2_22.z = dot (unity_SHBb, tmpvar_24);
  tmpvar_7.xyz = ((x2_22 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )) + x1_23);
  gl_Position = tmpvar_10;
  xlv_TEXCOORD0 = texcoord_11;
  xlv_TEXCOORD1 = normalize(n_13);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_8;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 unity_ColorSpaceDouble;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _DetailAlbedoMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform lowp sampler2DShadow _ShadowMapTexture;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
in mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_4;
  cse_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 sg_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_5 = tmpvar_6;
  mediump vec3 detailAlbedo_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = texture (_DetailAlbedoMap, xlv_TEXCOORD0.zw).xyz;
  detailAlbedo_7 = tmpvar_8;
  mediump vec3 tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = (1.0 - sg_5.x);
  tmpvar_9 = (((_Color.xyz * cse_4.xyz) * (detailAlbedo_7 * unity_ColorSpaceDouble.xyz)) * tmpvar_10);
  mediump vec3 tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = _LightColor0.xyz;
  tmpvar_11 = tmpvar_12;
  lowp float shadow_13;
  mediump float tmpvar_14;
  tmpvar_14 = texture (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  lowp float tmpvar_15;
  tmpvar_15 = tmpvar_14;
  mediump float tmpvar_16;
  tmpvar_16 = (_LightShadowData.x + (tmpvar_15 * (1.0 - _LightShadowData.x)));
  shadow_13 = tmpvar_16;
  atten_2 = shadow_13;
  mediump float tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_17 = tmpvar_18.y;
  highp vec3 tmpvar_19;
  highp vec4 tmpvar_20;
  mediump vec3 cse_21;
  cse_21 = -(xlv_TEXCOORD1);
  tmpvar_19 = cse_21;
  tmpvar_20 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_22;
  mediump vec3 worldNormal_23;
  highp vec3 tmpvar_24;
  highp vec3 I_25;
  I_25 = -(tmpvar_19);
  tmpvar_24 = (I_25 - (2.0 * (
    dot (tmpvar_3, I_25)
   * tmpvar_3)));
  worldNormal_23 = tmpvar_24;
  mediump vec4 hdr_26;
  hdr_26 = tmpvar_20;
  highp float mip_27;
  mediump float tmpvar_28;
  tmpvar_28 = ((1.0 - sg_5.w) * 7.0);
  mip_27 = tmpvar_28;
  highp vec4 tmpvar_29;
  tmpvar_29.xyz = worldNormal_23;
  tmpvar_29.w = mip_27;
  lowp vec4 tmpvar_30;
  tmpvar_30 = texture (unity_SpecCube0, tmpvar_29.xyz, mip_27);
  mediump vec4 tmpvar_31;
  tmpvar_31 = tmpvar_30;
  tmpvar_22 = ((tmpvar_31.w * hdr_26.x) * tmpvar_31.xyz);
  tmpvar_22 = (tmpvar_22 * tmpvar_17);
  mediump vec2 tmpvar_32;
  tmpvar_32.x = dot ((cse_21 - (2.0 * 
    (dot (tmpvar_3, cse_21) * tmpvar_3)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_32.y = (1.0 - clamp (dot (tmpvar_3, cse_21), 0.0, 1.0));
  mediump vec2 tmpvar_33;
  tmpvar_33 = (((tmpvar_32 * tmpvar_32) * tmpvar_32) * tmpvar_32);
  mediump vec2 tmpvar_34;
  tmpvar_34.x = tmpvar_33.x;
  tmpvar_34.y = (1.0 - sg_5.w);
  lowp vec4 tmpvar_35;
  tmpvar_35 = texture (unity_NHxRoughness, tmpvar_34);
  mediump vec3 tmpvar_36;
  tmpvar_36 = (((
    ((tmpvar_9 + ((tmpvar_35.w * 16.0) * sg_5.xyz)) * (tmpvar_11 * atten_2))
   * 
    clamp (dot (tmpvar_3, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_17)
   * tmpvar_9)) + (tmpvar_22 * mix (sg_5.xyz, vec3(
    clamp ((sg_5.w + (1.0 - tmpvar_10)), 0.0, 1.0)
  ), tmpvar_33.yyy)));
  mediump vec4 tmpvar_37;
  tmpvar_37.w = 1.0;
  tmpvar_37.xyz = tmpvar_36;
  c_1.w = tmpvar_37.w;
  c_1.xyz = tmpvar_36;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_38;
  xlat_varoutput_38.xyz = c_1.xyz;
  xlat_varoutput_38.w = 1.0;
  _glesFragData[0] = xlat_varoutput_38;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_10;
  tmpvar_10 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_11;
  texcoord_11.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_12;
  if ((_UVSec == 0.0)) {
    tmpvar_12 = tmpvar_2;
  } else {
    tmpvar_12 = tmpvar_3;
  };
  texcoord_11.zw = ((tmpvar_12 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_13;
  n_13 = (tmpvar_9.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_14;
  norm_14 = tmpvar_1;
  highp vec4 v_15;
  v_15.x = _World2Object[0].x;
  v_15.y = _World2Object[1].x;
  v_15.z = _World2Object[2].x;
  v_15.w = _World2Object[3].x;
  highp vec4 v_16;
  v_16.x = _World2Object[0].y;
  v_16.y = _World2Object[1].y;
  v_16.z = _World2Object[2].y;
  v_16.w = _World2Object[3].y;
  highp vec4 v_17;
  v_17.x = _World2Object[0].z;
  v_17.y = _World2Object[1].z;
  v_17.z = _World2Object[2].z;
  v_17.w = _World2Object[3].z;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(((
    (v_15.xyz * norm_14.x)
   + 
    (v_16.xyz * norm_14.y)
  ) + (v_17.xyz * norm_14.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_8 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = tmpvar_18;
  mediump vec4 normal_21;
  normal_21 = tmpvar_20;
  mediump vec3 x2_22;
  mediump vec3 x1_23;
  x1_23.x = dot (unity_SHAr, normal_21);
  x1_23.y = dot (unity_SHAg, normal_21);
  x1_23.z = dot (unity_SHAb, normal_21);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_21.xyzz * normal_21.yzzx);
  x2_22.x = dot (unity_SHBr, tmpvar_24);
  x2_22.y = dot (unity_SHBg, tmpvar_24);
  x2_22.z = dot (unity_SHBb, tmpvar_24);
  tmpvar_7.xyz = ((x2_22 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )) + x1_23);
  highp vec3 lightColor0_25;
  lightColor0_25 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_26;
  lightColor1_26 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_27;
  lightColor2_27 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_28;
  lightColor3_28 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_29;
  lightAttenSq_29 = unity_4LightAtten0;
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_4LightPosX0 - tmpvar_9.x);
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_4LightPosY0 - tmpvar_9.y);
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosZ0 - tmpvar_9.z);
  highp vec4 tmpvar_33;
  tmpvar_33 = (((tmpvar_30 * tmpvar_30) + (tmpvar_31 * tmpvar_31)) + (tmpvar_32 * tmpvar_32));
  highp vec4 tmpvar_34;
  tmpvar_34 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_30 * tmpvar_18.x) + (tmpvar_31 * tmpvar_18.y)) + (tmpvar_32 * tmpvar_18.z))
   * 
    inversesqrt(tmpvar_33)
  )) * (1.0/((1.0 + 
    (tmpvar_33 * lightAttenSq_29)
  ))));
  highp vec3 tmpvar_35;
  tmpvar_35 = (tmpvar_7.xyz + ((
    ((lightColor0_25 * tmpvar_34.x) + (lightColor1_26 * tmpvar_34.y))
   + 
    (lightColor2_27 * tmpvar_34.z)
  ) + (lightColor3_28 * tmpvar_34.w)));
  tmpvar_7.xyz = tmpvar_35;
  gl_Position = tmpvar_10;
  xlv_TEXCOORD0 = texcoord_11;
  xlv_TEXCOORD1 = normalize(n_13);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 unity_ColorSpaceDouble;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _DetailAlbedoMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform lowp sampler2DShadow _ShadowMapTexture;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_4;
  cse_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 sg_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_5 = tmpvar_6;
  mediump vec3 detailAlbedo_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = texture2D (_DetailAlbedoMap, xlv_TEXCOORD0.zw).xyz;
  detailAlbedo_7 = tmpvar_8;
  mediump vec3 tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = (1.0 - sg_5.x);
  tmpvar_9 = (((_Color.xyz * cse_4.xyz) * (detailAlbedo_7 * unity_ColorSpaceDouble.xyz)) * tmpvar_10);
  mediump vec3 tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = _LightColor0.xyz;
  tmpvar_11 = tmpvar_12;
  lowp float shadow_13;
  lowp float tmpvar_14;
  tmpvar_14 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  mediump float tmpvar_15;
  tmpvar_15 = (_LightShadowData.x + (tmpvar_14 * (1.0 - _LightShadowData.x)));
  shadow_13 = tmpvar_15;
  atten_2 = shadow_13;
  mediump float tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_16 = tmpvar_17.y;
  highp vec3 tmpvar_18;
  highp vec4 tmpvar_19;
  mediump vec3 cse_20;
  cse_20 = -(xlv_TEXCOORD1);
  tmpvar_18 = cse_20;
  tmpvar_19 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_21;
  mediump vec3 worldNormal_22;
  highp vec3 tmpvar_23;
  highp vec3 I_24;
  I_24 = -(tmpvar_18);
  tmpvar_23 = (I_24 - (2.0 * (
    dot (tmpvar_3, I_24)
   * tmpvar_3)));
  worldNormal_22 = tmpvar_23;
  mediump vec4 hdr_25;
  hdr_25 = tmpvar_19;
  highp float mip_26;
  mediump float tmpvar_27;
  tmpvar_27 = ((1.0 - sg_5.w) * 7.0);
  mip_26 = tmpvar_27;
  highp vec4 tmpvar_28;
  tmpvar_28.xyz = worldNormal_22;
  tmpvar_28.w = mip_26;
  lowp vec4 tmpvar_29;
  tmpvar_29 = textureCube (unity_SpecCube0, tmpvar_28.xyz, mip_26);
  mediump vec4 tmpvar_30;
  tmpvar_30 = tmpvar_29;
  tmpvar_21 = ((tmpvar_30.w * hdr_25.x) * tmpvar_30.xyz);
  tmpvar_21 = (tmpvar_21 * tmpvar_16);
  mediump vec2 tmpvar_31;
  tmpvar_31.x = dot ((cse_20 - (2.0 * 
    (dot (tmpvar_3, cse_20) * tmpvar_3)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_31.y = (1.0 - clamp (dot (tmpvar_3, cse_20), 0.0, 1.0));
  mediump vec2 tmpvar_32;
  tmpvar_32 = (((tmpvar_31 * tmpvar_31) * tmpvar_31) * tmpvar_31);
  mediump vec2 tmpvar_33;
  tmpvar_33.x = tmpvar_32.x;
  tmpvar_33.y = (1.0 - sg_5.w);
  lowp vec4 tmpvar_34;
  tmpvar_34 = texture2D (unity_NHxRoughness, tmpvar_33);
  mediump vec3 tmpvar_35;
  tmpvar_35 = (((
    ((tmpvar_9 + ((tmpvar_34.w * 16.0) * sg_5.xyz)) * (tmpvar_11 * atten_2))
   * 
    clamp (dot (tmpvar_3, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_16)
   * tmpvar_9)) + (tmpvar_21 * mix (sg_5.xyz, vec3(
    clamp ((sg_5.w + (1.0 - tmpvar_10)), 0.0, 1.0)
  ), tmpvar_32.yyy)));
  mediump vec4 tmpvar_36;
  tmpvar_36.w = 1.0;
  tmpvar_36.xyz = tmpvar_35;
  c_1.w = tmpvar_36.w;
  c_1.xyz = tmpvar_35;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_37;
  xlat_varoutput_37.xyz = c_1.xyz;
  xlat_varoutput_37.w = 1.0;
  gl_FragData[0] = xlat_varoutput_37;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
out mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_10;
  tmpvar_10 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_11;
  texcoord_11.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_12;
  if ((_UVSec == 0.0)) {
    tmpvar_12 = tmpvar_2;
  } else {
    tmpvar_12 = tmpvar_3;
  };
  texcoord_11.zw = ((tmpvar_12 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_13;
  n_13 = (tmpvar_9.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_14;
  norm_14 = tmpvar_1;
  highp vec4 v_15;
  v_15.x = _World2Object[0].x;
  v_15.y = _World2Object[1].x;
  v_15.z = _World2Object[2].x;
  v_15.w = _World2Object[3].x;
  highp vec4 v_16;
  v_16.x = _World2Object[0].y;
  v_16.y = _World2Object[1].y;
  v_16.z = _World2Object[2].y;
  v_16.w = _World2Object[3].y;
  highp vec4 v_17;
  v_17.x = _World2Object[0].z;
  v_17.y = _World2Object[1].z;
  v_17.z = _World2Object[2].z;
  v_17.w = _World2Object[3].z;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(((
    (v_15.xyz * norm_14.x)
   + 
    (v_16.xyz * norm_14.y)
  ) + (v_17.xyz * norm_14.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_8 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = tmpvar_18;
  mediump vec4 normal_21;
  normal_21 = tmpvar_20;
  mediump vec3 x2_22;
  mediump vec3 x1_23;
  x1_23.x = dot (unity_SHAr, normal_21);
  x1_23.y = dot (unity_SHAg, normal_21);
  x1_23.z = dot (unity_SHAb, normal_21);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_21.xyzz * normal_21.yzzx);
  x2_22.x = dot (unity_SHBr, tmpvar_24);
  x2_22.y = dot (unity_SHBg, tmpvar_24);
  x2_22.z = dot (unity_SHBb, tmpvar_24);
  tmpvar_7.xyz = ((x2_22 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )) + x1_23);
  highp vec3 lightColor0_25;
  lightColor0_25 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_26;
  lightColor1_26 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_27;
  lightColor2_27 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_28;
  lightColor3_28 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_29;
  lightAttenSq_29 = unity_4LightAtten0;
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_4LightPosX0 - tmpvar_9.x);
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_4LightPosY0 - tmpvar_9.y);
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosZ0 - tmpvar_9.z);
  highp vec4 tmpvar_33;
  tmpvar_33 = (((tmpvar_30 * tmpvar_30) + (tmpvar_31 * tmpvar_31)) + (tmpvar_32 * tmpvar_32));
  highp vec4 tmpvar_34;
  tmpvar_34 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_30 * tmpvar_18.x) + (tmpvar_31 * tmpvar_18.y)) + (tmpvar_32 * tmpvar_18.z))
   * 
    inversesqrt(tmpvar_33)
  )) * (1.0/((1.0 + 
    (tmpvar_33 * lightAttenSq_29)
  ))));
  highp vec3 tmpvar_35;
  tmpvar_35 = (tmpvar_7.xyz + ((
    ((lightColor0_25 * tmpvar_34.x) + (lightColor1_26 * tmpvar_34.y))
   + 
    (lightColor2_27 * tmpvar_34.z)
  ) + (lightColor3_28 * tmpvar_34.w)));
  tmpvar_7.xyz = tmpvar_35;
  gl_Position = tmpvar_10;
  xlv_TEXCOORD0 = texcoord_11;
  xlv_TEXCOORD1 = normalize(n_13);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_8;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 unity_ColorSpaceDouble;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _DetailAlbedoMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform lowp sampler2DShadow _ShadowMapTexture;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
in mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_4;
  cse_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 sg_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_5 = tmpvar_6;
  mediump vec3 detailAlbedo_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = texture (_DetailAlbedoMap, xlv_TEXCOORD0.zw).xyz;
  detailAlbedo_7 = tmpvar_8;
  mediump vec3 tmpvar_9;
  mediump float tmpvar_10;
  tmpvar_10 = (1.0 - sg_5.x);
  tmpvar_9 = (((_Color.xyz * cse_4.xyz) * (detailAlbedo_7 * unity_ColorSpaceDouble.xyz)) * tmpvar_10);
  mediump vec3 tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = _LightColor0.xyz;
  tmpvar_11 = tmpvar_12;
  lowp float shadow_13;
  mediump float tmpvar_14;
  tmpvar_14 = texture (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  lowp float tmpvar_15;
  tmpvar_15 = tmpvar_14;
  mediump float tmpvar_16;
  tmpvar_16 = (_LightShadowData.x + (tmpvar_15 * (1.0 - _LightShadowData.x)));
  shadow_13 = tmpvar_16;
  atten_2 = shadow_13;
  mediump float tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_17 = tmpvar_18.y;
  highp vec3 tmpvar_19;
  highp vec4 tmpvar_20;
  mediump vec3 cse_21;
  cse_21 = -(xlv_TEXCOORD1);
  tmpvar_19 = cse_21;
  tmpvar_20 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_22;
  mediump vec3 worldNormal_23;
  highp vec3 tmpvar_24;
  highp vec3 I_25;
  I_25 = -(tmpvar_19);
  tmpvar_24 = (I_25 - (2.0 * (
    dot (tmpvar_3, I_25)
   * tmpvar_3)));
  worldNormal_23 = tmpvar_24;
  mediump vec4 hdr_26;
  hdr_26 = tmpvar_20;
  highp float mip_27;
  mediump float tmpvar_28;
  tmpvar_28 = ((1.0 - sg_5.w) * 7.0);
  mip_27 = tmpvar_28;
  highp vec4 tmpvar_29;
  tmpvar_29.xyz = worldNormal_23;
  tmpvar_29.w = mip_27;
  lowp vec4 tmpvar_30;
  tmpvar_30 = texture (unity_SpecCube0, tmpvar_29.xyz, mip_27);
  mediump vec4 tmpvar_31;
  tmpvar_31 = tmpvar_30;
  tmpvar_22 = ((tmpvar_31.w * hdr_26.x) * tmpvar_31.xyz);
  tmpvar_22 = (tmpvar_22 * tmpvar_17);
  mediump vec2 tmpvar_32;
  tmpvar_32.x = dot ((cse_21 - (2.0 * 
    (dot (tmpvar_3, cse_21) * tmpvar_3)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_32.y = (1.0 - clamp (dot (tmpvar_3, cse_21), 0.0, 1.0));
  mediump vec2 tmpvar_33;
  tmpvar_33 = (((tmpvar_32 * tmpvar_32) * tmpvar_32) * tmpvar_32);
  mediump vec2 tmpvar_34;
  tmpvar_34.x = tmpvar_33.x;
  tmpvar_34.y = (1.0 - sg_5.w);
  lowp vec4 tmpvar_35;
  tmpvar_35 = texture (unity_NHxRoughness, tmpvar_34);
  mediump vec3 tmpvar_36;
  tmpvar_36 = (((
    ((tmpvar_9 + ((tmpvar_35.w * 16.0) * sg_5.xyz)) * (tmpvar_11 * atten_2))
   * 
    clamp (dot (tmpvar_3, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_17)
   * tmpvar_9)) + (tmpvar_22 * mix (sg_5.xyz, vec3(
    clamp ((sg_5.w + (1.0 - tmpvar_10)), 0.0, 1.0)
  ), tmpvar_33.yyy)));
  mediump vec4 tmpvar_37;
  tmpvar_37.w = 1.0;
  tmpvar_37.xyz = tmpvar_36;
  c_1.w = tmpvar_37.w;
  c_1.xyz = tmpvar_36;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_38;
  xlat_varoutput_38.xyz = c_1.xyz;
  xlat_varoutput_38.w = 1.0;
  _glesFragData[0] = xlat_varoutput_38;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_SPECGLOSSMAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_10;
  texcoord_10.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_2;
  } else {
    tmpvar_11 = tmpvar_3;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_13;
  norm_13 = tmpvar_1;
  highp vec4 v_14;
  v_14.x = _World2Object[0].x;
  v_14.y = _World2Object[1].x;
  v_14.z = _World2Object[2].x;
  v_14.w = _World2Object[3].x;
  highp vec4 v_15;
  v_15.x = _World2Object[0].y;
  v_15.y = _World2Object[1].y;
  v_15.z = _World2Object[2].y;
  v_15.w = _World2Object[3].y;
  highp vec4 v_16;
  v_16.x = _World2Object[0].z;
  v_16.y = _World2Object[1].z;
  v_16.z = _World2Object[2].z;
  v_16.w = _World2Object[3].z;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize(((
    (v_14.xyz * norm_13.x)
   + 
    (v_15.xyz * norm_13.y)
  ) + (v_16.xyz * norm_13.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = tmpvar_17;
  mediump vec4 normal_19;
  normal_19 = tmpvar_18;
  mediump vec3 x2_20;
  mediump vec3 x1_21;
  x1_21.x = dot (unity_SHAr, normal_19);
  x1_21.y = dot (unity_SHAg, normal_19);
  x1_21.z = dot (unity_SHAb, normal_19);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (normal_19.xyzz * normal_19.yzzx);
  x2_20.x = dot (unity_SHBr, tmpvar_22);
  x2_20.y = dot (unity_SHBg, tmpvar_22);
  x2_20.z = dot (unity_SHBb, tmpvar_22);
  tmpvar_7.xyz = ((x2_20 + (unity_SHC.xyz * 
    ((normal_19.x * normal_19.x) - (normal_19.y * normal_19.y))
  )) + x1_21);
  gl_Position = tmpvar_9;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = normalize(n_12);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform mediump vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 c_1;
  mediump vec3 tmpvar_2;
  tmpvar_2 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_3;
  cse_3 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 sg_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_4 = tmpvar_5;
  mediump vec3 tmpvar_6;
  mediump float tmpvar_7;
  tmpvar_7 = (1.0 - sg_4.x);
  tmpvar_6 = ((_Color.xyz * cse_3.xyz) * tmpvar_7);
  mediump vec3 tmpvar_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = _LightColor0.xyz;
  tmpvar_8 = tmpvar_9;
  mediump float tmpvar_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_10 = tmpvar_11.y;
  highp vec3 tmpvar_12;
  highp vec4 tmpvar_13;
  mediump vec3 cse_14;
  cse_14 = -(xlv_TEXCOORD1);
  tmpvar_12 = cse_14;
  tmpvar_13 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_15;
  mediump vec3 worldNormal_16;
  highp vec3 tmpvar_17;
  highp vec3 I_18;
  I_18 = -(tmpvar_12);
  tmpvar_17 = (I_18 - (2.0 * (
    dot (tmpvar_2, I_18)
   * tmpvar_2)));
  worldNormal_16 = tmpvar_17;
  mediump vec4 hdr_19;
  hdr_19 = tmpvar_13;
  highp float mip_20;
  mediump float tmpvar_21;
  tmpvar_21 = ((1.0 - sg_4.w) * 7.0);
  mip_20 = tmpvar_21;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = worldNormal_16;
  tmpvar_22.w = mip_20;
  lowp vec4 tmpvar_23;
  tmpvar_23 = textureCube (unity_SpecCube0, tmpvar_22.xyz, mip_20);
  mediump vec4 tmpvar_24;
  tmpvar_24 = tmpvar_23;
  tmpvar_15 = ((tmpvar_24.w * hdr_19.x) * tmpvar_24.xyz);
  tmpvar_15 = (tmpvar_15 * tmpvar_10);
  mediump vec2 tmpvar_25;
  tmpvar_25.x = dot ((cse_14 - (2.0 * 
    (dot (tmpvar_2, cse_14) * tmpvar_2)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_25.y = (1.0 - clamp (dot (tmpvar_2, cse_14), 0.0, 1.0));
  mediump vec2 tmpvar_26;
  tmpvar_26 = (((tmpvar_25 * tmpvar_25) * tmpvar_25) * tmpvar_25);
  mediump vec2 tmpvar_27;
  tmpvar_27.x = tmpvar_26.x;
  tmpvar_27.y = (1.0 - sg_4.w);
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture2D (unity_NHxRoughness, tmpvar_27);
  mediump vec3 tmpvar_29;
  tmpvar_29 = (((
    ((tmpvar_6 + ((tmpvar_28.w * 16.0) * sg_4.xyz)) * tmpvar_8)
   * 
    clamp (dot (tmpvar_2, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_10)
   * tmpvar_6)) + (tmpvar_15 * mix (sg_4.xyz, vec3(
    clamp ((sg_4.w + (1.0 - tmpvar_7)), 0.0, 1.0)
  ), tmpvar_26.yyy)));
  mediump vec4 tmpvar_30;
  tmpvar_30.w = 1.0;
  tmpvar_30.xyz = tmpvar_29;
  c_1.w = tmpvar_30.w;
  lowp vec4 tmpvar_31;
  tmpvar_31 = texture2D (_EmissionMap, xlv_TEXCOORD0.xy);
  c_1.xyz = (tmpvar_29 + (tmpvar_31.xyz * _EmissionColor.xyz));
  mediump vec4 xlat_varoutput_32;
  xlat_varoutput_32.xyz = c_1.xyz;
  xlat_varoutput_32.w = 1.0;
  gl_FragData[0] = xlat_varoutput_32;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_SPECGLOSSMAP" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_10;
  texcoord_10.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_2;
  } else {
    tmpvar_11 = tmpvar_3;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_13;
  norm_13 = tmpvar_1;
  highp vec4 v_14;
  v_14.x = _World2Object[0].x;
  v_14.y = _World2Object[1].x;
  v_14.z = _World2Object[2].x;
  v_14.w = _World2Object[3].x;
  highp vec4 v_15;
  v_15.x = _World2Object[0].y;
  v_15.y = _World2Object[1].y;
  v_15.z = _World2Object[2].y;
  v_15.w = _World2Object[3].y;
  highp vec4 v_16;
  v_16.x = _World2Object[0].z;
  v_16.y = _World2Object[1].z;
  v_16.z = _World2Object[2].z;
  v_16.w = _World2Object[3].z;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize(((
    (v_14.xyz * norm_13.x)
   + 
    (v_15.xyz * norm_13.y)
  ) + (v_16.xyz * norm_13.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = tmpvar_17;
  mediump vec4 normal_19;
  normal_19 = tmpvar_18;
  mediump vec3 x2_20;
  mediump vec3 x1_21;
  x1_21.x = dot (unity_SHAr, normal_19);
  x1_21.y = dot (unity_SHAg, normal_19);
  x1_21.z = dot (unity_SHAb, normal_19);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (normal_19.xyzz * normal_19.yzzx);
  x2_20.x = dot (unity_SHBr, tmpvar_22);
  x2_20.y = dot (unity_SHBg, tmpvar_22);
  x2_20.z = dot (unity_SHBb, tmpvar_22);
  tmpvar_7.xyz = ((x2_20 + (unity_SHC.xyz * 
    ((normal_19.x * normal_19.x) - (normal_19.y * normal_19.y))
  )) + x1_21);
  gl_Position = tmpvar_9;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = normalize(n_12);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform mediump vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 c_1;
  mediump vec3 tmpvar_2;
  tmpvar_2 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_3;
  cse_3 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 sg_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_4 = tmpvar_5;
  mediump vec3 tmpvar_6;
  mediump float tmpvar_7;
  tmpvar_7 = (1.0 - sg_4.x);
  tmpvar_6 = ((_Color.xyz * cse_3.xyz) * tmpvar_7);
  mediump vec3 tmpvar_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = _LightColor0.xyz;
  tmpvar_8 = tmpvar_9;
  mediump float tmpvar_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_10 = tmpvar_11.y;
  highp vec3 tmpvar_12;
  highp vec4 tmpvar_13;
  mediump vec3 cse_14;
  cse_14 = -(xlv_TEXCOORD1);
  tmpvar_12 = cse_14;
  tmpvar_13 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_15;
  mediump vec3 worldNormal_16;
  highp vec3 tmpvar_17;
  highp vec3 I_18;
  I_18 = -(tmpvar_12);
  tmpvar_17 = (I_18 - (2.0 * (
    dot (tmpvar_2, I_18)
   * tmpvar_2)));
  worldNormal_16 = tmpvar_17;
  mediump vec4 hdr_19;
  hdr_19 = tmpvar_13;
  highp float mip_20;
  mediump float tmpvar_21;
  tmpvar_21 = ((1.0 - sg_4.w) * 7.0);
  mip_20 = tmpvar_21;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = worldNormal_16;
  tmpvar_22.w = mip_20;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture (unity_SpecCube0, tmpvar_22.xyz, mip_20);
  mediump vec4 tmpvar_24;
  tmpvar_24 = tmpvar_23;
  tmpvar_15 = ((tmpvar_24.w * hdr_19.x) * tmpvar_24.xyz);
  tmpvar_15 = (tmpvar_15 * tmpvar_10);
  mediump vec2 tmpvar_25;
  tmpvar_25.x = dot ((cse_14 - (2.0 * 
    (dot (tmpvar_2, cse_14) * tmpvar_2)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_25.y = (1.0 - clamp (dot (tmpvar_2, cse_14), 0.0, 1.0));
  mediump vec2 tmpvar_26;
  tmpvar_26 = (((tmpvar_25 * tmpvar_25) * tmpvar_25) * tmpvar_25);
  mediump vec2 tmpvar_27;
  tmpvar_27.x = tmpvar_26.x;
  tmpvar_27.y = (1.0 - sg_4.w);
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture (unity_NHxRoughness, tmpvar_27);
  mediump vec3 tmpvar_29;
  tmpvar_29 = (((
    ((tmpvar_6 + ((tmpvar_28.w * 16.0) * sg_4.xyz)) * tmpvar_8)
   * 
    clamp (dot (tmpvar_2, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_10)
   * tmpvar_6)) + (tmpvar_15 * mix (sg_4.xyz, vec3(
    clamp ((sg_4.w + (1.0 - tmpvar_7)), 0.0, 1.0)
  ), tmpvar_26.yyy)));
  mediump vec4 tmpvar_30;
  tmpvar_30.w = 1.0;
  tmpvar_30.xyz = tmpvar_29;
  c_1.w = tmpvar_30.w;
  lowp vec4 tmpvar_31;
  tmpvar_31 = texture (_EmissionMap, xlv_TEXCOORD0.xy);
  c_1.xyz = (tmpvar_29 + (tmpvar_31.xyz * _EmissionColor.xyz));
  mediump vec4 xlat_varoutput_32;
  xlat_varoutput_32.xyz = c_1.xyz;
  xlat_varoutput_32.w = 1.0;
  _glesFragData[0] = xlat_varoutput_32;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_SPECGLOSSMAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_10;
  tmpvar_10 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_11;
  texcoord_11.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_12;
  if ((_UVSec == 0.0)) {
    tmpvar_12 = tmpvar_2;
  } else {
    tmpvar_12 = tmpvar_3;
  };
  texcoord_11.zw = ((tmpvar_12 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_13;
  n_13 = (tmpvar_9.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_14;
  norm_14 = tmpvar_1;
  highp vec4 v_15;
  v_15.x = _World2Object[0].x;
  v_15.y = _World2Object[1].x;
  v_15.z = _World2Object[2].x;
  v_15.w = _World2Object[3].x;
  highp vec4 v_16;
  v_16.x = _World2Object[0].y;
  v_16.y = _World2Object[1].y;
  v_16.z = _World2Object[2].y;
  v_16.w = _World2Object[3].y;
  highp vec4 v_17;
  v_17.x = _World2Object[0].z;
  v_17.y = _World2Object[1].z;
  v_17.z = _World2Object[2].z;
  v_17.w = _World2Object[3].z;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(((
    (v_15.xyz * norm_14.x)
   + 
    (v_16.xyz * norm_14.y)
  ) + (v_17.xyz * norm_14.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_8 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = tmpvar_18;
  mediump vec4 normal_21;
  normal_21 = tmpvar_20;
  mediump vec3 x2_22;
  mediump vec3 x1_23;
  x1_23.x = dot (unity_SHAr, normal_21);
  x1_23.y = dot (unity_SHAg, normal_21);
  x1_23.z = dot (unity_SHAb, normal_21);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_21.xyzz * normal_21.yzzx);
  x2_22.x = dot (unity_SHBr, tmpvar_24);
  x2_22.y = dot (unity_SHBg, tmpvar_24);
  x2_22.z = dot (unity_SHBb, tmpvar_24);
  tmpvar_7.xyz = ((x2_22 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )) + x1_23);
  gl_Position = tmpvar_10;
  xlv_TEXCOORD0 = texcoord_11;
  xlv_TEXCOORD1 = normalize(n_13);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform mediump vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
uniform sampler2D _ShadowMapTexture;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_4;
  cse_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 sg_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_5 = tmpvar_6;
  mediump vec3 tmpvar_7;
  mediump float tmpvar_8;
  tmpvar_8 = (1.0 - sg_5.x);
  tmpvar_7 = ((_Color.xyz * cse_4.xyz) * tmpvar_8);
  mediump vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = _LightColor0.xyz;
  tmpvar_9 = tmpvar_10;
  lowp float tmpvar_11;
  mediump float dist_12;
  lowp float tmpvar_13;
  tmpvar_13 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_12 = tmpvar_13;
  mediump float tmpvar_14;
  tmpvar_14 = max (float((dist_12 > 
    (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w)
  )), _LightShadowData.x);
  tmpvar_11 = tmpvar_14;
  atten_2 = tmpvar_11;
  mediump float tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_15 = tmpvar_16.y;
  highp vec3 tmpvar_17;
  highp vec4 tmpvar_18;
  mediump vec3 cse_19;
  cse_19 = -(xlv_TEXCOORD1);
  tmpvar_17 = cse_19;
  tmpvar_18 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_20;
  mediump vec3 worldNormal_21;
  highp vec3 tmpvar_22;
  highp vec3 I_23;
  I_23 = -(tmpvar_17);
  tmpvar_22 = (I_23 - (2.0 * (
    dot (tmpvar_3, I_23)
   * tmpvar_3)));
  worldNormal_21 = tmpvar_22;
  mediump vec4 hdr_24;
  hdr_24 = tmpvar_18;
  highp float mip_25;
  mediump float tmpvar_26;
  tmpvar_26 = ((1.0 - sg_5.w) * 7.0);
  mip_25 = tmpvar_26;
  highp vec4 tmpvar_27;
  tmpvar_27.xyz = worldNormal_21;
  tmpvar_27.w = mip_25;
  lowp vec4 tmpvar_28;
  tmpvar_28 = textureCube (unity_SpecCube0, tmpvar_27.xyz, mip_25);
  mediump vec4 tmpvar_29;
  tmpvar_29 = tmpvar_28;
  tmpvar_20 = ((tmpvar_29.w * hdr_24.x) * tmpvar_29.xyz);
  tmpvar_20 = (tmpvar_20 * tmpvar_15);
  mediump vec2 tmpvar_30;
  tmpvar_30.x = dot ((cse_19 - (2.0 * 
    (dot (tmpvar_3, cse_19) * tmpvar_3)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_30.y = (1.0 - clamp (dot (tmpvar_3, cse_19), 0.0, 1.0));
  mediump vec2 tmpvar_31;
  tmpvar_31 = (((tmpvar_30 * tmpvar_30) * tmpvar_30) * tmpvar_30);
  mediump vec2 tmpvar_32;
  tmpvar_32.x = tmpvar_31.x;
  tmpvar_32.y = (1.0 - sg_5.w);
  lowp vec4 tmpvar_33;
  tmpvar_33 = texture2D (unity_NHxRoughness, tmpvar_32);
  mediump vec3 tmpvar_34;
  tmpvar_34 = (((
    ((tmpvar_7 + ((tmpvar_33.w * 16.0) * sg_5.xyz)) * (tmpvar_9 * atten_2))
   * 
    clamp (dot (tmpvar_3, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_15)
   * tmpvar_7)) + (tmpvar_20 * mix (sg_5.xyz, vec3(
    clamp ((sg_5.w + (1.0 - tmpvar_8)), 0.0, 1.0)
  ), tmpvar_31.yyy)));
  mediump vec4 tmpvar_35;
  tmpvar_35.w = 1.0;
  tmpvar_35.xyz = tmpvar_34;
  c_1.w = tmpvar_35.w;
  lowp vec4 tmpvar_36;
  tmpvar_36 = texture2D (_EmissionMap, xlv_TEXCOORD0.xy);
  c_1.xyz = (tmpvar_34 + (tmpvar_36.xyz * _EmissionColor.xyz));
  mediump vec4 xlat_varoutput_37;
  xlat_varoutput_37.xyz = c_1.xyz;
  xlat_varoutput_37.w = 1.0;
  gl_FragData[0] = xlat_varoutput_37;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_EMISSION" "_SPECGLOSSMAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_10;
  texcoord_10.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_2;
  } else {
    tmpvar_11 = tmpvar_3;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_13;
  norm_13 = tmpvar_1;
  highp vec4 v_14;
  v_14.x = _World2Object[0].x;
  v_14.y = _World2Object[1].x;
  v_14.z = _World2Object[2].x;
  v_14.w = _World2Object[3].x;
  highp vec4 v_15;
  v_15.x = _World2Object[0].y;
  v_15.y = _World2Object[1].y;
  v_15.z = _World2Object[2].y;
  v_15.w = _World2Object[3].y;
  highp vec4 v_16;
  v_16.x = _World2Object[0].z;
  v_16.y = _World2Object[1].z;
  v_16.z = _World2Object[2].z;
  v_16.w = _World2Object[3].z;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize(((
    (v_14.xyz * norm_13.x)
   + 
    (v_15.xyz * norm_13.y)
  ) + (v_16.xyz * norm_13.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = tmpvar_17;
  mediump vec4 normal_19;
  normal_19 = tmpvar_18;
  mediump vec3 x2_20;
  mediump vec3 x1_21;
  x1_21.x = dot (unity_SHAr, normal_19);
  x1_21.y = dot (unity_SHAg, normal_19);
  x1_21.z = dot (unity_SHAb, normal_19);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (normal_19.xyzz * normal_19.yzzx);
  x2_20.x = dot (unity_SHBr, tmpvar_22);
  x2_20.y = dot (unity_SHBg, tmpvar_22);
  x2_20.z = dot (unity_SHBb, tmpvar_22);
  tmpvar_7.xyz = ((x2_20 + (unity_SHC.xyz * 
    ((normal_19.x * normal_19.x) - (normal_19.y * normal_19.y))
  )) + x1_21);
  highp vec3 lightColor0_23;
  lightColor0_23 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_24;
  lightColor1_24 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_25;
  lightColor2_25 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_26;
  lightColor3_26 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_27;
  lightAttenSq_27 = unity_4LightAtten0;
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_4LightPosX0 - tmpvar_8.x);
  highp vec4 tmpvar_29;
  tmpvar_29 = (unity_4LightPosY0 - tmpvar_8.y);
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_4LightPosZ0 - tmpvar_8.z);
  highp vec4 tmpvar_31;
  tmpvar_31 = (((tmpvar_28 * tmpvar_28) + (tmpvar_29 * tmpvar_29)) + (tmpvar_30 * tmpvar_30));
  highp vec4 tmpvar_32;
  tmpvar_32 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_28 * tmpvar_17.x) + (tmpvar_29 * tmpvar_17.y)) + (tmpvar_30 * tmpvar_17.z))
   * 
    inversesqrt(tmpvar_31)
  )) * (1.0/((1.0 + 
    (tmpvar_31 * lightAttenSq_27)
  ))));
  highp vec3 tmpvar_33;
  tmpvar_33 = (tmpvar_7.xyz + ((
    ((lightColor0_23 * tmpvar_32.x) + (lightColor1_24 * tmpvar_32.y))
   + 
    (lightColor2_25 * tmpvar_32.z)
  ) + (lightColor3_26 * tmpvar_32.w)));
  tmpvar_7.xyz = tmpvar_33;
  gl_Position = tmpvar_9;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = normalize(n_12);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform mediump vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 c_1;
  mediump vec3 tmpvar_2;
  tmpvar_2 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_3;
  cse_3 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 sg_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_4 = tmpvar_5;
  mediump vec3 tmpvar_6;
  mediump float tmpvar_7;
  tmpvar_7 = (1.0 - sg_4.x);
  tmpvar_6 = ((_Color.xyz * cse_3.xyz) * tmpvar_7);
  mediump vec3 tmpvar_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = _LightColor0.xyz;
  tmpvar_8 = tmpvar_9;
  mediump float tmpvar_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_10 = tmpvar_11.y;
  highp vec3 tmpvar_12;
  highp vec4 tmpvar_13;
  mediump vec3 cse_14;
  cse_14 = -(xlv_TEXCOORD1);
  tmpvar_12 = cse_14;
  tmpvar_13 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_15;
  mediump vec3 worldNormal_16;
  highp vec3 tmpvar_17;
  highp vec3 I_18;
  I_18 = -(tmpvar_12);
  tmpvar_17 = (I_18 - (2.0 * (
    dot (tmpvar_2, I_18)
   * tmpvar_2)));
  worldNormal_16 = tmpvar_17;
  mediump vec4 hdr_19;
  hdr_19 = tmpvar_13;
  highp float mip_20;
  mediump float tmpvar_21;
  tmpvar_21 = ((1.0 - sg_4.w) * 7.0);
  mip_20 = tmpvar_21;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = worldNormal_16;
  tmpvar_22.w = mip_20;
  lowp vec4 tmpvar_23;
  tmpvar_23 = textureCube (unity_SpecCube0, tmpvar_22.xyz, mip_20);
  mediump vec4 tmpvar_24;
  tmpvar_24 = tmpvar_23;
  tmpvar_15 = ((tmpvar_24.w * hdr_19.x) * tmpvar_24.xyz);
  tmpvar_15 = (tmpvar_15 * tmpvar_10);
  mediump vec2 tmpvar_25;
  tmpvar_25.x = dot ((cse_14 - (2.0 * 
    (dot (tmpvar_2, cse_14) * tmpvar_2)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_25.y = (1.0 - clamp (dot (tmpvar_2, cse_14), 0.0, 1.0));
  mediump vec2 tmpvar_26;
  tmpvar_26 = (((tmpvar_25 * tmpvar_25) * tmpvar_25) * tmpvar_25);
  mediump vec2 tmpvar_27;
  tmpvar_27.x = tmpvar_26.x;
  tmpvar_27.y = (1.0 - sg_4.w);
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture2D (unity_NHxRoughness, tmpvar_27);
  mediump vec3 tmpvar_29;
  tmpvar_29 = (((
    ((tmpvar_6 + ((tmpvar_28.w * 16.0) * sg_4.xyz)) * tmpvar_8)
   * 
    clamp (dot (tmpvar_2, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_10)
   * tmpvar_6)) + (tmpvar_15 * mix (sg_4.xyz, vec3(
    clamp ((sg_4.w + (1.0 - tmpvar_7)), 0.0, 1.0)
  ), tmpvar_26.yyy)));
  mediump vec4 tmpvar_30;
  tmpvar_30.w = 1.0;
  tmpvar_30.xyz = tmpvar_29;
  c_1.w = tmpvar_30.w;
  lowp vec4 tmpvar_31;
  tmpvar_31 = texture2D (_EmissionMap, xlv_TEXCOORD0.xy);
  c_1.xyz = (tmpvar_29 + (tmpvar_31.xyz * _EmissionColor.xyz));
  mediump vec4 xlat_varoutput_32;
  xlat_varoutput_32.xyz = c_1.xyz;
  xlat_varoutput_32.w = 1.0;
  gl_FragData[0] = xlat_varoutput_32;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_EMISSION" "_SPECGLOSSMAP" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  highp vec4 tmpvar_8;
  tmpvar_8 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_9;
  tmpvar_9 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_10;
  texcoord_10.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_11;
  if ((_UVSec == 0.0)) {
    tmpvar_11 = tmpvar_2;
  } else {
    tmpvar_11 = tmpvar_3;
  };
  texcoord_10.zw = ((tmpvar_11 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_12;
  n_12 = (tmpvar_8.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_13;
  norm_13 = tmpvar_1;
  highp vec4 v_14;
  v_14.x = _World2Object[0].x;
  v_14.y = _World2Object[1].x;
  v_14.z = _World2Object[2].x;
  v_14.w = _World2Object[3].x;
  highp vec4 v_15;
  v_15.x = _World2Object[0].y;
  v_15.y = _World2Object[1].y;
  v_15.z = _World2Object[2].y;
  v_15.w = _World2Object[3].y;
  highp vec4 v_16;
  v_16.x = _World2Object[0].z;
  v_16.y = _World2Object[1].z;
  v_16.z = _World2Object[2].z;
  v_16.w = _World2Object[3].z;
  highp vec3 tmpvar_17;
  tmpvar_17 = normalize(((
    (v_14.xyz * norm_13.x)
   + 
    (v_15.xyz * norm_13.y)
  ) + (v_16.xyz * norm_13.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_17;
  highp vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = tmpvar_17;
  mediump vec4 normal_19;
  normal_19 = tmpvar_18;
  mediump vec3 x2_20;
  mediump vec3 x1_21;
  x1_21.x = dot (unity_SHAr, normal_19);
  x1_21.y = dot (unity_SHAg, normal_19);
  x1_21.z = dot (unity_SHAb, normal_19);
  mediump vec4 tmpvar_22;
  tmpvar_22 = (normal_19.xyzz * normal_19.yzzx);
  x2_20.x = dot (unity_SHBr, tmpvar_22);
  x2_20.y = dot (unity_SHBg, tmpvar_22);
  x2_20.z = dot (unity_SHBb, tmpvar_22);
  tmpvar_7.xyz = ((x2_20 + (unity_SHC.xyz * 
    ((normal_19.x * normal_19.x) - (normal_19.y * normal_19.y))
  )) + x1_21);
  highp vec3 lightColor0_23;
  lightColor0_23 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_24;
  lightColor1_24 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_25;
  lightColor2_25 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_26;
  lightColor3_26 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_27;
  lightAttenSq_27 = unity_4LightAtten0;
  highp vec4 tmpvar_28;
  tmpvar_28 = (unity_4LightPosX0 - tmpvar_8.x);
  highp vec4 tmpvar_29;
  tmpvar_29 = (unity_4LightPosY0 - tmpvar_8.y);
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_4LightPosZ0 - tmpvar_8.z);
  highp vec4 tmpvar_31;
  tmpvar_31 = (((tmpvar_28 * tmpvar_28) + (tmpvar_29 * tmpvar_29)) + (tmpvar_30 * tmpvar_30));
  highp vec4 tmpvar_32;
  tmpvar_32 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_28 * tmpvar_17.x) + (tmpvar_29 * tmpvar_17.y)) + (tmpvar_30 * tmpvar_17.z))
   * 
    inversesqrt(tmpvar_31)
  )) * (1.0/((1.0 + 
    (tmpvar_31 * lightAttenSq_27)
  ))));
  highp vec3 tmpvar_33;
  tmpvar_33 = (tmpvar_7.xyz + ((
    ((lightColor0_23 * tmpvar_32.x) + (lightColor1_24 * tmpvar_32.y))
   + 
    (lightColor2_25 * tmpvar_32.z)
  ) + (lightColor3_26 * tmpvar_32.w)));
  tmpvar_7.xyz = tmpvar_33;
  gl_Position = tmpvar_9;
  xlv_TEXCOORD0 = texcoord_10;
  xlv_TEXCOORD1 = normalize(n_12);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform mediump vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 c_1;
  mediump vec3 tmpvar_2;
  tmpvar_2 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_3;
  cse_3 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 sg_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_4 = tmpvar_5;
  mediump vec3 tmpvar_6;
  mediump float tmpvar_7;
  tmpvar_7 = (1.0 - sg_4.x);
  tmpvar_6 = ((_Color.xyz * cse_3.xyz) * tmpvar_7);
  mediump vec3 tmpvar_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = _LightColor0.xyz;
  tmpvar_8 = tmpvar_9;
  mediump float tmpvar_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_10 = tmpvar_11.y;
  highp vec3 tmpvar_12;
  highp vec4 tmpvar_13;
  mediump vec3 cse_14;
  cse_14 = -(xlv_TEXCOORD1);
  tmpvar_12 = cse_14;
  tmpvar_13 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_15;
  mediump vec3 worldNormal_16;
  highp vec3 tmpvar_17;
  highp vec3 I_18;
  I_18 = -(tmpvar_12);
  tmpvar_17 = (I_18 - (2.0 * (
    dot (tmpvar_2, I_18)
   * tmpvar_2)));
  worldNormal_16 = tmpvar_17;
  mediump vec4 hdr_19;
  hdr_19 = tmpvar_13;
  highp float mip_20;
  mediump float tmpvar_21;
  tmpvar_21 = ((1.0 - sg_4.w) * 7.0);
  mip_20 = tmpvar_21;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = worldNormal_16;
  tmpvar_22.w = mip_20;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture (unity_SpecCube0, tmpvar_22.xyz, mip_20);
  mediump vec4 tmpvar_24;
  tmpvar_24 = tmpvar_23;
  tmpvar_15 = ((tmpvar_24.w * hdr_19.x) * tmpvar_24.xyz);
  tmpvar_15 = (tmpvar_15 * tmpvar_10);
  mediump vec2 tmpvar_25;
  tmpvar_25.x = dot ((cse_14 - (2.0 * 
    (dot (tmpvar_2, cse_14) * tmpvar_2)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_25.y = (1.0 - clamp (dot (tmpvar_2, cse_14), 0.0, 1.0));
  mediump vec2 tmpvar_26;
  tmpvar_26 = (((tmpvar_25 * tmpvar_25) * tmpvar_25) * tmpvar_25);
  mediump vec2 tmpvar_27;
  tmpvar_27.x = tmpvar_26.x;
  tmpvar_27.y = (1.0 - sg_4.w);
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture (unity_NHxRoughness, tmpvar_27);
  mediump vec3 tmpvar_29;
  tmpvar_29 = (((
    ((tmpvar_6 + ((tmpvar_28.w * 16.0) * sg_4.xyz)) * tmpvar_8)
   * 
    clamp (dot (tmpvar_2, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_10)
   * tmpvar_6)) + (tmpvar_15 * mix (sg_4.xyz, vec3(
    clamp ((sg_4.w + (1.0 - tmpvar_7)), 0.0, 1.0)
  ), tmpvar_26.yyy)));
  mediump vec4 tmpvar_30;
  tmpvar_30.w = 1.0;
  tmpvar_30.xyz = tmpvar_29;
  c_1.w = tmpvar_30.w;
  lowp vec4 tmpvar_31;
  tmpvar_31 = texture (_EmissionMap, xlv_TEXCOORD0.xy);
  c_1.xyz = (tmpvar_29 + (tmpvar_31.xyz * _EmissionColor.xyz));
  mediump vec4 xlat_varoutput_32;
  xlat_varoutput_32.xyz = c_1.xyz;
  xlat_varoutput_32.w = 1.0;
  _glesFragData[0] = xlat_varoutput_32;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_EMISSION" "_SPECGLOSSMAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_10;
  tmpvar_10 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_11;
  texcoord_11.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_12;
  if ((_UVSec == 0.0)) {
    tmpvar_12 = tmpvar_2;
  } else {
    tmpvar_12 = tmpvar_3;
  };
  texcoord_11.zw = ((tmpvar_12 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_13;
  n_13 = (tmpvar_9.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_14;
  norm_14 = tmpvar_1;
  highp vec4 v_15;
  v_15.x = _World2Object[0].x;
  v_15.y = _World2Object[1].x;
  v_15.z = _World2Object[2].x;
  v_15.w = _World2Object[3].x;
  highp vec4 v_16;
  v_16.x = _World2Object[0].y;
  v_16.y = _World2Object[1].y;
  v_16.z = _World2Object[2].y;
  v_16.w = _World2Object[3].y;
  highp vec4 v_17;
  v_17.x = _World2Object[0].z;
  v_17.y = _World2Object[1].z;
  v_17.z = _World2Object[2].z;
  v_17.w = _World2Object[3].z;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(((
    (v_15.xyz * norm_14.x)
   + 
    (v_16.xyz * norm_14.y)
  ) + (v_17.xyz * norm_14.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_8 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = tmpvar_18;
  mediump vec4 normal_21;
  normal_21 = tmpvar_20;
  mediump vec3 x2_22;
  mediump vec3 x1_23;
  x1_23.x = dot (unity_SHAr, normal_21);
  x1_23.y = dot (unity_SHAg, normal_21);
  x1_23.z = dot (unity_SHAb, normal_21);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_21.xyzz * normal_21.yzzx);
  x2_22.x = dot (unity_SHBr, tmpvar_24);
  x2_22.y = dot (unity_SHBg, tmpvar_24);
  x2_22.z = dot (unity_SHBb, tmpvar_24);
  tmpvar_7.xyz = ((x2_22 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )) + x1_23);
  highp vec3 lightColor0_25;
  lightColor0_25 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_26;
  lightColor1_26 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_27;
  lightColor2_27 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_28;
  lightColor3_28 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_29;
  lightAttenSq_29 = unity_4LightAtten0;
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_4LightPosX0 - tmpvar_9.x);
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_4LightPosY0 - tmpvar_9.y);
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosZ0 - tmpvar_9.z);
  highp vec4 tmpvar_33;
  tmpvar_33 = (((tmpvar_30 * tmpvar_30) + (tmpvar_31 * tmpvar_31)) + (tmpvar_32 * tmpvar_32));
  highp vec4 tmpvar_34;
  tmpvar_34 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_30 * tmpvar_18.x) + (tmpvar_31 * tmpvar_18.y)) + (tmpvar_32 * tmpvar_18.z))
   * 
    inversesqrt(tmpvar_33)
  )) * (1.0/((1.0 + 
    (tmpvar_33 * lightAttenSq_29)
  ))));
  highp vec3 tmpvar_35;
  tmpvar_35 = (tmpvar_7.xyz + ((
    ((lightColor0_25 * tmpvar_34.x) + (lightColor1_26 * tmpvar_34.y))
   + 
    (lightColor2_27 * tmpvar_34.z)
  ) + (lightColor3_28 * tmpvar_34.w)));
  tmpvar_7.xyz = tmpvar_35;
  gl_Position = tmpvar_10;
  xlv_TEXCOORD0 = texcoord_11;
  xlv_TEXCOORD1 = normalize(n_13);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform mediump vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
uniform sampler2D _ShadowMapTexture;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_4;
  cse_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 sg_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_5 = tmpvar_6;
  mediump vec3 tmpvar_7;
  mediump float tmpvar_8;
  tmpvar_8 = (1.0 - sg_5.x);
  tmpvar_7 = ((_Color.xyz * cse_4.xyz) * tmpvar_8);
  mediump vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = _LightColor0.xyz;
  tmpvar_9 = tmpvar_10;
  lowp float tmpvar_11;
  mediump float dist_12;
  lowp float tmpvar_13;
  tmpvar_13 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_12 = tmpvar_13;
  mediump float tmpvar_14;
  tmpvar_14 = max (float((dist_12 > 
    (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w)
  )), _LightShadowData.x);
  tmpvar_11 = tmpvar_14;
  atten_2 = tmpvar_11;
  mediump float tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_15 = tmpvar_16.y;
  highp vec3 tmpvar_17;
  highp vec4 tmpvar_18;
  mediump vec3 cse_19;
  cse_19 = -(xlv_TEXCOORD1);
  tmpvar_17 = cse_19;
  tmpvar_18 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_20;
  mediump vec3 worldNormal_21;
  highp vec3 tmpvar_22;
  highp vec3 I_23;
  I_23 = -(tmpvar_17);
  tmpvar_22 = (I_23 - (2.0 * (
    dot (tmpvar_3, I_23)
   * tmpvar_3)));
  worldNormal_21 = tmpvar_22;
  mediump vec4 hdr_24;
  hdr_24 = tmpvar_18;
  highp float mip_25;
  mediump float tmpvar_26;
  tmpvar_26 = ((1.0 - sg_5.w) * 7.0);
  mip_25 = tmpvar_26;
  highp vec4 tmpvar_27;
  tmpvar_27.xyz = worldNormal_21;
  tmpvar_27.w = mip_25;
  lowp vec4 tmpvar_28;
  tmpvar_28 = textureCube (unity_SpecCube0, tmpvar_27.xyz, mip_25);
  mediump vec4 tmpvar_29;
  tmpvar_29 = tmpvar_28;
  tmpvar_20 = ((tmpvar_29.w * hdr_24.x) * tmpvar_29.xyz);
  tmpvar_20 = (tmpvar_20 * tmpvar_15);
  mediump vec2 tmpvar_30;
  tmpvar_30.x = dot ((cse_19 - (2.0 * 
    (dot (tmpvar_3, cse_19) * tmpvar_3)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_30.y = (1.0 - clamp (dot (tmpvar_3, cse_19), 0.0, 1.0));
  mediump vec2 tmpvar_31;
  tmpvar_31 = (((tmpvar_30 * tmpvar_30) * tmpvar_30) * tmpvar_30);
  mediump vec2 tmpvar_32;
  tmpvar_32.x = tmpvar_31.x;
  tmpvar_32.y = (1.0 - sg_5.w);
  lowp vec4 tmpvar_33;
  tmpvar_33 = texture2D (unity_NHxRoughness, tmpvar_32);
  mediump vec3 tmpvar_34;
  tmpvar_34 = (((
    ((tmpvar_7 + ((tmpvar_33.w * 16.0) * sg_5.xyz)) * (tmpvar_9 * atten_2))
   * 
    clamp (dot (tmpvar_3, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_15)
   * tmpvar_7)) + (tmpvar_20 * mix (sg_5.xyz, vec3(
    clamp ((sg_5.w + (1.0 - tmpvar_8)), 0.0, 1.0)
  ), tmpvar_31.yyy)));
  mediump vec4 tmpvar_35;
  tmpvar_35.w = 1.0;
  tmpvar_35.xyz = tmpvar_34;
  c_1.w = tmpvar_35.w;
  lowp vec4 tmpvar_36;
  tmpvar_36 = texture2D (_EmissionMap, xlv_TEXCOORD0.xy);
  c_1.xyz = (tmpvar_34 + (tmpvar_36.xyz * _EmissionColor.xyz));
  mediump vec4 xlat_varoutput_37;
  xlat_varoutput_37.xyz = c_1.xyz;
  xlat_varoutput_37.w = 1.0;
  gl_FragData[0] = xlat_varoutput_37;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_SPECGLOSSMAP" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_10;
  tmpvar_10 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_11;
  texcoord_11.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_12;
  if ((_UVSec == 0.0)) {
    tmpvar_12 = tmpvar_2;
  } else {
    tmpvar_12 = tmpvar_3;
  };
  texcoord_11.zw = ((tmpvar_12 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_13;
  n_13 = (tmpvar_9.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_14;
  norm_14 = tmpvar_1;
  highp vec4 v_15;
  v_15.x = _World2Object[0].x;
  v_15.y = _World2Object[1].x;
  v_15.z = _World2Object[2].x;
  v_15.w = _World2Object[3].x;
  highp vec4 v_16;
  v_16.x = _World2Object[0].y;
  v_16.y = _World2Object[1].y;
  v_16.z = _World2Object[2].y;
  v_16.w = _World2Object[3].y;
  highp vec4 v_17;
  v_17.x = _World2Object[0].z;
  v_17.y = _World2Object[1].z;
  v_17.z = _World2Object[2].z;
  v_17.w = _World2Object[3].z;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(((
    (v_15.xyz * norm_14.x)
   + 
    (v_16.xyz * norm_14.y)
  ) + (v_17.xyz * norm_14.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_8 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = tmpvar_18;
  mediump vec4 normal_21;
  normal_21 = tmpvar_20;
  mediump vec3 x2_22;
  mediump vec3 x1_23;
  x1_23.x = dot (unity_SHAr, normal_21);
  x1_23.y = dot (unity_SHAg, normal_21);
  x1_23.z = dot (unity_SHAb, normal_21);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_21.xyzz * normal_21.yzzx);
  x2_22.x = dot (unity_SHBr, tmpvar_24);
  x2_22.y = dot (unity_SHBg, tmpvar_24);
  x2_22.z = dot (unity_SHBb, tmpvar_24);
  tmpvar_7.xyz = ((x2_22 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )) + x1_23);
  gl_Position = tmpvar_10;
  xlv_TEXCOORD0 = texcoord_11;
  xlv_TEXCOORD1 = normalize(n_13);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform mediump vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
uniform lowp sampler2DShadow _ShadowMapTexture;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_4;
  cse_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 sg_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_5 = tmpvar_6;
  mediump vec3 tmpvar_7;
  mediump float tmpvar_8;
  tmpvar_8 = (1.0 - sg_5.x);
  tmpvar_7 = ((_Color.xyz * cse_4.xyz) * tmpvar_8);
  mediump vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = _LightColor0.xyz;
  tmpvar_9 = tmpvar_10;
  lowp float shadow_11;
  lowp float tmpvar_12;
  tmpvar_12 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  mediump float tmpvar_13;
  tmpvar_13 = (_LightShadowData.x + (tmpvar_12 * (1.0 - _LightShadowData.x)));
  shadow_11 = tmpvar_13;
  atten_2 = shadow_11;
  mediump float tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_14 = tmpvar_15.y;
  highp vec3 tmpvar_16;
  highp vec4 tmpvar_17;
  mediump vec3 cse_18;
  cse_18 = -(xlv_TEXCOORD1);
  tmpvar_16 = cse_18;
  tmpvar_17 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_19;
  mediump vec3 worldNormal_20;
  highp vec3 tmpvar_21;
  highp vec3 I_22;
  I_22 = -(tmpvar_16);
  tmpvar_21 = (I_22 - (2.0 * (
    dot (tmpvar_3, I_22)
   * tmpvar_3)));
  worldNormal_20 = tmpvar_21;
  mediump vec4 hdr_23;
  hdr_23 = tmpvar_17;
  highp float mip_24;
  mediump float tmpvar_25;
  tmpvar_25 = ((1.0 - sg_5.w) * 7.0);
  mip_24 = tmpvar_25;
  highp vec4 tmpvar_26;
  tmpvar_26.xyz = worldNormal_20;
  tmpvar_26.w = mip_24;
  lowp vec4 tmpvar_27;
  tmpvar_27 = textureCube (unity_SpecCube0, tmpvar_26.xyz, mip_24);
  mediump vec4 tmpvar_28;
  tmpvar_28 = tmpvar_27;
  tmpvar_19 = ((tmpvar_28.w * hdr_23.x) * tmpvar_28.xyz);
  tmpvar_19 = (tmpvar_19 * tmpvar_14);
  mediump vec2 tmpvar_29;
  tmpvar_29.x = dot ((cse_18 - (2.0 * 
    (dot (tmpvar_3, cse_18) * tmpvar_3)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_29.y = (1.0 - clamp (dot (tmpvar_3, cse_18), 0.0, 1.0));
  mediump vec2 tmpvar_30;
  tmpvar_30 = (((tmpvar_29 * tmpvar_29) * tmpvar_29) * tmpvar_29);
  mediump vec2 tmpvar_31;
  tmpvar_31.x = tmpvar_30.x;
  tmpvar_31.y = (1.0 - sg_5.w);
  lowp vec4 tmpvar_32;
  tmpvar_32 = texture2D (unity_NHxRoughness, tmpvar_31);
  mediump vec3 tmpvar_33;
  tmpvar_33 = (((
    ((tmpvar_7 + ((tmpvar_32.w * 16.0) * sg_5.xyz)) * (tmpvar_9 * atten_2))
   * 
    clamp (dot (tmpvar_3, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_14)
   * tmpvar_7)) + (tmpvar_19 * mix (sg_5.xyz, vec3(
    clamp ((sg_5.w + (1.0 - tmpvar_8)), 0.0, 1.0)
  ), tmpvar_30.yyy)));
  mediump vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = tmpvar_33;
  c_1.w = tmpvar_34.w;
  lowp vec4 tmpvar_35;
  tmpvar_35 = texture2D (_EmissionMap, xlv_TEXCOORD0.xy);
  c_1.xyz = (tmpvar_33 + (tmpvar_35.xyz * _EmissionColor.xyz));
  mediump vec4 xlat_varoutput_36;
  xlat_varoutput_36.xyz = c_1.xyz;
  xlat_varoutput_36.w = 1.0;
  gl_FragData[0] = xlat_varoutput_36;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_SPECGLOSSMAP" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
out mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_10;
  tmpvar_10 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_11;
  texcoord_11.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_12;
  if ((_UVSec == 0.0)) {
    tmpvar_12 = tmpvar_2;
  } else {
    tmpvar_12 = tmpvar_3;
  };
  texcoord_11.zw = ((tmpvar_12 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_13;
  n_13 = (tmpvar_9.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_14;
  norm_14 = tmpvar_1;
  highp vec4 v_15;
  v_15.x = _World2Object[0].x;
  v_15.y = _World2Object[1].x;
  v_15.z = _World2Object[2].x;
  v_15.w = _World2Object[3].x;
  highp vec4 v_16;
  v_16.x = _World2Object[0].y;
  v_16.y = _World2Object[1].y;
  v_16.z = _World2Object[2].y;
  v_16.w = _World2Object[3].y;
  highp vec4 v_17;
  v_17.x = _World2Object[0].z;
  v_17.y = _World2Object[1].z;
  v_17.z = _World2Object[2].z;
  v_17.w = _World2Object[3].z;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(((
    (v_15.xyz * norm_14.x)
   + 
    (v_16.xyz * norm_14.y)
  ) + (v_17.xyz * norm_14.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_8 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = tmpvar_18;
  mediump vec4 normal_21;
  normal_21 = tmpvar_20;
  mediump vec3 x2_22;
  mediump vec3 x1_23;
  x1_23.x = dot (unity_SHAr, normal_21);
  x1_23.y = dot (unity_SHAg, normal_21);
  x1_23.z = dot (unity_SHAb, normal_21);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_21.xyzz * normal_21.yzzx);
  x2_22.x = dot (unity_SHBr, tmpvar_24);
  x2_22.y = dot (unity_SHBg, tmpvar_24);
  x2_22.z = dot (unity_SHBb, tmpvar_24);
  tmpvar_7.xyz = ((x2_22 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )) + x1_23);
  gl_Position = tmpvar_10;
  xlv_TEXCOORD0 = texcoord_11;
  xlv_TEXCOORD1 = normalize(n_13);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_8;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform mediump vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
uniform lowp sampler2DShadow _ShadowMapTexture;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
in mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_4;
  cse_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 sg_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_5 = tmpvar_6;
  mediump vec3 tmpvar_7;
  mediump float tmpvar_8;
  tmpvar_8 = (1.0 - sg_5.x);
  tmpvar_7 = ((_Color.xyz * cse_4.xyz) * tmpvar_8);
  mediump vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = _LightColor0.xyz;
  tmpvar_9 = tmpvar_10;
  lowp float shadow_11;
  mediump float tmpvar_12;
  tmpvar_12 = texture (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  lowp float tmpvar_13;
  tmpvar_13 = tmpvar_12;
  mediump float tmpvar_14;
  tmpvar_14 = (_LightShadowData.x + (tmpvar_13 * (1.0 - _LightShadowData.x)));
  shadow_11 = tmpvar_14;
  atten_2 = shadow_11;
  mediump float tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_15 = tmpvar_16.y;
  highp vec3 tmpvar_17;
  highp vec4 tmpvar_18;
  mediump vec3 cse_19;
  cse_19 = -(xlv_TEXCOORD1);
  tmpvar_17 = cse_19;
  tmpvar_18 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_20;
  mediump vec3 worldNormal_21;
  highp vec3 tmpvar_22;
  highp vec3 I_23;
  I_23 = -(tmpvar_17);
  tmpvar_22 = (I_23 - (2.0 * (
    dot (tmpvar_3, I_23)
   * tmpvar_3)));
  worldNormal_21 = tmpvar_22;
  mediump vec4 hdr_24;
  hdr_24 = tmpvar_18;
  highp float mip_25;
  mediump float tmpvar_26;
  tmpvar_26 = ((1.0 - sg_5.w) * 7.0);
  mip_25 = tmpvar_26;
  highp vec4 tmpvar_27;
  tmpvar_27.xyz = worldNormal_21;
  tmpvar_27.w = mip_25;
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture (unity_SpecCube0, tmpvar_27.xyz, mip_25);
  mediump vec4 tmpvar_29;
  tmpvar_29 = tmpvar_28;
  tmpvar_20 = ((tmpvar_29.w * hdr_24.x) * tmpvar_29.xyz);
  tmpvar_20 = (tmpvar_20 * tmpvar_15);
  mediump vec2 tmpvar_30;
  tmpvar_30.x = dot ((cse_19 - (2.0 * 
    (dot (tmpvar_3, cse_19) * tmpvar_3)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_30.y = (1.0 - clamp (dot (tmpvar_3, cse_19), 0.0, 1.0));
  mediump vec2 tmpvar_31;
  tmpvar_31 = (((tmpvar_30 * tmpvar_30) * tmpvar_30) * tmpvar_30);
  mediump vec2 tmpvar_32;
  tmpvar_32.x = tmpvar_31.x;
  tmpvar_32.y = (1.0 - sg_5.w);
  lowp vec4 tmpvar_33;
  tmpvar_33 = texture (unity_NHxRoughness, tmpvar_32);
  mediump vec3 tmpvar_34;
  tmpvar_34 = (((
    ((tmpvar_7 + ((tmpvar_33.w * 16.0) * sg_5.xyz)) * (tmpvar_9 * atten_2))
   * 
    clamp (dot (tmpvar_3, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_15)
   * tmpvar_7)) + (tmpvar_20 * mix (sg_5.xyz, vec3(
    clamp ((sg_5.w + (1.0 - tmpvar_8)), 0.0, 1.0)
  ), tmpvar_31.yyy)));
  mediump vec4 tmpvar_35;
  tmpvar_35.w = 1.0;
  tmpvar_35.xyz = tmpvar_34;
  c_1.w = tmpvar_35.w;
  lowp vec4 tmpvar_36;
  tmpvar_36 = texture (_EmissionMap, xlv_TEXCOORD0.xy);
  c_1.xyz = (tmpvar_34 + (tmpvar_36.xyz * _EmissionColor.xyz));
  mediump vec4 xlat_varoutput_37;
  xlat_varoutput_37.xyz = c_1.xyz;
  xlat_varoutput_37.w = 1.0;
  _glesFragData[0] = xlat_varoutput_37;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_EMISSION" "_SPECGLOSSMAP" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_10;
  tmpvar_10 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_11;
  texcoord_11.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_12;
  if ((_UVSec == 0.0)) {
    tmpvar_12 = tmpvar_2;
  } else {
    tmpvar_12 = tmpvar_3;
  };
  texcoord_11.zw = ((tmpvar_12 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_13;
  n_13 = (tmpvar_9.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_14;
  norm_14 = tmpvar_1;
  highp vec4 v_15;
  v_15.x = _World2Object[0].x;
  v_15.y = _World2Object[1].x;
  v_15.z = _World2Object[2].x;
  v_15.w = _World2Object[3].x;
  highp vec4 v_16;
  v_16.x = _World2Object[0].y;
  v_16.y = _World2Object[1].y;
  v_16.z = _World2Object[2].y;
  v_16.w = _World2Object[3].y;
  highp vec4 v_17;
  v_17.x = _World2Object[0].z;
  v_17.y = _World2Object[1].z;
  v_17.z = _World2Object[2].z;
  v_17.w = _World2Object[3].z;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(((
    (v_15.xyz * norm_14.x)
   + 
    (v_16.xyz * norm_14.y)
  ) + (v_17.xyz * norm_14.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_8 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = tmpvar_18;
  mediump vec4 normal_21;
  normal_21 = tmpvar_20;
  mediump vec3 x2_22;
  mediump vec3 x1_23;
  x1_23.x = dot (unity_SHAr, normal_21);
  x1_23.y = dot (unity_SHAg, normal_21);
  x1_23.z = dot (unity_SHAb, normal_21);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_21.xyzz * normal_21.yzzx);
  x2_22.x = dot (unity_SHBr, tmpvar_24);
  x2_22.y = dot (unity_SHBg, tmpvar_24);
  x2_22.z = dot (unity_SHBb, tmpvar_24);
  tmpvar_7.xyz = ((x2_22 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )) + x1_23);
  highp vec3 lightColor0_25;
  lightColor0_25 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_26;
  lightColor1_26 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_27;
  lightColor2_27 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_28;
  lightColor3_28 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_29;
  lightAttenSq_29 = unity_4LightAtten0;
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_4LightPosX0 - tmpvar_9.x);
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_4LightPosY0 - tmpvar_9.y);
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosZ0 - tmpvar_9.z);
  highp vec4 tmpvar_33;
  tmpvar_33 = (((tmpvar_30 * tmpvar_30) + (tmpvar_31 * tmpvar_31)) + (tmpvar_32 * tmpvar_32));
  highp vec4 tmpvar_34;
  tmpvar_34 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_30 * tmpvar_18.x) + (tmpvar_31 * tmpvar_18.y)) + (tmpvar_32 * tmpvar_18.z))
   * 
    inversesqrt(tmpvar_33)
  )) * (1.0/((1.0 + 
    (tmpvar_33 * lightAttenSq_29)
  ))));
  highp vec3 tmpvar_35;
  tmpvar_35 = (tmpvar_7.xyz + ((
    ((lightColor0_25 * tmpvar_34.x) + (lightColor1_26 * tmpvar_34.y))
   + 
    (lightColor2_27 * tmpvar_34.z)
  ) + (lightColor3_28 * tmpvar_34.w)));
  tmpvar_7.xyz = tmpvar_35;
  gl_Position = tmpvar_10;
  xlv_TEXCOORD0 = texcoord_11;
  xlv_TEXCOORD1 = normalize(n_13);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform mediump vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
uniform lowp sampler2DShadow _ShadowMapTexture;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_4;
  cse_4 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 sg_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_5 = tmpvar_6;
  mediump vec3 tmpvar_7;
  mediump float tmpvar_8;
  tmpvar_8 = (1.0 - sg_5.x);
  tmpvar_7 = ((_Color.xyz * cse_4.xyz) * tmpvar_8);
  mediump vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = _LightColor0.xyz;
  tmpvar_9 = tmpvar_10;
  lowp float shadow_11;
  lowp float tmpvar_12;
  tmpvar_12 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  mediump float tmpvar_13;
  tmpvar_13 = (_LightShadowData.x + (tmpvar_12 * (1.0 - _LightShadowData.x)));
  shadow_11 = tmpvar_13;
  atten_2 = shadow_11;
  mediump float tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_14 = tmpvar_15.y;
  highp vec3 tmpvar_16;
  highp vec4 tmpvar_17;
  mediump vec3 cse_18;
  cse_18 = -(xlv_TEXCOORD1);
  tmpvar_16 = cse_18;
  tmpvar_17 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_19;
  mediump vec3 worldNormal_20;
  highp vec3 tmpvar_21;
  highp vec3 I_22;
  I_22 = -(tmpvar_16);
  tmpvar_21 = (I_22 - (2.0 * (
    dot (tmpvar_3, I_22)
   * tmpvar_3)));
  worldNormal_20 = tmpvar_21;
  mediump vec4 hdr_23;
  hdr_23 = tmpvar_17;
  highp float mip_24;
  mediump float tmpvar_25;
  tmpvar_25 = ((1.0 - sg_5.w) * 7.0);
  mip_24 = tmpvar_25;
  highp vec4 tmpvar_26;
  tmpvar_26.xyz = worldNormal_20;
  tmpvar_26.w = mip_24;
  lowp vec4 tmpvar_27;
  tmpvar_27 = textureCube (unity_SpecCube0, tmpvar_26.xyz, mip_24);
  mediump vec4 tmpvar_28;
  tmpvar_28 = tmpvar_27;
  tmpvar_19 = ((tmpvar_28.w * hdr_23.x) * tmpvar_28.xyz);
  tmpvar_19 = (tmpvar_19 * tmpvar_14);
  mediump vec2 tmpvar_29;
  tmpvar_29.x = dot ((cse_18 - (2.0 * 
    (dot (tmpvar_3, cse_18) * tmpvar_3)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_29.y = (1.0 - clamp (dot (tmpvar_3, cse_18), 0.0, 1.0));
  mediump vec2 tmpvar_30;
  tmpvar_30 = (((tmpvar_29 * tmpvar_29) * tmpvar_29) * tmpvar_29);
  mediump vec2 tmpvar_31;
  tmpvar_31.x = tmpvar_30.x;
  tmpvar_31.y = (1.0 - sg_5.w);
  lowp vec4 tmpvar_32;
  tmpvar_32 = texture2D (unity_NHxRoughness, tmpvar_31);
  mediump vec3 tmpvar_33;
  tmpvar_33 = (((
    ((tmpvar_7 + ((tmpvar_32.w * 16.0) * sg_5.xyz)) * (tmpvar_9 * atten_2))
   * 
    clamp (dot (tmpvar_3, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_14)
   * tmpvar_7)) + (tmpvar_19 * mix (sg_5.xyz, vec3(
    clamp ((sg_5.w + (1.0 - tmpvar_8)), 0.0, 1.0)
  ), tmpvar_30.yyy)));
  mediump vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = tmpvar_33;
  c_1.w = tmpvar_34.w;
  lowp vec4 tmpvar_35;
  tmpvar_35 = texture2D (_EmissionMap, xlv_TEXCOORD0.xy);
  c_1.xyz = (tmpvar_33 + (tmpvar_35.xyz * _EmissionColor.xyz));
  mediump vec4 xlat_varoutput_36;
  xlat_varoutput_36.xyz = c_1.xyz;
  xlat_varoutput_36.w = 1.0;
  gl_FragData[0] = xlat_varoutput_36;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_EMISSION" "_SPECGLOSSMAP" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
out mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  mediump vec4 tmpvar_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_10;
  tmpvar_10 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_11;
  texcoord_11.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_12;
  if ((_UVSec == 0.0)) {
    tmpvar_12 = tmpvar_2;
  } else {
    tmpvar_12 = tmpvar_3;
  };
  texcoord_11.zw = ((tmpvar_12 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_13;
  n_13 = (tmpvar_9.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_14;
  norm_14 = tmpvar_1;
  highp vec4 v_15;
  v_15.x = _World2Object[0].x;
  v_15.y = _World2Object[1].x;
  v_15.z = _World2Object[2].x;
  v_15.w = _World2Object[3].x;
  highp vec4 v_16;
  v_16.x = _World2Object[0].y;
  v_16.y = _World2Object[1].y;
  v_16.z = _World2Object[2].y;
  v_16.w = _World2Object[3].y;
  highp vec4 v_17;
  v_17.x = _World2Object[0].z;
  v_17.y = _World2Object[1].z;
  v_17.z = _World2Object[2].z;
  v_17.w = _World2Object[3].z;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(((
    (v_15.xyz * norm_14.x)
   + 
    (v_16.xyz * norm_14.y)
  ) + (v_17.xyz * norm_14.z)));
  tmpvar_4.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_5.xyz = vec3(0.0, 0.0, 0.0);
  tmpvar_6.xyz = tmpvar_18;
  highp vec4 tmpvar_19;
  tmpvar_19 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_8 = tmpvar_19;
  highp vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = tmpvar_18;
  mediump vec4 normal_21;
  normal_21 = tmpvar_20;
  mediump vec3 x2_22;
  mediump vec3 x1_23;
  x1_23.x = dot (unity_SHAr, normal_21);
  x1_23.y = dot (unity_SHAg, normal_21);
  x1_23.z = dot (unity_SHAb, normal_21);
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_21.xyzz * normal_21.yzzx);
  x2_22.x = dot (unity_SHBr, tmpvar_24);
  x2_22.y = dot (unity_SHBg, tmpvar_24);
  x2_22.z = dot (unity_SHBb, tmpvar_24);
  tmpvar_7.xyz = ((x2_22 + (unity_SHC.xyz * 
    ((normal_21.x * normal_21.x) - (normal_21.y * normal_21.y))
  )) + x1_23);
  highp vec3 lightColor0_25;
  lightColor0_25 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_26;
  lightColor1_26 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_27;
  lightColor2_27 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_28;
  lightColor3_28 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_29;
  lightAttenSq_29 = unity_4LightAtten0;
  highp vec4 tmpvar_30;
  tmpvar_30 = (unity_4LightPosX0 - tmpvar_9.x);
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_4LightPosY0 - tmpvar_9.y);
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosZ0 - tmpvar_9.z);
  highp vec4 tmpvar_33;
  tmpvar_33 = (((tmpvar_30 * tmpvar_30) + (tmpvar_31 * tmpvar_31)) + (tmpvar_32 * tmpvar_32));
  highp vec4 tmpvar_34;
  tmpvar_34 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_30 * tmpvar_18.x) + (tmpvar_31 * tmpvar_18.y)) + (tmpvar_32 * tmpvar_18.z))
   * 
    inversesqrt(tmpvar_33)
  )) * (1.0/((1.0 + 
    (tmpvar_33 * lightAttenSq_29)
  ))));
  highp vec3 tmpvar_35;
  tmpvar_35 = (tmpvar_7.xyz + ((
    ((lightColor0_25 * tmpvar_34.x) + (lightColor1_26 * tmpvar_34.y))
   + 
    (lightColor2_27 * tmpvar_34.z)
  ) + (lightColor3_28 * tmpvar_34.w)));
  tmpvar_7.xyz = tmpvar_35;
  gl_Position = tmpvar_10;
  xlv_TEXCOORD0 = texcoord_11;
  xlv_TEXCOORD1 = normalize(n_13);
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD2_1 = tmpvar_5;
  xlv_TEXCOORD2_2 = tmpvar_6;
  xlv_TEXCOORD5 = tmpvar_7;
  xlv_TEXCOORD6 = tmpvar_8;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform mediump vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
uniform lowp sampler2DShadow _ShadowMapTexture;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
in mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  tmpvar_3 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_4;
  cse_4 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 sg_5;
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_5 = tmpvar_6;
  mediump vec3 tmpvar_7;
  mediump float tmpvar_8;
  tmpvar_8 = (1.0 - sg_5.x);
  tmpvar_7 = ((_Color.xyz * cse_4.xyz) * tmpvar_8);
  mediump vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = _LightColor0.xyz;
  tmpvar_9 = tmpvar_10;
  lowp float shadow_11;
  mediump float tmpvar_12;
  tmpvar_12 = texture (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  lowp float tmpvar_13;
  tmpvar_13 = tmpvar_12;
  mediump float tmpvar_14;
  tmpvar_14 = (_LightShadowData.x + (tmpvar_13 * (1.0 - _LightShadowData.x)));
  shadow_11 = tmpvar_14;
  atten_2 = shadow_11;
  mediump float tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_15 = tmpvar_16.y;
  highp vec3 tmpvar_17;
  highp vec4 tmpvar_18;
  mediump vec3 cse_19;
  cse_19 = -(xlv_TEXCOORD1);
  tmpvar_17 = cse_19;
  tmpvar_18 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_20;
  mediump vec3 worldNormal_21;
  highp vec3 tmpvar_22;
  highp vec3 I_23;
  I_23 = -(tmpvar_17);
  tmpvar_22 = (I_23 - (2.0 * (
    dot (tmpvar_3, I_23)
   * tmpvar_3)));
  worldNormal_21 = tmpvar_22;
  mediump vec4 hdr_24;
  hdr_24 = tmpvar_18;
  highp float mip_25;
  mediump float tmpvar_26;
  tmpvar_26 = ((1.0 - sg_5.w) * 7.0);
  mip_25 = tmpvar_26;
  highp vec4 tmpvar_27;
  tmpvar_27.xyz = worldNormal_21;
  tmpvar_27.w = mip_25;
  lowp vec4 tmpvar_28;
  tmpvar_28 = texture (unity_SpecCube0, tmpvar_27.xyz, mip_25);
  mediump vec4 tmpvar_29;
  tmpvar_29 = tmpvar_28;
  tmpvar_20 = ((tmpvar_29.w * hdr_24.x) * tmpvar_29.xyz);
  tmpvar_20 = (tmpvar_20 * tmpvar_15);
  mediump vec2 tmpvar_30;
  tmpvar_30.x = dot ((cse_19 - (2.0 * 
    (dot (tmpvar_3, cse_19) * tmpvar_3)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_30.y = (1.0 - clamp (dot (tmpvar_3, cse_19), 0.0, 1.0));
  mediump vec2 tmpvar_31;
  tmpvar_31 = (((tmpvar_30 * tmpvar_30) * tmpvar_30) * tmpvar_30);
  mediump vec2 tmpvar_32;
  tmpvar_32.x = tmpvar_31.x;
  tmpvar_32.y = (1.0 - sg_5.w);
  lowp vec4 tmpvar_33;
  tmpvar_33 = texture (unity_NHxRoughness, tmpvar_32);
  mediump vec3 tmpvar_34;
  tmpvar_34 = (((
    ((tmpvar_7 + ((tmpvar_33.w * 16.0) * sg_5.xyz)) * (tmpvar_9 * atten_2))
   * 
    clamp (dot (tmpvar_3, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_15)
   * tmpvar_7)) + (tmpvar_20 * mix (sg_5.xyz, vec3(
    clamp ((sg_5.w + (1.0 - tmpvar_8)), 0.0, 1.0)
  ), tmpvar_31.yyy)));
  mediump vec4 tmpvar_35;
  tmpvar_35.w = 1.0;
  tmpvar_35.xyz = tmpvar_34;
  c_1.w = tmpvar_35.w;
  lowp vec4 tmpvar_36;
  tmpvar_36 = texture (_EmissionMap, xlv_TEXCOORD0.xy);
  c_1.xyz = (tmpvar_34 + (tmpvar_36.xyz * _EmissionColor.xyz));
  mediump vec4 xlat_varoutput_37;
  xlat_varoutput_37.xyz = c_1.xyz;
  xlat_varoutput_37.w = 1.0;
  _glesFragData[0] = xlat_varoutput_37;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_11;
  tmpvar_11 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_12;
  texcoord_12.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_13;
  if ((_UVSec == 0.0)) {
    tmpvar_13 = tmpvar_2;
  } else {
    tmpvar_13 = tmpvar_3;
  };
  texcoord_12.zw = ((tmpvar_13 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_14;
  n_14 = (tmpvar_10.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_15;
  norm_15 = tmpvar_1;
  highp vec4 v_16;
  v_16.x = _World2Object[0].x;
  v_16.y = _World2Object[1].x;
  v_16.z = _World2Object[2].x;
  v_16.w = _World2Object[3].x;
  highp vec4 v_17;
  v_17.x = _World2Object[0].y;
  v_17.y = _World2Object[1].y;
  v_17.z = _World2Object[2].y;
  v_17.w = _World2Object[3].y;
  highp vec4 v_18;
  v_18.x = _World2Object[0].z;
  v_18.y = _World2Object[1].z;
  v_18.z = _World2Object[2].z;
  v_18.w = _World2Object[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(((
    (v_16.xyz * norm_15.x)
   + 
    (v_17.xyz * norm_15.y)
  ) + (v_18.xyz * norm_15.z)));
  highp vec3 dir_20;
  dir_20 = tmpvar_4.xyz;
  highp mat3 tmpvar_21;
  tmpvar_21[0] = _Object2World[0].xyz;
  tmpvar_21[1] = _Object2World[1].xyz;
  tmpvar_21[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = normalize((tmpvar_21 * dir_20));
  tmpvar_22.w = tmpvar_4.w;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.www;
  mediump vec3 normal_24;
  normal_24 = tmpvar_19;
  mediump vec3 tangent_25;
  tangent_25 = tmpvar_22.xyz;
  mediump vec3 flip_26;
  flip_26 = tmpvar_23;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (((normal_24.yzx * tangent_25.zxy) - (normal_24.zxy * tangent_25.yzx)) * flip_26);
  mediump mat3 tmpvar_28;
  tmpvar_28[0].x = tangent_25.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = normal_24.x;
  tmpvar_28[1].x = tangent_25.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = normal_24.y;
  tmpvar_28[2].x = tangent_25.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = normal_24.z;
  tangentToWorld_5 = tmpvar_28;
  highp vec3 v_29;
  v_29.x = tangentToWorld_5[0].x;
  v_29.y = tangentToWorld_5[1].x;
  v_29.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].y;
  v_30.y = tangentToWorld_5[1].y;
  v_30.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].z;
  v_31.y = tangentToWorld_5[1].z;
  v_31.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_31;
  highp vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = tmpvar_19;
  mediump vec4 normal_33;
  normal_33 = tmpvar_32;
  mediump vec3 x2_34;
  mediump vec3 x1_35;
  x1_35.x = dot (unity_SHAr, normal_33);
  x1_35.y = dot (unity_SHAg, normal_33);
  x1_35.z = dot (unity_SHAb, normal_33);
  mediump vec4 tmpvar_36;
  tmpvar_36 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_36);
  x2_34.y = dot (unity_SHBg, tmpvar_36);
  x2_34.z = dot (unity_SHBb, tmpvar_36);
  tmpvar_9.xyz = ((x2_34 + (unity_SHC.xyz * 
    ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
  )) + x1_35);
  gl_Position = tmpvar_11;
  xlv_TEXCOORD0 = texcoord_12;
  xlv_TEXCOORD1 = normalize(n_14);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform mediump float _Glossiness;
uniform sampler2D _OcclusionMap;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 c_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_2 = xlv_TEXCOORD2.xyz;
  tmpvar_3 = xlv_TEXCOORD2_1.xyz;
  tmpvar_4 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_5;
  tmpvar_5[0].x = tmpvar_2.x;
  tmpvar_5[0].y = tmpvar_3.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = tmpvar_2.y;
  tmpvar_5[1].y = tmpvar_3.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = tmpvar_2.z;
  tmpvar_5[2].y = tmpvar_3.z;
  tmpvar_5[2].z = tmpvar_4.z;
  lowp vec4 cse_6;
  cse_6 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_8;
  packednormal_8 = tmpvar_7;
  mediump vec3 n_9;
  n_9 = (((packednormal_8.xyz * 2.0) - 1.0) * tmpvar_5);
  mediump vec4 tmpvar_10;
  tmpvar_10.xyz = _SpecColor.xyz;
  tmpvar_10.w = _Glossiness;
  mediump vec3 tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = (1.0 - tmpvar_10.x);
  tmpvar_11 = ((_Color.xyz * cse_6.xyz) * tmpvar_12);
  mediump vec3 tmpvar_13;
  lowp vec3 tmpvar_14;
  tmpvar_14 = _LightColor0.xyz;
  tmpvar_13 = tmpvar_14;
  mediump float tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_15 = tmpvar_16.y;
  highp vec3 tmpvar_17;
  highp vec4 tmpvar_18;
  mediump vec3 cse_19;
  cse_19 = -(xlv_TEXCOORD1);
  tmpvar_17 = cse_19;
  tmpvar_18 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_20;
  mediump vec3 worldNormal_21;
  highp vec3 tmpvar_22;
  highp vec3 I_23;
  I_23 = -(tmpvar_17);
  tmpvar_22 = (I_23 - (2.0 * (
    dot (n_9, I_23)
   * n_9)));
  worldNormal_21 = tmpvar_22;
  mediump vec4 hdr_24;
  hdr_24 = tmpvar_18;
  highp float mip_25;
  mediump float tmpvar_26;
  mediump float cse_27;
  cse_27 = (1.0 - _Glossiness);
  tmpvar_26 = (cse_27 * 7.0);
  mip_25 = tmpvar_26;
  highp vec4 tmpvar_28;
  tmpvar_28.xyz = worldNormal_21;
  tmpvar_28.w = mip_25;
  lowp vec4 tmpvar_29;
  tmpvar_29 = textureCube (unity_SpecCube0, tmpvar_28.xyz, mip_25);
  mediump vec4 tmpvar_30;
  tmpvar_30 = tmpvar_29;
  tmpvar_20 = ((tmpvar_30.w * hdr_24.x) * tmpvar_30.xyz);
  tmpvar_20 = (tmpvar_20 * tmpvar_15);
  mediump vec2 tmpvar_31;
  tmpvar_31.x = dot ((cse_19 - (2.0 * 
    (dot (n_9, cse_19) * n_9)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_31.y = (1.0 - clamp (dot (n_9, cse_19), 0.0, 1.0));
  mediump vec2 tmpvar_32;
  tmpvar_32 = (((tmpvar_31 * tmpvar_31) * tmpvar_31) * tmpvar_31);
  mediump vec2 tmpvar_33;
  tmpvar_33.x = tmpvar_32.x;
  tmpvar_33.y = cse_27;
  lowp vec4 tmpvar_34;
  tmpvar_34 = texture2D (unity_NHxRoughness, tmpvar_33);
  mediump vec3 tmpvar_35;
  tmpvar_35 = (((
    ((tmpvar_11 + ((tmpvar_34.w * 16.0) * tmpvar_10.xyz)) * tmpvar_13)
   * 
    clamp (dot (n_9, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_15)
   * tmpvar_11)) + (tmpvar_20 * mix (tmpvar_10.xyz, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_12)), 0.0, 1.0)
  ), tmpvar_32.yyy)));
  mediump vec4 tmpvar_36;
  tmpvar_36.w = 1.0;
  tmpvar_36.xyz = tmpvar_35;
  c_1.w = tmpvar_36.w;
  c_1.xyz = tmpvar_35;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_37;
  xlat_varoutput_37.xyz = c_1.xyz;
  xlat_varoutput_37.w = 1.0;
  gl_FragData[0] = xlat_varoutput_37;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_11;
  tmpvar_11 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_12;
  texcoord_12.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_13;
  if ((_UVSec == 0.0)) {
    tmpvar_13 = tmpvar_2;
  } else {
    tmpvar_13 = tmpvar_3;
  };
  texcoord_12.zw = ((tmpvar_13 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_14;
  n_14 = (tmpvar_10.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_15;
  norm_15 = tmpvar_1;
  highp vec4 v_16;
  v_16.x = _World2Object[0].x;
  v_16.y = _World2Object[1].x;
  v_16.z = _World2Object[2].x;
  v_16.w = _World2Object[3].x;
  highp vec4 v_17;
  v_17.x = _World2Object[0].y;
  v_17.y = _World2Object[1].y;
  v_17.z = _World2Object[2].y;
  v_17.w = _World2Object[3].y;
  highp vec4 v_18;
  v_18.x = _World2Object[0].z;
  v_18.y = _World2Object[1].z;
  v_18.z = _World2Object[2].z;
  v_18.w = _World2Object[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(((
    (v_16.xyz * norm_15.x)
   + 
    (v_17.xyz * norm_15.y)
  ) + (v_18.xyz * norm_15.z)));
  highp vec3 dir_20;
  dir_20 = tmpvar_4.xyz;
  highp mat3 tmpvar_21;
  tmpvar_21[0] = _Object2World[0].xyz;
  tmpvar_21[1] = _Object2World[1].xyz;
  tmpvar_21[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = normalize((tmpvar_21 * dir_20));
  tmpvar_22.w = tmpvar_4.w;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.www;
  mediump vec3 normal_24;
  normal_24 = tmpvar_19;
  mediump vec3 tangent_25;
  tangent_25 = tmpvar_22.xyz;
  mediump vec3 flip_26;
  flip_26 = tmpvar_23;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (((normal_24.yzx * tangent_25.zxy) - (normal_24.zxy * tangent_25.yzx)) * flip_26);
  mediump mat3 tmpvar_28;
  tmpvar_28[0].x = tangent_25.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = normal_24.x;
  tmpvar_28[1].x = tangent_25.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = normal_24.y;
  tmpvar_28[2].x = tangent_25.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = normal_24.z;
  tangentToWorld_5 = tmpvar_28;
  highp vec3 v_29;
  v_29.x = tangentToWorld_5[0].x;
  v_29.y = tangentToWorld_5[1].x;
  v_29.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].y;
  v_30.y = tangentToWorld_5[1].y;
  v_30.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].z;
  v_31.y = tangentToWorld_5[1].z;
  v_31.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_31;
  highp vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = tmpvar_19;
  mediump vec4 normal_33;
  normal_33 = tmpvar_32;
  mediump vec3 x2_34;
  mediump vec3 x1_35;
  x1_35.x = dot (unity_SHAr, normal_33);
  x1_35.y = dot (unity_SHAg, normal_33);
  x1_35.z = dot (unity_SHAb, normal_33);
  mediump vec4 tmpvar_36;
  tmpvar_36 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_36);
  x2_34.y = dot (unity_SHBg, tmpvar_36);
  x2_34.z = dot (unity_SHBb, tmpvar_36);
  tmpvar_9.xyz = ((x2_34 + (unity_SHC.xyz * 
    ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
  )) + x1_35);
  gl_Position = tmpvar_11;
  xlv_TEXCOORD0 = texcoord_12;
  xlv_TEXCOORD1 = normalize(n_14);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform mediump float _Glossiness;
uniform sampler2D _OcclusionMap;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 c_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_2 = xlv_TEXCOORD2.xyz;
  tmpvar_3 = xlv_TEXCOORD2_1.xyz;
  tmpvar_4 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_5;
  tmpvar_5[0].x = tmpvar_2.x;
  tmpvar_5[0].y = tmpvar_3.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = tmpvar_2.y;
  tmpvar_5[1].y = tmpvar_3.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = tmpvar_2.z;
  tmpvar_5[2].y = tmpvar_3.z;
  tmpvar_5[2].z = tmpvar_4.z;
  lowp vec4 cse_6;
  cse_6 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_8;
  packednormal_8 = tmpvar_7;
  mediump vec3 n_9;
  n_9 = (((packednormal_8.xyz * 2.0) - 1.0) * tmpvar_5);
  mediump vec4 tmpvar_10;
  tmpvar_10.xyz = _SpecColor.xyz;
  tmpvar_10.w = _Glossiness;
  mediump vec3 tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = (1.0 - tmpvar_10.x);
  tmpvar_11 = ((_Color.xyz * cse_6.xyz) * tmpvar_12);
  mediump vec3 tmpvar_13;
  lowp vec3 tmpvar_14;
  tmpvar_14 = _LightColor0.xyz;
  tmpvar_13 = tmpvar_14;
  mediump float tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_15 = tmpvar_16.y;
  highp vec3 tmpvar_17;
  highp vec4 tmpvar_18;
  mediump vec3 cse_19;
  cse_19 = -(xlv_TEXCOORD1);
  tmpvar_17 = cse_19;
  tmpvar_18 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_20;
  mediump vec3 worldNormal_21;
  highp vec3 tmpvar_22;
  highp vec3 I_23;
  I_23 = -(tmpvar_17);
  tmpvar_22 = (I_23 - (2.0 * (
    dot (n_9, I_23)
   * n_9)));
  worldNormal_21 = tmpvar_22;
  mediump vec4 hdr_24;
  hdr_24 = tmpvar_18;
  highp float mip_25;
  mediump float tmpvar_26;
  mediump float cse_27;
  cse_27 = (1.0 - _Glossiness);
  tmpvar_26 = (cse_27 * 7.0);
  mip_25 = tmpvar_26;
  highp vec4 tmpvar_28;
  tmpvar_28.xyz = worldNormal_21;
  tmpvar_28.w = mip_25;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture (unity_SpecCube0, tmpvar_28.xyz, mip_25);
  mediump vec4 tmpvar_30;
  tmpvar_30 = tmpvar_29;
  tmpvar_20 = ((tmpvar_30.w * hdr_24.x) * tmpvar_30.xyz);
  tmpvar_20 = (tmpvar_20 * tmpvar_15);
  mediump vec2 tmpvar_31;
  tmpvar_31.x = dot ((cse_19 - (2.0 * 
    (dot (n_9, cse_19) * n_9)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_31.y = (1.0 - clamp (dot (n_9, cse_19), 0.0, 1.0));
  mediump vec2 tmpvar_32;
  tmpvar_32 = (((tmpvar_31 * tmpvar_31) * tmpvar_31) * tmpvar_31);
  mediump vec2 tmpvar_33;
  tmpvar_33.x = tmpvar_32.x;
  tmpvar_33.y = cse_27;
  lowp vec4 tmpvar_34;
  tmpvar_34 = texture (unity_NHxRoughness, tmpvar_33);
  mediump vec3 tmpvar_35;
  tmpvar_35 = (((
    ((tmpvar_11 + ((tmpvar_34.w * 16.0) * tmpvar_10.xyz)) * tmpvar_13)
   * 
    clamp (dot (n_9, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_15)
   * tmpvar_11)) + (tmpvar_20 * mix (tmpvar_10.xyz, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_12)), 0.0, 1.0)
  ), tmpvar_32.yyy)));
  mediump vec4 tmpvar_36;
  tmpvar_36.w = 1.0;
  tmpvar_36.xyz = tmpvar_35;
  c_1.w = tmpvar_36.w;
  c_1.xyz = tmpvar_35;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_37;
  xlat_varoutput_37.xyz = c_1.xyz;
  xlat_varoutput_37.w = 1.0;
  _glesFragData[0] = xlat_varoutput_37;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec4 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_5 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].x;
  v_30.y = tangentToWorld_5[1].x;
  v_30.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].y;
  v_31.y = tangentToWorld_5[1].y;
  v_31.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_5[0].z;
  v_32.y = tangentToWorld_5[1].z;
  v_32.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_32;
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_10 = tmpvar_33;
  highp vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = tmpvar_20;
  mediump vec4 normal_35;
  normal_35 = tmpvar_34;
  mediump vec3 x2_36;
  mediump vec3 x1_37;
  x1_37.x = dot (unity_SHAr, normal_35);
  x1_37.y = dot (unity_SHAg, normal_35);
  x1_37.z = dot (unity_SHAb, normal_35);
  mediump vec4 tmpvar_38;
  tmpvar_38 = (normal_35.xyzz * normal_35.yzzx);
  x2_36.x = dot (unity_SHBr, tmpvar_38);
  x2_36.y = dot (unity_SHBg, tmpvar_38);
  x2_36.z = dot (unity_SHBb, tmpvar_38);
  tmpvar_9.xyz = ((x2_36 + (unity_SHC.xyz * 
    ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
  )) + x1_37);
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform mediump float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform sampler2D _ShadowMapTexture;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = xlv_TEXCOORD2_1.xyz;
  tmpvar_5 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_3.x;
  tmpvar_6[0].y = tmpvar_4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = tmpvar_3.y;
  tmpvar_6[1].y = tmpvar_4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = tmpvar_3.z;
  tmpvar_6[2].y = tmpvar_4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  lowp vec4 cse_7;
  cse_7 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_9;
  packednormal_9 = tmpvar_8;
  mediump vec3 n_10;
  n_10 = (((packednormal_9.xyz * 2.0) - 1.0) * tmpvar_6);
  mediump vec4 tmpvar_11;
  tmpvar_11.xyz = _SpecColor.xyz;
  tmpvar_11.w = _Glossiness;
  mediump vec3 tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = (1.0 - tmpvar_11.x);
  tmpvar_12 = ((_Color.xyz * cse_7.xyz) * tmpvar_13);
  mediump vec3 tmpvar_14;
  lowp vec3 tmpvar_15;
  tmpvar_15 = _LightColor0.xyz;
  tmpvar_14 = tmpvar_15;
  lowp float tmpvar_16;
  mediump float dist_17;
  lowp float tmpvar_18;
  tmpvar_18 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_17 = tmpvar_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (float((dist_17 > 
    (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w)
  )), _LightShadowData.x);
  tmpvar_16 = tmpvar_19;
  atten_2 = tmpvar_16;
  mediump float tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_20 = tmpvar_21.y;
  highp vec3 tmpvar_22;
  highp vec4 tmpvar_23;
  mediump vec3 cse_24;
  cse_24 = -(xlv_TEXCOORD1);
  tmpvar_22 = cse_24;
  tmpvar_23 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_25;
  mediump vec3 worldNormal_26;
  highp vec3 tmpvar_27;
  highp vec3 I_28;
  I_28 = -(tmpvar_22);
  tmpvar_27 = (I_28 - (2.0 * (
    dot (n_10, I_28)
   * n_10)));
  worldNormal_26 = tmpvar_27;
  mediump vec4 hdr_29;
  hdr_29 = tmpvar_23;
  highp float mip_30;
  mediump float tmpvar_31;
  mediump float cse_32;
  cse_32 = (1.0 - _Glossiness);
  tmpvar_31 = (cse_32 * 7.0);
  mip_30 = tmpvar_31;
  highp vec4 tmpvar_33;
  tmpvar_33.xyz = worldNormal_26;
  tmpvar_33.w = mip_30;
  lowp vec4 tmpvar_34;
  tmpvar_34 = textureCube (unity_SpecCube0, tmpvar_33.xyz, mip_30);
  mediump vec4 tmpvar_35;
  tmpvar_35 = tmpvar_34;
  tmpvar_25 = ((tmpvar_35.w * hdr_29.x) * tmpvar_35.xyz);
  tmpvar_25 = (tmpvar_25 * tmpvar_20);
  mediump vec2 tmpvar_36;
  tmpvar_36.x = dot ((cse_24 - (2.0 * 
    (dot (n_10, cse_24) * n_10)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_36.y = (1.0 - clamp (dot (n_10, cse_24), 0.0, 1.0));
  mediump vec2 tmpvar_37;
  tmpvar_37 = (((tmpvar_36 * tmpvar_36) * tmpvar_36) * tmpvar_36);
  mediump vec2 tmpvar_38;
  tmpvar_38.x = tmpvar_37.x;
  tmpvar_38.y = cse_32;
  lowp vec4 tmpvar_39;
  tmpvar_39 = texture2D (unity_NHxRoughness, tmpvar_38);
  mediump vec3 tmpvar_40;
  tmpvar_40 = (((
    ((tmpvar_12 + ((tmpvar_39.w * 16.0) * tmpvar_11.xyz)) * (tmpvar_14 * atten_2))
   * 
    clamp (dot (n_10, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_20)
   * tmpvar_12)) + (tmpvar_25 * mix (tmpvar_11.xyz, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_13)), 0.0, 1.0)
  ), tmpvar_37.yyy)));
  mediump vec4 tmpvar_41;
  tmpvar_41.w = 1.0;
  tmpvar_41.xyz = tmpvar_40;
  c_1.w = tmpvar_41.w;
  c_1.xyz = tmpvar_40;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_42;
  xlat_varoutput_42.xyz = c_1.xyz;
  xlat_varoutput_42.w = 1.0;
  gl_FragData[0] = xlat_varoutput_42;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_NORMALMAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_11;
  tmpvar_11 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_12;
  texcoord_12.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_13;
  if ((_UVSec == 0.0)) {
    tmpvar_13 = tmpvar_2;
  } else {
    tmpvar_13 = tmpvar_3;
  };
  texcoord_12.zw = ((tmpvar_13 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_14;
  n_14 = (tmpvar_10.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_15;
  norm_15 = tmpvar_1;
  highp vec4 v_16;
  v_16.x = _World2Object[0].x;
  v_16.y = _World2Object[1].x;
  v_16.z = _World2Object[2].x;
  v_16.w = _World2Object[3].x;
  highp vec4 v_17;
  v_17.x = _World2Object[0].y;
  v_17.y = _World2Object[1].y;
  v_17.z = _World2Object[2].y;
  v_17.w = _World2Object[3].y;
  highp vec4 v_18;
  v_18.x = _World2Object[0].z;
  v_18.y = _World2Object[1].z;
  v_18.z = _World2Object[2].z;
  v_18.w = _World2Object[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(((
    (v_16.xyz * norm_15.x)
   + 
    (v_17.xyz * norm_15.y)
  ) + (v_18.xyz * norm_15.z)));
  highp vec3 dir_20;
  dir_20 = tmpvar_4.xyz;
  highp mat3 tmpvar_21;
  tmpvar_21[0] = _Object2World[0].xyz;
  tmpvar_21[1] = _Object2World[1].xyz;
  tmpvar_21[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = normalize((tmpvar_21 * dir_20));
  tmpvar_22.w = tmpvar_4.w;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.www;
  mediump vec3 normal_24;
  normal_24 = tmpvar_19;
  mediump vec3 tangent_25;
  tangent_25 = tmpvar_22.xyz;
  mediump vec3 flip_26;
  flip_26 = tmpvar_23;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (((normal_24.yzx * tangent_25.zxy) - (normal_24.zxy * tangent_25.yzx)) * flip_26);
  mediump mat3 tmpvar_28;
  tmpvar_28[0].x = tangent_25.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = normal_24.x;
  tmpvar_28[1].x = tangent_25.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = normal_24.y;
  tmpvar_28[2].x = tangent_25.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = normal_24.z;
  tangentToWorld_5 = tmpvar_28;
  highp vec3 v_29;
  v_29.x = tangentToWorld_5[0].x;
  v_29.y = tangentToWorld_5[1].x;
  v_29.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].y;
  v_30.y = tangentToWorld_5[1].y;
  v_30.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].z;
  v_31.y = tangentToWorld_5[1].z;
  v_31.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_31;
  highp vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = tmpvar_19;
  mediump vec4 normal_33;
  normal_33 = tmpvar_32;
  mediump vec3 x2_34;
  mediump vec3 x1_35;
  x1_35.x = dot (unity_SHAr, normal_33);
  x1_35.y = dot (unity_SHAg, normal_33);
  x1_35.z = dot (unity_SHAb, normal_33);
  mediump vec4 tmpvar_36;
  tmpvar_36 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_36);
  x2_34.y = dot (unity_SHBg, tmpvar_36);
  x2_34.z = dot (unity_SHBb, tmpvar_36);
  tmpvar_9.xyz = ((x2_34 + (unity_SHC.xyz * 
    ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
  )) + x1_35);
  highp vec3 lightColor0_37;
  lightColor0_37 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_38;
  lightColor1_38 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_39;
  lightColor2_39 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_40;
  lightColor3_40 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_41;
  lightAttenSq_41 = unity_4LightAtten0;
  highp vec4 tmpvar_42;
  tmpvar_42 = (unity_4LightPosX0 - tmpvar_10.x);
  highp vec4 tmpvar_43;
  tmpvar_43 = (unity_4LightPosY0 - tmpvar_10.y);
  highp vec4 tmpvar_44;
  tmpvar_44 = (unity_4LightPosZ0 - tmpvar_10.z);
  highp vec4 tmpvar_45;
  tmpvar_45 = (((tmpvar_42 * tmpvar_42) + (tmpvar_43 * tmpvar_43)) + (tmpvar_44 * tmpvar_44));
  highp vec4 tmpvar_46;
  tmpvar_46 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_42 * tmpvar_19.x) + (tmpvar_43 * tmpvar_19.y)) + (tmpvar_44 * tmpvar_19.z))
   * 
    inversesqrt(tmpvar_45)
  )) * (1.0/((1.0 + 
    (tmpvar_45 * lightAttenSq_41)
  ))));
  highp vec3 tmpvar_47;
  tmpvar_47 = (tmpvar_9.xyz + ((
    ((lightColor0_37 * tmpvar_46.x) + (lightColor1_38 * tmpvar_46.y))
   + 
    (lightColor2_39 * tmpvar_46.z)
  ) + (lightColor3_40 * tmpvar_46.w)));
  tmpvar_9.xyz = tmpvar_47;
  gl_Position = tmpvar_11;
  xlv_TEXCOORD0 = texcoord_12;
  xlv_TEXCOORD1 = normalize(n_14);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform mediump float _Glossiness;
uniform sampler2D _OcclusionMap;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 c_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_2 = xlv_TEXCOORD2.xyz;
  tmpvar_3 = xlv_TEXCOORD2_1.xyz;
  tmpvar_4 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_5;
  tmpvar_5[0].x = tmpvar_2.x;
  tmpvar_5[0].y = tmpvar_3.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = tmpvar_2.y;
  tmpvar_5[1].y = tmpvar_3.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = tmpvar_2.z;
  tmpvar_5[2].y = tmpvar_3.z;
  tmpvar_5[2].z = tmpvar_4.z;
  lowp vec4 cse_6;
  cse_6 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_8;
  packednormal_8 = tmpvar_7;
  mediump vec3 n_9;
  n_9 = (((packednormal_8.xyz * 2.0) - 1.0) * tmpvar_5);
  mediump vec4 tmpvar_10;
  tmpvar_10.xyz = _SpecColor.xyz;
  tmpvar_10.w = _Glossiness;
  mediump vec3 tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = (1.0 - tmpvar_10.x);
  tmpvar_11 = ((_Color.xyz * cse_6.xyz) * tmpvar_12);
  mediump vec3 tmpvar_13;
  lowp vec3 tmpvar_14;
  tmpvar_14 = _LightColor0.xyz;
  tmpvar_13 = tmpvar_14;
  mediump float tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_15 = tmpvar_16.y;
  highp vec3 tmpvar_17;
  highp vec4 tmpvar_18;
  mediump vec3 cse_19;
  cse_19 = -(xlv_TEXCOORD1);
  tmpvar_17 = cse_19;
  tmpvar_18 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_20;
  mediump vec3 worldNormal_21;
  highp vec3 tmpvar_22;
  highp vec3 I_23;
  I_23 = -(tmpvar_17);
  tmpvar_22 = (I_23 - (2.0 * (
    dot (n_9, I_23)
   * n_9)));
  worldNormal_21 = tmpvar_22;
  mediump vec4 hdr_24;
  hdr_24 = tmpvar_18;
  highp float mip_25;
  mediump float tmpvar_26;
  mediump float cse_27;
  cse_27 = (1.0 - _Glossiness);
  tmpvar_26 = (cse_27 * 7.0);
  mip_25 = tmpvar_26;
  highp vec4 tmpvar_28;
  tmpvar_28.xyz = worldNormal_21;
  tmpvar_28.w = mip_25;
  lowp vec4 tmpvar_29;
  tmpvar_29 = textureCube (unity_SpecCube0, tmpvar_28.xyz, mip_25);
  mediump vec4 tmpvar_30;
  tmpvar_30 = tmpvar_29;
  tmpvar_20 = ((tmpvar_30.w * hdr_24.x) * tmpvar_30.xyz);
  tmpvar_20 = (tmpvar_20 * tmpvar_15);
  mediump vec2 tmpvar_31;
  tmpvar_31.x = dot ((cse_19 - (2.0 * 
    (dot (n_9, cse_19) * n_9)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_31.y = (1.0 - clamp (dot (n_9, cse_19), 0.0, 1.0));
  mediump vec2 tmpvar_32;
  tmpvar_32 = (((tmpvar_31 * tmpvar_31) * tmpvar_31) * tmpvar_31);
  mediump vec2 tmpvar_33;
  tmpvar_33.x = tmpvar_32.x;
  tmpvar_33.y = cse_27;
  lowp vec4 tmpvar_34;
  tmpvar_34 = texture2D (unity_NHxRoughness, tmpvar_33);
  mediump vec3 tmpvar_35;
  tmpvar_35 = (((
    ((tmpvar_11 + ((tmpvar_34.w * 16.0) * tmpvar_10.xyz)) * tmpvar_13)
   * 
    clamp (dot (n_9, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_15)
   * tmpvar_11)) + (tmpvar_20 * mix (tmpvar_10.xyz, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_12)), 0.0, 1.0)
  ), tmpvar_32.yyy)));
  mediump vec4 tmpvar_36;
  tmpvar_36.w = 1.0;
  tmpvar_36.xyz = tmpvar_35;
  c_1.w = tmpvar_36.w;
  c_1.xyz = tmpvar_35;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_37;
  xlat_varoutput_37.xyz = c_1.xyz;
  xlat_varoutput_37.w = 1.0;
  gl_FragData[0] = xlat_varoutput_37;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_NORMALMAP" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_11;
  tmpvar_11 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_12;
  texcoord_12.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_13;
  if ((_UVSec == 0.0)) {
    tmpvar_13 = tmpvar_2;
  } else {
    tmpvar_13 = tmpvar_3;
  };
  texcoord_12.zw = ((tmpvar_13 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_14;
  n_14 = (tmpvar_10.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_15;
  norm_15 = tmpvar_1;
  highp vec4 v_16;
  v_16.x = _World2Object[0].x;
  v_16.y = _World2Object[1].x;
  v_16.z = _World2Object[2].x;
  v_16.w = _World2Object[3].x;
  highp vec4 v_17;
  v_17.x = _World2Object[0].y;
  v_17.y = _World2Object[1].y;
  v_17.z = _World2Object[2].y;
  v_17.w = _World2Object[3].y;
  highp vec4 v_18;
  v_18.x = _World2Object[0].z;
  v_18.y = _World2Object[1].z;
  v_18.z = _World2Object[2].z;
  v_18.w = _World2Object[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(((
    (v_16.xyz * norm_15.x)
   + 
    (v_17.xyz * norm_15.y)
  ) + (v_18.xyz * norm_15.z)));
  highp vec3 dir_20;
  dir_20 = tmpvar_4.xyz;
  highp mat3 tmpvar_21;
  tmpvar_21[0] = _Object2World[0].xyz;
  tmpvar_21[1] = _Object2World[1].xyz;
  tmpvar_21[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = normalize((tmpvar_21 * dir_20));
  tmpvar_22.w = tmpvar_4.w;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.www;
  mediump vec3 normal_24;
  normal_24 = tmpvar_19;
  mediump vec3 tangent_25;
  tangent_25 = tmpvar_22.xyz;
  mediump vec3 flip_26;
  flip_26 = tmpvar_23;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (((normal_24.yzx * tangent_25.zxy) - (normal_24.zxy * tangent_25.yzx)) * flip_26);
  mediump mat3 tmpvar_28;
  tmpvar_28[0].x = tangent_25.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = normal_24.x;
  tmpvar_28[1].x = tangent_25.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = normal_24.y;
  tmpvar_28[2].x = tangent_25.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = normal_24.z;
  tangentToWorld_5 = tmpvar_28;
  highp vec3 v_29;
  v_29.x = tangentToWorld_5[0].x;
  v_29.y = tangentToWorld_5[1].x;
  v_29.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].y;
  v_30.y = tangentToWorld_5[1].y;
  v_30.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].z;
  v_31.y = tangentToWorld_5[1].z;
  v_31.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_31;
  highp vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = tmpvar_19;
  mediump vec4 normal_33;
  normal_33 = tmpvar_32;
  mediump vec3 x2_34;
  mediump vec3 x1_35;
  x1_35.x = dot (unity_SHAr, normal_33);
  x1_35.y = dot (unity_SHAg, normal_33);
  x1_35.z = dot (unity_SHAb, normal_33);
  mediump vec4 tmpvar_36;
  tmpvar_36 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_36);
  x2_34.y = dot (unity_SHBg, tmpvar_36);
  x2_34.z = dot (unity_SHBb, tmpvar_36);
  tmpvar_9.xyz = ((x2_34 + (unity_SHC.xyz * 
    ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
  )) + x1_35);
  highp vec3 lightColor0_37;
  lightColor0_37 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_38;
  lightColor1_38 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_39;
  lightColor2_39 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_40;
  lightColor3_40 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_41;
  lightAttenSq_41 = unity_4LightAtten0;
  highp vec4 tmpvar_42;
  tmpvar_42 = (unity_4LightPosX0 - tmpvar_10.x);
  highp vec4 tmpvar_43;
  tmpvar_43 = (unity_4LightPosY0 - tmpvar_10.y);
  highp vec4 tmpvar_44;
  tmpvar_44 = (unity_4LightPosZ0 - tmpvar_10.z);
  highp vec4 tmpvar_45;
  tmpvar_45 = (((tmpvar_42 * tmpvar_42) + (tmpvar_43 * tmpvar_43)) + (tmpvar_44 * tmpvar_44));
  highp vec4 tmpvar_46;
  tmpvar_46 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_42 * tmpvar_19.x) + (tmpvar_43 * tmpvar_19.y)) + (tmpvar_44 * tmpvar_19.z))
   * 
    inversesqrt(tmpvar_45)
  )) * (1.0/((1.0 + 
    (tmpvar_45 * lightAttenSq_41)
  ))));
  highp vec3 tmpvar_47;
  tmpvar_47 = (tmpvar_9.xyz + ((
    ((lightColor0_37 * tmpvar_46.x) + (lightColor1_38 * tmpvar_46.y))
   + 
    (lightColor2_39 * tmpvar_46.z)
  ) + (lightColor3_40 * tmpvar_46.w)));
  tmpvar_9.xyz = tmpvar_47;
  gl_Position = tmpvar_11;
  xlv_TEXCOORD0 = texcoord_12;
  xlv_TEXCOORD1 = normalize(n_14);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform mediump float _Glossiness;
uniform sampler2D _OcclusionMap;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 c_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_2 = xlv_TEXCOORD2.xyz;
  tmpvar_3 = xlv_TEXCOORD2_1.xyz;
  tmpvar_4 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_5;
  tmpvar_5[0].x = tmpvar_2.x;
  tmpvar_5[0].y = tmpvar_3.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = tmpvar_2.y;
  tmpvar_5[1].y = tmpvar_3.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = tmpvar_2.z;
  tmpvar_5[2].y = tmpvar_3.z;
  tmpvar_5[2].z = tmpvar_4.z;
  lowp vec4 cse_6;
  cse_6 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_8;
  packednormal_8 = tmpvar_7;
  mediump vec3 n_9;
  n_9 = (((packednormal_8.xyz * 2.0) - 1.0) * tmpvar_5);
  mediump vec4 tmpvar_10;
  tmpvar_10.xyz = _SpecColor.xyz;
  tmpvar_10.w = _Glossiness;
  mediump vec3 tmpvar_11;
  mediump float tmpvar_12;
  tmpvar_12 = (1.0 - tmpvar_10.x);
  tmpvar_11 = ((_Color.xyz * cse_6.xyz) * tmpvar_12);
  mediump vec3 tmpvar_13;
  lowp vec3 tmpvar_14;
  tmpvar_14 = _LightColor0.xyz;
  tmpvar_13 = tmpvar_14;
  mediump float tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_15 = tmpvar_16.y;
  highp vec3 tmpvar_17;
  highp vec4 tmpvar_18;
  mediump vec3 cse_19;
  cse_19 = -(xlv_TEXCOORD1);
  tmpvar_17 = cse_19;
  tmpvar_18 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_20;
  mediump vec3 worldNormal_21;
  highp vec3 tmpvar_22;
  highp vec3 I_23;
  I_23 = -(tmpvar_17);
  tmpvar_22 = (I_23 - (2.0 * (
    dot (n_9, I_23)
   * n_9)));
  worldNormal_21 = tmpvar_22;
  mediump vec4 hdr_24;
  hdr_24 = tmpvar_18;
  highp float mip_25;
  mediump float tmpvar_26;
  mediump float cse_27;
  cse_27 = (1.0 - _Glossiness);
  tmpvar_26 = (cse_27 * 7.0);
  mip_25 = tmpvar_26;
  highp vec4 tmpvar_28;
  tmpvar_28.xyz = worldNormal_21;
  tmpvar_28.w = mip_25;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture (unity_SpecCube0, tmpvar_28.xyz, mip_25);
  mediump vec4 tmpvar_30;
  tmpvar_30 = tmpvar_29;
  tmpvar_20 = ((tmpvar_30.w * hdr_24.x) * tmpvar_30.xyz);
  tmpvar_20 = (tmpvar_20 * tmpvar_15);
  mediump vec2 tmpvar_31;
  tmpvar_31.x = dot ((cse_19 - (2.0 * 
    (dot (n_9, cse_19) * n_9)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_31.y = (1.0 - clamp (dot (n_9, cse_19), 0.0, 1.0));
  mediump vec2 tmpvar_32;
  tmpvar_32 = (((tmpvar_31 * tmpvar_31) * tmpvar_31) * tmpvar_31);
  mediump vec2 tmpvar_33;
  tmpvar_33.x = tmpvar_32.x;
  tmpvar_33.y = cse_27;
  lowp vec4 tmpvar_34;
  tmpvar_34 = texture (unity_NHxRoughness, tmpvar_33);
  mediump vec3 tmpvar_35;
  tmpvar_35 = (((
    ((tmpvar_11 + ((tmpvar_34.w * 16.0) * tmpvar_10.xyz)) * tmpvar_13)
   * 
    clamp (dot (n_9, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_15)
   * tmpvar_11)) + (tmpvar_20 * mix (tmpvar_10.xyz, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_12)), 0.0, 1.0)
  ), tmpvar_32.yyy)));
  mediump vec4 tmpvar_36;
  tmpvar_36.w = 1.0;
  tmpvar_36.xyz = tmpvar_35;
  c_1.w = tmpvar_36.w;
  c_1.xyz = tmpvar_35;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_37;
  xlat_varoutput_37.xyz = c_1.xyz;
  xlat_varoutput_37.w = 1.0;
  _glesFragData[0] = xlat_varoutput_37;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_NORMALMAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec4 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_5 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].x;
  v_30.y = tangentToWorld_5[1].x;
  v_30.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].y;
  v_31.y = tangentToWorld_5[1].y;
  v_31.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_5[0].z;
  v_32.y = tangentToWorld_5[1].z;
  v_32.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_32;
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_10 = tmpvar_33;
  highp vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = tmpvar_20;
  mediump vec4 normal_35;
  normal_35 = tmpvar_34;
  mediump vec3 x2_36;
  mediump vec3 x1_37;
  x1_37.x = dot (unity_SHAr, normal_35);
  x1_37.y = dot (unity_SHAg, normal_35);
  x1_37.z = dot (unity_SHAb, normal_35);
  mediump vec4 tmpvar_38;
  tmpvar_38 = (normal_35.xyzz * normal_35.yzzx);
  x2_36.x = dot (unity_SHBr, tmpvar_38);
  x2_36.y = dot (unity_SHBg, tmpvar_38);
  x2_36.z = dot (unity_SHBb, tmpvar_38);
  tmpvar_9.xyz = ((x2_36 + (unity_SHC.xyz * 
    ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
  )) + x1_37);
  highp vec3 lightColor0_39;
  lightColor0_39 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_40;
  lightColor1_40 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_41;
  lightColor2_41 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_42;
  lightColor3_42 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_43;
  lightAttenSq_43 = unity_4LightAtten0;
  highp vec4 tmpvar_44;
  tmpvar_44 = (unity_4LightPosX0 - tmpvar_11.x);
  highp vec4 tmpvar_45;
  tmpvar_45 = (unity_4LightPosY0 - tmpvar_11.y);
  highp vec4 tmpvar_46;
  tmpvar_46 = (unity_4LightPosZ0 - tmpvar_11.z);
  highp vec4 tmpvar_47;
  tmpvar_47 = (((tmpvar_44 * tmpvar_44) + (tmpvar_45 * tmpvar_45)) + (tmpvar_46 * tmpvar_46));
  highp vec4 tmpvar_48;
  tmpvar_48 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_44 * tmpvar_20.x) + (tmpvar_45 * tmpvar_20.y)) + (tmpvar_46 * tmpvar_20.z))
   * 
    inversesqrt(tmpvar_47)
  )) * (1.0/((1.0 + 
    (tmpvar_47 * lightAttenSq_43)
  ))));
  highp vec3 tmpvar_49;
  tmpvar_49 = (tmpvar_9.xyz + ((
    ((lightColor0_39 * tmpvar_48.x) + (lightColor1_40 * tmpvar_48.y))
   + 
    (lightColor2_41 * tmpvar_48.z)
  ) + (lightColor3_42 * tmpvar_48.w)));
  tmpvar_9.xyz = tmpvar_49;
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform mediump float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform sampler2D _ShadowMapTexture;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = xlv_TEXCOORD2_1.xyz;
  tmpvar_5 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_3.x;
  tmpvar_6[0].y = tmpvar_4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = tmpvar_3.y;
  tmpvar_6[1].y = tmpvar_4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = tmpvar_3.z;
  tmpvar_6[2].y = tmpvar_4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  lowp vec4 cse_7;
  cse_7 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_9;
  packednormal_9 = tmpvar_8;
  mediump vec3 n_10;
  n_10 = (((packednormal_9.xyz * 2.0) - 1.0) * tmpvar_6);
  mediump vec4 tmpvar_11;
  tmpvar_11.xyz = _SpecColor.xyz;
  tmpvar_11.w = _Glossiness;
  mediump vec3 tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = (1.0 - tmpvar_11.x);
  tmpvar_12 = ((_Color.xyz * cse_7.xyz) * tmpvar_13);
  mediump vec3 tmpvar_14;
  lowp vec3 tmpvar_15;
  tmpvar_15 = _LightColor0.xyz;
  tmpvar_14 = tmpvar_15;
  lowp float tmpvar_16;
  mediump float dist_17;
  lowp float tmpvar_18;
  tmpvar_18 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_17 = tmpvar_18;
  mediump float tmpvar_19;
  tmpvar_19 = max (float((dist_17 > 
    (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w)
  )), _LightShadowData.x);
  tmpvar_16 = tmpvar_19;
  atten_2 = tmpvar_16;
  mediump float tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_20 = tmpvar_21.y;
  highp vec3 tmpvar_22;
  highp vec4 tmpvar_23;
  mediump vec3 cse_24;
  cse_24 = -(xlv_TEXCOORD1);
  tmpvar_22 = cse_24;
  tmpvar_23 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_25;
  mediump vec3 worldNormal_26;
  highp vec3 tmpvar_27;
  highp vec3 I_28;
  I_28 = -(tmpvar_22);
  tmpvar_27 = (I_28 - (2.0 * (
    dot (n_10, I_28)
   * n_10)));
  worldNormal_26 = tmpvar_27;
  mediump vec4 hdr_29;
  hdr_29 = tmpvar_23;
  highp float mip_30;
  mediump float tmpvar_31;
  mediump float cse_32;
  cse_32 = (1.0 - _Glossiness);
  tmpvar_31 = (cse_32 * 7.0);
  mip_30 = tmpvar_31;
  highp vec4 tmpvar_33;
  tmpvar_33.xyz = worldNormal_26;
  tmpvar_33.w = mip_30;
  lowp vec4 tmpvar_34;
  tmpvar_34 = textureCube (unity_SpecCube0, tmpvar_33.xyz, mip_30);
  mediump vec4 tmpvar_35;
  tmpvar_35 = tmpvar_34;
  tmpvar_25 = ((tmpvar_35.w * hdr_29.x) * tmpvar_35.xyz);
  tmpvar_25 = (tmpvar_25 * tmpvar_20);
  mediump vec2 tmpvar_36;
  tmpvar_36.x = dot ((cse_24 - (2.0 * 
    (dot (n_10, cse_24) * n_10)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_36.y = (1.0 - clamp (dot (n_10, cse_24), 0.0, 1.0));
  mediump vec2 tmpvar_37;
  tmpvar_37 = (((tmpvar_36 * tmpvar_36) * tmpvar_36) * tmpvar_36);
  mediump vec2 tmpvar_38;
  tmpvar_38.x = tmpvar_37.x;
  tmpvar_38.y = cse_32;
  lowp vec4 tmpvar_39;
  tmpvar_39 = texture2D (unity_NHxRoughness, tmpvar_38);
  mediump vec3 tmpvar_40;
  tmpvar_40 = (((
    ((tmpvar_12 + ((tmpvar_39.w * 16.0) * tmpvar_11.xyz)) * (tmpvar_14 * atten_2))
   * 
    clamp (dot (n_10, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_20)
   * tmpvar_12)) + (tmpvar_25 * mix (tmpvar_11.xyz, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_13)), 0.0, 1.0)
  ), tmpvar_37.yyy)));
  mediump vec4 tmpvar_41;
  tmpvar_41.w = 1.0;
  tmpvar_41.xyz = tmpvar_40;
  c_1.w = tmpvar_41.w;
  c_1.xyz = tmpvar_40;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_42;
  xlat_varoutput_42.xyz = c_1.xyz;
  xlat_varoutput_42.w = 1.0;
  gl_FragData[0] = xlat_varoutput_42;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec4 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_5 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].x;
  v_30.y = tangentToWorld_5[1].x;
  v_30.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].y;
  v_31.y = tangentToWorld_5[1].y;
  v_31.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_5[0].z;
  v_32.y = tangentToWorld_5[1].z;
  v_32.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_32;
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_10 = tmpvar_33;
  highp vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = tmpvar_20;
  mediump vec4 normal_35;
  normal_35 = tmpvar_34;
  mediump vec3 x2_36;
  mediump vec3 x1_37;
  x1_37.x = dot (unity_SHAr, normal_35);
  x1_37.y = dot (unity_SHAg, normal_35);
  x1_37.z = dot (unity_SHAb, normal_35);
  mediump vec4 tmpvar_38;
  tmpvar_38 = (normal_35.xyzz * normal_35.yzzx);
  x2_36.x = dot (unity_SHBr, tmpvar_38);
  x2_36.y = dot (unity_SHBg, tmpvar_38);
  x2_36.z = dot (unity_SHBb, tmpvar_38);
  tmpvar_9.xyz = ((x2_36 + (unity_SHC.xyz * 
    ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
  )) + x1_37);
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform mediump float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform lowp sampler2DShadow _ShadowMapTexture;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = xlv_TEXCOORD2_1.xyz;
  tmpvar_5 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_3.x;
  tmpvar_6[0].y = tmpvar_4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = tmpvar_3.y;
  tmpvar_6[1].y = tmpvar_4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = tmpvar_3.z;
  tmpvar_6[2].y = tmpvar_4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  lowp vec4 cse_7;
  cse_7 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_9;
  packednormal_9 = tmpvar_8;
  mediump vec3 n_10;
  n_10 = (((packednormal_9.xyz * 2.0) - 1.0) * tmpvar_6);
  mediump vec4 tmpvar_11;
  tmpvar_11.xyz = _SpecColor.xyz;
  tmpvar_11.w = _Glossiness;
  mediump vec3 tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = (1.0 - tmpvar_11.x);
  tmpvar_12 = ((_Color.xyz * cse_7.xyz) * tmpvar_13);
  mediump vec3 tmpvar_14;
  lowp vec3 tmpvar_15;
  tmpvar_15 = _LightColor0.xyz;
  tmpvar_14 = tmpvar_15;
  lowp float shadow_16;
  lowp float tmpvar_17;
  tmpvar_17 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  mediump float tmpvar_18;
  tmpvar_18 = (_LightShadowData.x + (tmpvar_17 * (1.0 - _LightShadowData.x)));
  shadow_16 = tmpvar_18;
  atten_2 = shadow_16;
  mediump float tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_19 = tmpvar_20.y;
  highp vec3 tmpvar_21;
  highp vec4 tmpvar_22;
  mediump vec3 cse_23;
  cse_23 = -(xlv_TEXCOORD1);
  tmpvar_21 = cse_23;
  tmpvar_22 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_24;
  mediump vec3 worldNormal_25;
  highp vec3 tmpvar_26;
  highp vec3 I_27;
  I_27 = -(tmpvar_21);
  tmpvar_26 = (I_27 - (2.0 * (
    dot (n_10, I_27)
   * n_10)));
  worldNormal_25 = tmpvar_26;
  mediump vec4 hdr_28;
  hdr_28 = tmpvar_22;
  highp float mip_29;
  mediump float tmpvar_30;
  mediump float cse_31;
  cse_31 = (1.0 - _Glossiness);
  tmpvar_30 = (cse_31 * 7.0);
  mip_29 = tmpvar_30;
  highp vec4 tmpvar_32;
  tmpvar_32.xyz = worldNormal_25;
  tmpvar_32.w = mip_29;
  lowp vec4 tmpvar_33;
  tmpvar_33 = textureCube (unity_SpecCube0, tmpvar_32.xyz, mip_29);
  mediump vec4 tmpvar_34;
  tmpvar_34 = tmpvar_33;
  tmpvar_24 = ((tmpvar_34.w * hdr_28.x) * tmpvar_34.xyz);
  tmpvar_24 = (tmpvar_24 * tmpvar_19);
  mediump vec2 tmpvar_35;
  tmpvar_35.x = dot ((cse_23 - (2.0 * 
    (dot (n_10, cse_23) * n_10)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_35.y = (1.0 - clamp (dot (n_10, cse_23), 0.0, 1.0));
  mediump vec2 tmpvar_36;
  tmpvar_36 = (((tmpvar_35 * tmpvar_35) * tmpvar_35) * tmpvar_35);
  mediump vec2 tmpvar_37;
  tmpvar_37.x = tmpvar_36.x;
  tmpvar_37.y = cse_31;
  lowp vec4 tmpvar_38;
  tmpvar_38 = texture2D (unity_NHxRoughness, tmpvar_37);
  mediump vec3 tmpvar_39;
  tmpvar_39 = (((
    ((tmpvar_12 + ((tmpvar_38.w * 16.0) * tmpvar_11.xyz)) * (tmpvar_14 * atten_2))
   * 
    clamp (dot (n_10, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_19)
   * tmpvar_12)) + (tmpvar_24 * mix (tmpvar_11.xyz, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_13)), 0.0, 1.0)
  ), tmpvar_36.yyy)));
  mediump vec4 tmpvar_40;
  tmpvar_40.w = 1.0;
  tmpvar_40.xyz = tmpvar_39;
  c_1.w = tmpvar_40.w;
  c_1.xyz = tmpvar_39;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_41;
  xlat_varoutput_41.xyz = c_1.xyz;
  xlat_varoutput_41.w = 1.0;
  gl_FragData[0] = xlat_varoutput_41;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
out mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec4 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_5 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].x;
  v_30.y = tangentToWorld_5[1].x;
  v_30.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].y;
  v_31.y = tangentToWorld_5[1].y;
  v_31.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_5[0].z;
  v_32.y = tangentToWorld_5[1].z;
  v_32.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_32;
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_10 = tmpvar_33;
  highp vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = tmpvar_20;
  mediump vec4 normal_35;
  normal_35 = tmpvar_34;
  mediump vec3 x2_36;
  mediump vec3 x1_37;
  x1_37.x = dot (unity_SHAr, normal_35);
  x1_37.y = dot (unity_SHAg, normal_35);
  x1_37.z = dot (unity_SHAb, normal_35);
  mediump vec4 tmpvar_38;
  tmpvar_38 = (normal_35.xyzz * normal_35.yzzx);
  x2_36.x = dot (unity_SHBr, tmpvar_38);
  x2_36.y = dot (unity_SHBg, tmpvar_38);
  x2_36.z = dot (unity_SHBb, tmpvar_38);
  tmpvar_9.xyz = ((x2_36 + (unity_SHC.xyz * 
    ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
  )) + x1_37);
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform mediump float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform lowp sampler2DShadow _ShadowMapTexture;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
in mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = xlv_TEXCOORD2_1.xyz;
  tmpvar_5 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_3.x;
  tmpvar_6[0].y = tmpvar_4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = tmpvar_3.y;
  tmpvar_6[1].y = tmpvar_4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = tmpvar_3.z;
  tmpvar_6[2].y = tmpvar_4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  lowp vec4 cse_7;
  cse_7 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_9;
  packednormal_9 = tmpvar_8;
  mediump vec3 n_10;
  n_10 = (((packednormal_9.xyz * 2.0) - 1.0) * tmpvar_6);
  mediump vec4 tmpvar_11;
  tmpvar_11.xyz = _SpecColor.xyz;
  tmpvar_11.w = _Glossiness;
  mediump vec3 tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = (1.0 - tmpvar_11.x);
  tmpvar_12 = ((_Color.xyz * cse_7.xyz) * tmpvar_13);
  mediump vec3 tmpvar_14;
  lowp vec3 tmpvar_15;
  tmpvar_15 = _LightColor0.xyz;
  tmpvar_14 = tmpvar_15;
  lowp float shadow_16;
  mediump float tmpvar_17;
  tmpvar_17 = texture (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  lowp float tmpvar_18;
  tmpvar_18 = tmpvar_17;
  mediump float tmpvar_19;
  tmpvar_19 = (_LightShadowData.x + (tmpvar_18 * (1.0 - _LightShadowData.x)));
  shadow_16 = tmpvar_19;
  atten_2 = shadow_16;
  mediump float tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_20 = tmpvar_21.y;
  highp vec3 tmpvar_22;
  highp vec4 tmpvar_23;
  mediump vec3 cse_24;
  cse_24 = -(xlv_TEXCOORD1);
  tmpvar_22 = cse_24;
  tmpvar_23 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_25;
  mediump vec3 worldNormal_26;
  highp vec3 tmpvar_27;
  highp vec3 I_28;
  I_28 = -(tmpvar_22);
  tmpvar_27 = (I_28 - (2.0 * (
    dot (n_10, I_28)
   * n_10)));
  worldNormal_26 = tmpvar_27;
  mediump vec4 hdr_29;
  hdr_29 = tmpvar_23;
  highp float mip_30;
  mediump float tmpvar_31;
  mediump float cse_32;
  cse_32 = (1.0 - _Glossiness);
  tmpvar_31 = (cse_32 * 7.0);
  mip_30 = tmpvar_31;
  highp vec4 tmpvar_33;
  tmpvar_33.xyz = worldNormal_26;
  tmpvar_33.w = mip_30;
  lowp vec4 tmpvar_34;
  tmpvar_34 = texture (unity_SpecCube0, tmpvar_33.xyz, mip_30);
  mediump vec4 tmpvar_35;
  tmpvar_35 = tmpvar_34;
  tmpvar_25 = ((tmpvar_35.w * hdr_29.x) * tmpvar_35.xyz);
  tmpvar_25 = (tmpvar_25 * tmpvar_20);
  mediump vec2 tmpvar_36;
  tmpvar_36.x = dot ((cse_24 - (2.0 * 
    (dot (n_10, cse_24) * n_10)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_36.y = (1.0 - clamp (dot (n_10, cse_24), 0.0, 1.0));
  mediump vec2 tmpvar_37;
  tmpvar_37 = (((tmpvar_36 * tmpvar_36) * tmpvar_36) * tmpvar_36);
  mediump vec2 tmpvar_38;
  tmpvar_38.x = tmpvar_37.x;
  tmpvar_38.y = cse_32;
  lowp vec4 tmpvar_39;
  tmpvar_39 = texture (unity_NHxRoughness, tmpvar_38);
  mediump vec3 tmpvar_40;
  tmpvar_40 = (((
    ((tmpvar_12 + ((tmpvar_39.w * 16.0) * tmpvar_11.xyz)) * (tmpvar_14 * atten_2))
   * 
    clamp (dot (n_10, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_20)
   * tmpvar_12)) + (tmpvar_25 * mix (tmpvar_11.xyz, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_13)), 0.0, 1.0)
  ), tmpvar_37.yyy)));
  mediump vec4 tmpvar_41;
  tmpvar_41.w = 1.0;
  tmpvar_41.xyz = tmpvar_40;
  c_1.w = tmpvar_41.w;
  c_1.xyz = tmpvar_40;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_42;
  xlat_varoutput_42.xyz = c_1.xyz;
  xlat_varoutput_42.w = 1.0;
  _glesFragData[0] = xlat_varoutput_42;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_NORMALMAP" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec4 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_5 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].x;
  v_30.y = tangentToWorld_5[1].x;
  v_30.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].y;
  v_31.y = tangentToWorld_5[1].y;
  v_31.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_5[0].z;
  v_32.y = tangentToWorld_5[1].z;
  v_32.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_32;
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_10 = tmpvar_33;
  highp vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = tmpvar_20;
  mediump vec4 normal_35;
  normal_35 = tmpvar_34;
  mediump vec3 x2_36;
  mediump vec3 x1_37;
  x1_37.x = dot (unity_SHAr, normal_35);
  x1_37.y = dot (unity_SHAg, normal_35);
  x1_37.z = dot (unity_SHAb, normal_35);
  mediump vec4 tmpvar_38;
  tmpvar_38 = (normal_35.xyzz * normal_35.yzzx);
  x2_36.x = dot (unity_SHBr, tmpvar_38);
  x2_36.y = dot (unity_SHBg, tmpvar_38);
  x2_36.z = dot (unity_SHBb, tmpvar_38);
  tmpvar_9.xyz = ((x2_36 + (unity_SHC.xyz * 
    ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
  )) + x1_37);
  highp vec3 lightColor0_39;
  lightColor0_39 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_40;
  lightColor1_40 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_41;
  lightColor2_41 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_42;
  lightColor3_42 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_43;
  lightAttenSq_43 = unity_4LightAtten0;
  highp vec4 tmpvar_44;
  tmpvar_44 = (unity_4LightPosX0 - tmpvar_11.x);
  highp vec4 tmpvar_45;
  tmpvar_45 = (unity_4LightPosY0 - tmpvar_11.y);
  highp vec4 tmpvar_46;
  tmpvar_46 = (unity_4LightPosZ0 - tmpvar_11.z);
  highp vec4 tmpvar_47;
  tmpvar_47 = (((tmpvar_44 * tmpvar_44) + (tmpvar_45 * tmpvar_45)) + (tmpvar_46 * tmpvar_46));
  highp vec4 tmpvar_48;
  tmpvar_48 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_44 * tmpvar_20.x) + (tmpvar_45 * tmpvar_20.y)) + (tmpvar_46 * tmpvar_20.z))
   * 
    inversesqrt(tmpvar_47)
  )) * (1.0/((1.0 + 
    (tmpvar_47 * lightAttenSq_43)
  ))));
  highp vec3 tmpvar_49;
  tmpvar_49 = (tmpvar_9.xyz + ((
    ((lightColor0_39 * tmpvar_48.x) + (lightColor1_40 * tmpvar_48.y))
   + 
    (lightColor2_41 * tmpvar_48.z)
  ) + (lightColor3_42 * tmpvar_48.w)));
  tmpvar_9.xyz = tmpvar_49;
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform mediump float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform lowp sampler2DShadow _ShadowMapTexture;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = xlv_TEXCOORD2_1.xyz;
  tmpvar_5 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_3.x;
  tmpvar_6[0].y = tmpvar_4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = tmpvar_3.y;
  tmpvar_6[1].y = tmpvar_4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = tmpvar_3.z;
  tmpvar_6[2].y = tmpvar_4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  lowp vec4 cse_7;
  cse_7 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_9;
  packednormal_9 = tmpvar_8;
  mediump vec3 n_10;
  n_10 = (((packednormal_9.xyz * 2.0) - 1.0) * tmpvar_6);
  mediump vec4 tmpvar_11;
  tmpvar_11.xyz = _SpecColor.xyz;
  tmpvar_11.w = _Glossiness;
  mediump vec3 tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = (1.0 - tmpvar_11.x);
  tmpvar_12 = ((_Color.xyz * cse_7.xyz) * tmpvar_13);
  mediump vec3 tmpvar_14;
  lowp vec3 tmpvar_15;
  tmpvar_15 = _LightColor0.xyz;
  tmpvar_14 = tmpvar_15;
  lowp float shadow_16;
  lowp float tmpvar_17;
  tmpvar_17 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  mediump float tmpvar_18;
  tmpvar_18 = (_LightShadowData.x + (tmpvar_17 * (1.0 - _LightShadowData.x)));
  shadow_16 = tmpvar_18;
  atten_2 = shadow_16;
  mediump float tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_19 = tmpvar_20.y;
  highp vec3 tmpvar_21;
  highp vec4 tmpvar_22;
  mediump vec3 cse_23;
  cse_23 = -(xlv_TEXCOORD1);
  tmpvar_21 = cse_23;
  tmpvar_22 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_24;
  mediump vec3 worldNormal_25;
  highp vec3 tmpvar_26;
  highp vec3 I_27;
  I_27 = -(tmpvar_21);
  tmpvar_26 = (I_27 - (2.0 * (
    dot (n_10, I_27)
   * n_10)));
  worldNormal_25 = tmpvar_26;
  mediump vec4 hdr_28;
  hdr_28 = tmpvar_22;
  highp float mip_29;
  mediump float tmpvar_30;
  mediump float cse_31;
  cse_31 = (1.0 - _Glossiness);
  tmpvar_30 = (cse_31 * 7.0);
  mip_29 = tmpvar_30;
  highp vec4 tmpvar_32;
  tmpvar_32.xyz = worldNormal_25;
  tmpvar_32.w = mip_29;
  lowp vec4 tmpvar_33;
  tmpvar_33 = textureCube (unity_SpecCube0, tmpvar_32.xyz, mip_29);
  mediump vec4 tmpvar_34;
  tmpvar_34 = tmpvar_33;
  tmpvar_24 = ((tmpvar_34.w * hdr_28.x) * tmpvar_34.xyz);
  tmpvar_24 = (tmpvar_24 * tmpvar_19);
  mediump vec2 tmpvar_35;
  tmpvar_35.x = dot ((cse_23 - (2.0 * 
    (dot (n_10, cse_23) * n_10)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_35.y = (1.0 - clamp (dot (n_10, cse_23), 0.0, 1.0));
  mediump vec2 tmpvar_36;
  tmpvar_36 = (((tmpvar_35 * tmpvar_35) * tmpvar_35) * tmpvar_35);
  mediump vec2 tmpvar_37;
  tmpvar_37.x = tmpvar_36.x;
  tmpvar_37.y = cse_31;
  lowp vec4 tmpvar_38;
  tmpvar_38 = texture2D (unity_NHxRoughness, tmpvar_37);
  mediump vec3 tmpvar_39;
  tmpvar_39 = (((
    ((tmpvar_12 + ((tmpvar_38.w * 16.0) * tmpvar_11.xyz)) * (tmpvar_14 * atten_2))
   * 
    clamp (dot (n_10, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_19)
   * tmpvar_12)) + (tmpvar_24 * mix (tmpvar_11.xyz, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_13)), 0.0, 1.0)
  ), tmpvar_36.yyy)));
  mediump vec4 tmpvar_40;
  tmpvar_40.w = 1.0;
  tmpvar_40.xyz = tmpvar_39;
  c_1.w = tmpvar_40.w;
  c_1.xyz = tmpvar_39;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_41;
  xlat_varoutput_41.xyz = c_1.xyz;
  xlat_varoutput_41.w = 1.0;
  gl_FragData[0] = xlat_varoutput_41;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_NORMALMAP" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
out mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec4 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_5 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].x;
  v_30.y = tangentToWorld_5[1].x;
  v_30.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].y;
  v_31.y = tangentToWorld_5[1].y;
  v_31.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_5[0].z;
  v_32.y = tangentToWorld_5[1].z;
  v_32.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_32;
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_10 = tmpvar_33;
  highp vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = tmpvar_20;
  mediump vec4 normal_35;
  normal_35 = tmpvar_34;
  mediump vec3 x2_36;
  mediump vec3 x1_37;
  x1_37.x = dot (unity_SHAr, normal_35);
  x1_37.y = dot (unity_SHAg, normal_35);
  x1_37.z = dot (unity_SHAb, normal_35);
  mediump vec4 tmpvar_38;
  tmpvar_38 = (normal_35.xyzz * normal_35.yzzx);
  x2_36.x = dot (unity_SHBr, tmpvar_38);
  x2_36.y = dot (unity_SHBg, tmpvar_38);
  x2_36.z = dot (unity_SHBb, tmpvar_38);
  tmpvar_9.xyz = ((x2_36 + (unity_SHC.xyz * 
    ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
  )) + x1_37);
  highp vec3 lightColor0_39;
  lightColor0_39 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_40;
  lightColor1_40 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_41;
  lightColor2_41 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_42;
  lightColor3_42 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_43;
  lightAttenSq_43 = unity_4LightAtten0;
  highp vec4 tmpvar_44;
  tmpvar_44 = (unity_4LightPosX0 - tmpvar_11.x);
  highp vec4 tmpvar_45;
  tmpvar_45 = (unity_4LightPosY0 - tmpvar_11.y);
  highp vec4 tmpvar_46;
  tmpvar_46 = (unity_4LightPosZ0 - tmpvar_11.z);
  highp vec4 tmpvar_47;
  tmpvar_47 = (((tmpvar_44 * tmpvar_44) + (tmpvar_45 * tmpvar_45)) + (tmpvar_46 * tmpvar_46));
  highp vec4 tmpvar_48;
  tmpvar_48 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_44 * tmpvar_20.x) + (tmpvar_45 * tmpvar_20.y)) + (tmpvar_46 * tmpvar_20.z))
   * 
    inversesqrt(tmpvar_47)
  )) * (1.0/((1.0 + 
    (tmpvar_47 * lightAttenSq_43)
  ))));
  highp vec3 tmpvar_49;
  tmpvar_49 = (tmpvar_9.xyz + ((
    ((lightColor0_39 * tmpvar_48.x) + (lightColor1_40 * tmpvar_48.y))
   + 
    (lightColor2_41 * tmpvar_48.z)
  ) + (lightColor3_42 * tmpvar_48.w)));
  tmpvar_9.xyz = tmpvar_49;
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform mediump float _Glossiness;
uniform sampler2D _OcclusionMap;
uniform lowp sampler2DShadow _ShadowMapTexture;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
in mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = xlv_TEXCOORD2_1.xyz;
  tmpvar_5 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_3.x;
  tmpvar_6[0].y = tmpvar_4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = tmpvar_3.y;
  tmpvar_6[1].y = tmpvar_4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = tmpvar_3.z;
  tmpvar_6[2].y = tmpvar_4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  lowp vec4 cse_7;
  cse_7 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_9;
  packednormal_9 = tmpvar_8;
  mediump vec3 n_10;
  n_10 = (((packednormal_9.xyz * 2.0) - 1.0) * tmpvar_6);
  mediump vec4 tmpvar_11;
  tmpvar_11.xyz = _SpecColor.xyz;
  tmpvar_11.w = _Glossiness;
  mediump vec3 tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = (1.0 - tmpvar_11.x);
  tmpvar_12 = ((_Color.xyz * cse_7.xyz) * tmpvar_13);
  mediump vec3 tmpvar_14;
  lowp vec3 tmpvar_15;
  tmpvar_15 = _LightColor0.xyz;
  tmpvar_14 = tmpvar_15;
  lowp float shadow_16;
  mediump float tmpvar_17;
  tmpvar_17 = texture (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  lowp float tmpvar_18;
  tmpvar_18 = tmpvar_17;
  mediump float tmpvar_19;
  tmpvar_19 = (_LightShadowData.x + (tmpvar_18 * (1.0 - _LightShadowData.x)));
  shadow_16 = tmpvar_19;
  atten_2 = shadow_16;
  mediump float tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_20 = tmpvar_21.y;
  highp vec3 tmpvar_22;
  highp vec4 tmpvar_23;
  mediump vec3 cse_24;
  cse_24 = -(xlv_TEXCOORD1);
  tmpvar_22 = cse_24;
  tmpvar_23 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_25;
  mediump vec3 worldNormal_26;
  highp vec3 tmpvar_27;
  highp vec3 I_28;
  I_28 = -(tmpvar_22);
  tmpvar_27 = (I_28 - (2.0 * (
    dot (n_10, I_28)
   * n_10)));
  worldNormal_26 = tmpvar_27;
  mediump vec4 hdr_29;
  hdr_29 = tmpvar_23;
  highp float mip_30;
  mediump float tmpvar_31;
  mediump float cse_32;
  cse_32 = (1.0 - _Glossiness);
  tmpvar_31 = (cse_32 * 7.0);
  mip_30 = tmpvar_31;
  highp vec4 tmpvar_33;
  tmpvar_33.xyz = worldNormal_26;
  tmpvar_33.w = mip_30;
  lowp vec4 tmpvar_34;
  tmpvar_34 = texture (unity_SpecCube0, tmpvar_33.xyz, mip_30);
  mediump vec4 tmpvar_35;
  tmpvar_35 = tmpvar_34;
  tmpvar_25 = ((tmpvar_35.w * hdr_29.x) * tmpvar_35.xyz);
  tmpvar_25 = (tmpvar_25 * tmpvar_20);
  mediump vec2 tmpvar_36;
  tmpvar_36.x = dot ((cse_24 - (2.0 * 
    (dot (n_10, cse_24) * n_10)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_36.y = (1.0 - clamp (dot (n_10, cse_24), 0.0, 1.0));
  mediump vec2 tmpvar_37;
  tmpvar_37 = (((tmpvar_36 * tmpvar_36) * tmpvar_36) * tmpvar_36);
  mediump vec2 tmpvar_38;
  tmpvar_38.x = tmpvar_37.x;
  tmpvar_38.y = cse_32;
  lowp vec4 tmpvar_39;
  tmpvar_39 = texture (unity_NHxRoughness, tmpvar_38);
  mediump vec3 tmpvar_40;
  tmpvar_40 = (((
    ((tmpvar_12 + ((tmpvar_39.w * 16.0) * tmpvar_11.xyz)) * (tmpvar_14 * atten_2))
   * 
    clamp (dot (n_10, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_20)
   * tmpvar_12)) + (tmpvar_25 * mix (tmpvar_11.xyz, vec3(
    clamp ((_Glossiness + (1.0 - tmpvar_13)), 0.0, 1.0)
  ), tmpvar_37.yyy)));
  mediump vec4 tmpvar_41;
  tmpvar_41.w = 1.0;
  tmpvar_41.xyz = tmpvar_40;
  c_1.w = tmpvar_41.w;
  c_1.xyz = tmpvar_40;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_42;
  xlat_varoutput_42.xyz = c_1.xyz;
  xlat_varoutput_42.w = 1.0;
  _glesFragData[0] = xlat_varoutput_42;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_11;
  tmpvar_11 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_12;
  texcoord_12.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_13;
  if ((_UVSec == 0.0)) {
    tmpvar_13 = tmpvar_2;
  } else {
    tmpvar_13 = tmpvar_3;
  };
  texcoord_12.zw = ((tmpvar_13 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_14;
  n_14 = (tmpvar_10.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_15;
  norm_15 = tmpvar_1;
  highp vec4 v_16;
  v_16.x = _World2Object[0].x;
  v_16.y = _World2Object[1].x;
  v_16.z = _World2Object[2].x;
  v_16.w = _World2Object[3].x;
  highp vec4 v_17;
  v_17.x = _World2Object[0].y;
  v_17.y = _World2Object[1].y;
  v_17.z = _World2Object[2].y;
  v_17.w = _World2Object[3].y;
  highp vec4 v_18;
  v_18.x = _World2Object[0].z;
  v_18.y = _World2Object[1].z;
  v_18.z = _World2Object[2].z;
  v_18.w = _World2Object[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(((
    (v_16.xyz * norm_15.x)
   + 
    (v_17.xyz * norm_15.y)
  ) + (v_18.xyz * norm_15.z)));
  highp vec3 dir_20;
  dir_20 = tmpvar_4.xyz;
  highp mat3 tmpvar_21;
  tmpvar_21[0] = _Object2World[0].xyz;
  tmpvar_21[1] = _Object2World[1].xyz;
  tmpvar_21[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = normalize((tmpvar_21 * dir_20));
  tmpvar_22.w = tmpvar_4.w;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.www;
  mediump vec3 normal_24;
  normal_24 = tmpvar_19;
  mediump vec3 tangent_25;
  tangent_25 = tmpvar_22.xyz;
  mediump vec3 flip_26;
  flip_26 = tmpvar_23;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (((normal_24.yzx * tangent_25.zxy) - (normal_24.zxy * tangent_25.yzx)) * flip_26);
  mediump mat3 tmpvar_28;
  tmpvar_28[0].x = tangent_25.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = normal_24.x;
  tmpvar_28[1].x = tangent_25.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = normal_24.y;
  tmpvar_28[2].x = tangent_25.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = normal_24.z;
  tangentToWorld_5 = tmpvar_28;
  highp vec3 v_29;
  v_29.x = tangentToWorld_5[0].x;
  v_29.y = tangentToWorld_5[1].x;
  v_29.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].y;
  v_30.y = tangentToWorld_5[1].y;
  v_30.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].z;
  v_31.y = tangentToWorld_5[1].z;
  v_31.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_31;
  highp vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = tmpvar_19;
  mediump vec4 normal_33;
  normal_33 = tmpvar_32;
  mediump vec3 x2_34;
  mediump vec3 x1_35;
  x1_35.x = dot (unity_SHAr, normal_33);
  x1_35.y = dot (unity_SHAg, normal_33);
  x1_35.z = dot (unity_SHAb, normal_33);
  mediump vec4 tmpvar_36;
  tmpvar_36 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_36);
  x2_34.y = dot (unity_SHBg, tmpvar_36);
  x2_34.z = dot (unity_SHBb, tmpvar_36);
  tmpvar_9.xyz = ((x2_34 + (unity_SHC.xyz * 
    ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
  )) + x1_35);
  gl_Position = tmpvar_11;
  xlv_TEXCOORD0 = texcoord_12;
  xlv_TEXCOORD1 = normalize(n_14);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 c_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_2 = xlv_TEXCOORD2.xyz;
  tmpvar_3 = xlv_TEXCOORD2_1.xyz;
  tmpvar_4 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_5;
  tmpvar_5[0].x = tmpvar_2.x;
  tmpvar_5[0].y = tmpvar_3.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = tmpvar_2.y;
  tmpvar_5[1].y = tmpvar_3.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = tmpvar_2.z;
  tmpvar_5[2].y = tmpvar_3.z;
  tmpvar_5[2].z = tmpvar_4.z;
  lowp vec4 cse_6;
  cse_6 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_8;
  packednormal_8 = tmpvar_7;
  mediump vec3 n_9;
  n_9 = (((packednormal_8.xyz * 2.0) - 1.0) * tmpvar_5);
  mediump vec4 sg_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_10 = tmpvar_11;
  mediump vec3 tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = (1.0 - sg_10.x);
  tmpvar_12 = ((_Color.xyz * cse_6.xyz) * tmpvar_13);
  mediump vec3 tmpvar_14;
  lowp vec3 tmpvar_15;
  tmpvar_15 = _LightColor0.xyz;
  tmpvar_14 = tmpvar_15;
  mediump float tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_16 = tmpvar_17.y;
  highp vec3 tmpvar_18;
  highp vec4 tmpvar_19;
  mediump vec3 cse_20;
  cse_20 = -(xlv_TEXCOORD1);
  tmpvar_18 = cse_20;
  tmpvar_19 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_21;
  mediump vec3 worldNormal_22;
  highp vec3 tmpvar_23;
  highp vec3 I_24;
  I_24 = -(tmpvar_18);
  tmpvar_23 = (I_24 - (2.0 * (
    dot (n_9, I_24)
   * n_9)));
  worldNormal_22 = tmpvar_23;
  mediump vec4 hdr_25;
  hdr_25 = tmpvar_19;
  highp float mip_26;
  mediump float tmpvar_27;
  tmpvar_27 = ((1.0 - sg_10.w) * 7.0);
  mip_26 = tmpvar_27;
  highp vec4 tmpvar_28;
  tmpvar_28.xyz = worldNormal_22;
  tmpvar_28.w = mip_26;
  lowp vec4 tmpvar_29;
  tmpvar_29 = textureCube (unity_SpecCube0, tmpvar_28.xyz, mip_26);
  mediump vec4 tmpvar_30;
  tmpvar_30 = tmpvar_29;
  tmpvar_21 = ((tmpvar_30.w * hdr_25.x) * tmpvar_30.xyz);
  tmpvar_21 = (tmpvar_21 * tmpvar_16);
  mediump vec2 tmpvar_31;
  tmpvar_31.x = dot ((cse_20 - (2.0 * 
    (dot (n_9, cse_20) * n_9)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_31.y = (1.0 - clamp (dot (n_9, cse_20), 0.0, 1.0));
  mediump vec2 tmpvar_32;
  tmpvar_32 = (((tmpvar_31 * tmpvar_31) * tmpvar_31) * tmpvar_31);
  mediump vec2 tmpvar_33;
  tmpvar_33.x = tmpvar_32.x;
  tmpvar_33.y = (1.0 - sg_10.w);
  lowp vec4 tmpvar_34;
  tmpvar_34 = texture2D (unity_NHxRoughness, tmpvar_33);
  mediump vec3 tmpvar_35;
  tmpvar_35 = (((
    ((tmpvar_12 + ((tmpvar_34.w * 16.0) * sg_10.xyz)) * tmpvar_14)
   * 
    clamp (dot (n_9, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_16)
   * tmpvar_12)) + (tmpvar_21 * mix (sg_10.xyz, vec3(
    clamp ((sg_10.w + (1.0 - tmpvar_13)), 0.0, 1.0)
  ), tmpvar_32.yyy)));
  mediump vec4 tmpvar_36;
  tmpvar_36.w = 1.0;
  tmpvar_36.xyz = tmpvar_35;
  c_1.w = tmpvar_36.w;
  c_1.xyz = tmpvar_35;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_37;
  xlat_varoutput_37.xyz = c_1.xyz;
  xlat_varoutput_37.w = 1.0;
  gl_FragData[0] = xlat_varoutput_37;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_11;
  tmpvar_11 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_12;
  texcoord_12.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_13;
  if ((_UVSec == 0.0)) {
    tmpvar_13 = tmpvar_2;
  } else {
    tmpvar_13 = tmpvar_3;
  };
  texcoord_12.zw = ((tmpvar_13 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_14;
  n_14 = (tmpvar_10.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_15;
  norm_15 = tmpvar_1;
  highp vec4 v_16;
  v_16.x = _World2Object[0].x;
  v_16.y = _World2Object[1].x;
  v_16.z = _World2Object[2].x;
  v_16.w = _World2Object[3].x;
  highp vec4 v_17;
  v_17.x = _World2Object[0].y;
  v_17.y = _World2Object[1].y;
  v_17.z = _World2Object[2].y;
  v_17.w = _World2Object[3].y;
  highp vec4 v_18;
  v_18.x = _World2Object[0].z;
  v_18.y = _World2Object[1].z;
  v_18.z = _World2Object[2].z;
  v_18.w = _World2Object[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(((
    (v_16.xyz * norm_15.x)
   + 
    (v_17.xyz * norm_15.y)
  ) + (v_18.xyz * norm_15.z)));
  highp vec3 dir_20;
  dir_20 = tmpvar_4.xyz;
  highp mat3 tmpvar_21;
  tmpvar_21[0] = _Object2World[0].xyz;
  tmpvar_21[1] = _Object2World[1].xyz;
  tmpvar_21[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = normalize((tmpvar_21 * dir_20));
  tmpvar_22.w = tmpvar_4.w;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.www;
  mediump vec3 normal_24;
  normal_24 = tmpvar_19;
  mediump vec3 tangent_25;
  tangent_25 = tmpvar_22.xyz;
  mediump vec3 flip_26;
  flip_26 = tmpvar_23;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (((normal_24.yzx * tangent_25.zxy) - (normal_24.zxy * tangent_25.yzx)) * flip_26);
  mediump mat3 tmpvar_28;
  tmpvar_28[0].x = tangent_25.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = normal_24.x;
  tmpvar_28[1].x = tangent_25.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = normal_24.y;
  tmpvar_28[2].x = tangent_25.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = normal_24.z;
  tangentToWorld_5 = tmpvar_28;
  highp vec3 v_29;
  v_29.x = tangentToWorld_5[0].x;
  v_29.y = tangentToWorld_5[1].x;
  v_29.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].y;
  v_30.y = tangentToWorld_5[1].y;
  v_30.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].z;
  v_31.y = tangentToWorld_5[1].z;
  v_31.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_31;
  highp vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = tmpvar_19;
  mediump vec4 normal_33;
  normal_33 = tmpvar_32;
  mediump vec3 x2_34;
  mediump vec3 x1_35;
  x1_35.x = dot (unity_SHAr, normal_33);
  x1_35.y = dot (unity_SHAg, normal_33);
  x1_35.z = dot (unity_SHAb, normal_33);
  mediump vec4 tmpvar_36;
  tmpvar_36 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_36);
  x2_34.y = dot (unity_SHBg, tmpvar_36);
  x2_34.z = dot (unity_SHBb, tmpvar_36);
  tmpvar_9.xyz = ((x2_34 + (unity_SHC.xyz * 
    ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
  )) + x1_35);
  gl_Position = tmpvar_11;
  xlv_TEXCOORD0 = texcoord_12;
  xlv_TEXCOORD1 = normalize(n_14);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 c_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_2 = xlv_TEXCOORD2.xyz;
  tmpvar_3 = xlv_TEXCOORD2_1.xyz;
  tmpvar_4 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_5;
  tmpvar_5[0].x = tmpvar_2.x;
  tmpvar_5[0].y = tmpvar_3.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = tmpvar_2.y;
  tmpvar_5[1].y = tmpvar_3.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = tmpvar_2.z;
  tmpvar_5[2].y = tmpvar_3.z;
  tmpvar_5[2].z = tmpvar_4.z;
  lowp vec4 cse_6;
  cse_6 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_8;
  packednormal_8 = tmpvar_7;
  mediump vec3 n_9;
  n_9 = (((packednormal_8.xyz * 2.0) - 1.0) * tmpvar_5);
  mediump vec4 sg_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_10 = tmpvar_11;
  mediump vec3 tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = (1.0 - sg_10.x);
  tmpvar_12 = ((_Color.xyz * cse_6.xyz) * tmpvar_13);
  mediump vec3 tmpvar_14;
  lowp vec3 tmpvar_15;
  tmpvar_15 = _LightColor0.xyz;
  tmpvar_14 = tmpvar_15;
  mediump float tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_16 = tmpvar_17.y;
  highp vec3 tmpvar_18;
  highp vec4 tmpvar_19;
  mediump vec3 cse_20;
  cse_20 = -(xlv_TEXCOORD1);
  tmpvar_18 = cse_20;
  tmpvar_19 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_21;
  mediump vec3 worldNormal_22;
  highp vec3 tmpvar_23;
  highp vec3 I_24;
  I_24 = -(tmpvar_18);
  tmpvar_23 = (I_24 - (2.0 * (
    dot (n_9, I_24)
   * n_9)));
  worldNormal_22 = tmpvar_23;
  mediump vec4 hdr_25;
  hdr_25 = tmpvar_19;
  highp float mip_26;
  mediump float tmpvar_27;
  tmpvar_27 = ((1.0 - sg_10.w) * 7.0);
  mip_26 = tmpvar_27;
  highp vec4 tmpvar_28;
  tmpvar_28.xyz = worldNormal_22;
  tmpvar_28.w = mip_26;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture (unity_SpecCube0, tmpvar_28.xyz, mip_26);
  mediump vec4 tmpvar_30;
  tmpvar_30 = tmpvar_29;
  tmpvar_21 = ((tmpvar_30.w * hdr_25.x) * tmpvar_30.xyz);
  tmpvar_21 = (tmpvar_21 * tmpvar_16);
  mediump vec2 tmpvar_31;
  tmpvar_31.x = dot ((cse_20 - (2.0 * 
    (dot (n_9, cse_20) * n_9)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_31.y = (1.0 - clamp (dot (n_9, cse_20), 0.0, 1.0));
  mediump vec2 tmpvar_32;
  tmpvar_32 = (((tmpvar_31 * tmpvar_31) * tmpvar_31) * tmpvar_31);
  mediump vec2 tmpvar_33;
  tmpvar_33.x = tmpvar_32.x;
  tmpvar_33.y = (1.0 - sg_10.w);
  lowp vec4 tmpvar_34;
  tmpvar_34 = texture (unity_NHxRoughness, tmpvar_33);
  mediump vec3 tmpvar_35;
  tmpvar_35 = (((
    ((tmpvar_12 + ((tmpvar_34.w * 16.0) * sg_10.xyz)) * tmpvar_14)
   * 
    clamp (dot (n_9, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_16)
   * tmpvar_12)) + (tmpvar_21 * mix (sg_10.xyz, vec3(
    clamp ((sg_10.w + (1.0 - tmpvar_13)), 0.0, 1.0)
  ), tmpvar_32.yyy)));
  mediump vec4 tmpvar_36;
  tmpvar_36.w = 1.0;
  tmpvar_36.xyz = tmpvar_35;
  c_1.w = tmpvar_36.w;
  c_1.xyz = tmpvar_35;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_37;
  xlat_varoutput_37.xyz = c_1.xyz;
  xlat_varoutput_37.w = 1.0;
  _glesFragData[0] = xlat_varoutput_37;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec4 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_5 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].x;
  v_30.y = tangentToWorld_5[1].x;
  v_30.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].y;
  v_31.y = tangentToWorld_5[1].y;
  v_31.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_5[0].z;
  v_32.y = tangentToWorld_5[1].z;
  v_32.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_32;
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_10 = tmpvar_33;
  highp vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = tmpvar_20;
  mediump vec4 normal_35;
  normal_35 = tmpvar_34;
  mediump vec3 x2_36;
  mediump vec3 x1_37;
  x1_37.x = dot (unity_SHAr, normal_35);
  x1_37.y = dot (unity_SHAg, normal_35);
  x1_37.z = dot (unity_SHAb, normal_35);
  mediump vec4 tmpvar_38;
  tmpvar_38 = (normal_35.xyzz * normal_35.yzzx);
  x2_36.x = dot (unity_SHBr, tmpvar_38);
  x2_36.y = dot (unity_SHBg, tmpvar_38);
  x2_36.z = dot (unity_SHBb, tmpvar_38);
  tmpvar_9.xyz = ((x2_36 + (unity_SHC.xyz * 
    ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
  )) + x1_37);
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform sampler2D _ShadowMapTexture;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = xlv_TEXCOORD2_1.xyz;
  tmpvar_5 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_3.x;
  tmpvar_6[0].y = tmpvar_4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = tmpvar_3.y;
  tmpvar_6[1].y = tmpvar_4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = tmpvar_3.z;
  tmpvar_6[2].y = tmpvar_4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  lowp vec4 cse_7;
  cse_7 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_9;
  packednormal_9 = tmpvar_8;
  mediump vec3 n_10;
  n_10 = (((packednormal_9.xyz * 2.0) - 1.0) * tmpvar_6);
  mediump vec4 sg_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_11 = tmpvar_12;
  mediump vec3 tmpvar_13;
  mediump float tmpvar_14;
  tmpvar_14 = (1.0 - sg_11.x);
  tmpvar_13 = ((_Color.xyz * cse_7.xyz) * tmpvar_14);
  mediump vec3 tmpvar_15;
  lowp vec3 tmpvar_16;
  tmpvar_16 = _LightColor0.xyz;
  tmpvar_15 = tmpvar_16;
  lowp float tmpvar_17;
  mediump float dist_18;
  lowp float tmpvar_19;
  tmpvar_19 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_18 = tmpvar_19;
  mediump float tmpvar_20;
  tmpvar_20 = max (float((dist_18 > 
    (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w)
  )), _LightShadowData.x);
  tmpvar_17 = tmpvar_20;
  atten_2 = tmpvar_17;
  mediump float tmpvar_21;
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_21 = tmpvar_22.y;
  highp vec3 tmpvar_23;
  highp vec4 tmpvar_24;
  mediump vec3 cse_25;
  cse_25 = -(xlv_TEXCOORD1);
  tmpvar_23 = cse_25;
  tmpvar_24 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_26;
  mediump vec3 worldNormal_27;
  highp vec3 tmpvar_28;
  highp vec3 I_29;
  I_29 = -(tmpvar_23);
  tmpvar_28 = (I_29 - (2.0 * (
    dot (n_10, I_29)
   * n_10)));
  worldNormal_27 = tmpvar_28;
  mediump vec4 hdr_30;
  hdr_30 = tmpvar_24;
  highp float mip_31;
  mediump float tmpvar_32;
  tmpvar_32 = ((1.0 - sg_11.w) * 7.0);
  mip_31 = tmpvar_32;
  highp vec4 tmpvar_33;
  tmpvar_33.xyz = worldNormal_27;
  tmpvar_33.w = mip_31;
  lowp vec4 tmpvar_34;
  tmpvar_34 = textureCube (unity_SpecCube0, tmpvar_33.xyz, mip_31);
  mediump vec4 tmpvar_35;
  tmpvar_35 = tmpvar_34;
  tmpvar_26 = ((tmpvar_35.w * hdr_30.x) * tmpvar_35.xyz);
  tmpvar_26 = (tmpvar_26 * tmpvar_21);
  mediump vec2 tmpvar_36;
  tmpvar_36.x = dot ((cse_25 - (2.0 * 
    (dot (n_10, cse_25) * n_10)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_36.y = (1.0 - clamp (dot (n_10, cse_25), 0.0, 1.0));
  mediump vec2 tmpvar_37;
  tmpvar_37 = (((tmpvar_36 * tmpvar_36) * tmpvar_36) * tmpvar_36);
  mediump vec2 tmpvar_38;
  tmpvar_38.x = tmpvar_37.x;
  tmpvar_38.y = (1.0 - sg_11.w);
  lowp vec4 tmpvar_39;
  tmpvar_39 = texture2D (unity_NHxRoughness, tmpvar_38);
  mediump vec3 tmpvar_40;
  tmpvar_40 = (((
    ((tmpvar_13 + ((tmpvar_39.w * 16.0) * sg_11.xyz)) * (tmpvar_15 * atten_2))
   * 
    clamp (dot (n_10, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_21)
   * tmpvar_13)) + (tmpvar_26 * mix (sg_11.xyz, vec3(
    clamp ((sg_11.w + (1.0 - tmpvar_14)), 0.0, 1.0)
  ), tmpvar_37.yyy)));
  mediump vec4 tmpvar_41;
  tmpvar_41.w = 1.0;
  tmpvar_41.xyz = tmpvar_40;
  c_1.w = tmpvar_41.w;
  c_1.xyz = tmpvar_40;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_42;
  xlat_varoutput_42.xyz = c_1.xyz;
  xlat_varoutput_42.w = 1.0;
  gl_FragData[0] = xlat_varoutput_42;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_11;
  tmpvar_11 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_12;
  texcoord_12.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_13;
  if ((_UVSec == 0.0)) {
    tmpvar_13 = tmpvar_2;
  } else {
    tmpvar_13 = tmpvar_3;
  };
  texcoord_12.zw = ((tmpvar_13 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_14;
  n_14 = (tmpvar_10.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_15;
  norm_15 = tmpvar_1;
  highp vec4 v_16;
  v_16.x = _World2Object[0].x;
  v_16.y = _World2Object[1].x;
  v_16.z = _World2Object[2].x;
  v_16.w = _World2Object[3].x;
  highp vec4 v_17;
  v_17.x = _World2Object[0].y;
  v_17.y = _World2Object[1].y;
  v_17.z = _World2Object[2].y;
  v_17.w = _World2Object[3].y;
  highp vec4 v_18;
  v_18.x = _World2Object[0].z;
  v_18.y = _World2Object[1].z;
  v_18.z = _World2Object[2].z;
  v_18.w = _World2Object[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(((
    (v_16.xyz * norm_15.x)
   + 
    (v_17.xyz * norm_15.y)
  ) + (v_18.xyz * norm_15.z)));
  highp vec3 dir_20;
  dir_20 = tmpvar_4.xyz;
  highp mat3 tmpvar_21;
  tmpvar_21[0] = _Object2World[0].xyz;
  tmpvar_21[1] = _Object2World[1].xyz;
  tmpvar_21[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = normalize((tmpvar_21 * dir_20));
  tmpvar_22.w = tmpvar_4.w;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.www;
  mediump vec3 normal_24;
  normal_24 = tmpvar_19;
  mediump vec3 tangent_25;
  tangent_25 = tmpvar_22.xyz;
  mediump vec3 flip_26;
  flip_26 = tmpvar_23;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (((normal_24.yzx * tangent_25.zxy) - (normal_24.zxy * tangent_25.yzx)) * flip_26);
  mediump mat3 tmpvar_28;
  tmpvar_28[0].x = tangent_25.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = normal_24.x;
  tmpvar_28[1].x = tangent_25.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = normal_24.y;
  tmpvar_28[2].x = tangent_25.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = normal_24.z;
  tangentToWorld_5 = tmpvar_28;
  highp vec3 v_29;
  v_29.x = tangentToWorld_5[0].x;
  v_29.y = tangentToWorld_5[1].x;
  v_29.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].y;
  v_30.y = tangentToWorld_5[1].y;
  v_30.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].z;
  v_31.y = tangentToWorld_5[1].z;
  v_31.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_31;
  highp vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = tmpvar_19;
  mediump vec4 normal_33;
  normal_33 = tmpvar_32;
  mediump vec3 x2_34;
  mediump vec3 x1_35;
  x1_35.x = dot (unity_SHAr, normal_33);
  x1_35.y = dot (unity_SHAg, normal_33);
  x1_35.z = dot (unity_SHAb, normal_33);
  mediump vec4 tmpvar_36;
  tmpvar_36 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_36);
  x2_34.y = dot (unity_SHBg, tmpvar_36);
  x2_34.z = dot (unity_SHBb, tmpvar_36);
  tmpvar_9.xyz = ((x2_34 + (unity_SHC.xyz * 
    ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
  )) + x1_35);
  highp vec3 lightColor0_37;
  lightColor0_37 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_38;
  lightColor1_38 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_39;
  lightColor2_39 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_40;
  lightColor3_40 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_41;
  lightAttenSq_41 = unity_4LightAtten0;
  highp vec4 tmpvar_42;
  tmpvar_42 = (unity_4LightPosX0 - tmpvar_10.x);
  highp vec4 tmpvar_43;
  tmpvar_43 = (unity_4LightPosY0 - tmpvar_10.y);
  highp vec4 tmpvar_44;
  tmpvar_44 = (unity_4LightPosZ0 - tmpvar_10.z);
  highp vec4 tmpvar_45;
  tmpvar_45 = (((tmpvar_42 * tmpvar_42) + (tmpvar_43 * tmpvar_43)) + (tmpvar_44 * tmpvar_44));
  highp vec4 tmpvar_46;
  tmpvar_46 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_42 * tmpvar_19.x) + (tmpvar_43 * tmpvar_19.y)) + (tmpvar_44 * tmpvar_19.z))
   * 
    inversesqrt(tmpvar_45)
  )) * (1.0/((1.0 + 
    (tmpvar_45 * lightAttenSq_41)
  ))));
  highp vec3 tmpvar_47;
  tmpvar_47 = (tmpvar_9.xyz + ((
    ((lightColor0_37 * tmpvar_46.x) + (lightColor1_38 * tmpvar_46.y))
   + 
    (lightColor2_39 * tmpvar_46.z)
  ) + (lightColor3_40 * tmpvar_46.w)));
  tmpvar_9.xyz = tmpvar_47;
  gl_Position = tmpvar_11;
  xlv_TEXCOORD0 = texcoord_12;
  xlv_TEXCOORD1 = normalize(n_14);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 c_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_2 = xlv_TEXCOORD2.xyz;
  tmpvar_3 = xlv_TEXCOORD2_1.xyz;
  tmpvar_4 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_5;
  tmpvar_5[0].x = tmpvar_2.x;
  tmpvar_5[0].y = tmpvar_3.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = tmpvar_2.y;
  tmpvar_5[1].y = tmpvar_3.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = tmpvar_2.z;
  tmpvar_5[2].y = tmpvar_3.z;
  tmpvar_5[2].z = tmpvar_4.z;
  lowp vec4 cse_6;
  cse_6 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_8;
  packednormal_8 = tmpvar_7;
  mediump vec3 n_9;
  n_9 = (((packednormal_8.xyz * 2.0) - 1.0) * tmpvar_5);
  mediump vec4 sg_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_10 = tmpvar_11;
  mediump vec3 tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = (1.0 - sg_10.x);
  tmpvar_12 = ((_Color.xyz * cse_6.xyz) * tmpvar_13);
  mediump vec3 tmpvar_14;
  lowp vec3 tmpvar_15;
  tmpvar_15 = _LightColor0.xyz;
  tmpvar_14 = tmpvar_15;
  mediump float tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_16 = tmpvar_17.y;
  highp vec3 tmpvar_18;
  highp vec4 tmpvar_19;
  mediump vec3 cse_20;
  cse_20 = -(xlv_TEXCOORD1);
  tmpvar_18 = cse_20;
  tmpvar_19 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_21;
  mediump vec3 worldNormal_22;
  highp vec3 tmpvar_23;
  highp vec3 I_24;
  I_24 = -(tmpvar_18);
  tmpvar_23 = (I_24 - (2.0 * (
    dot (n_9, I_24)
   * n_9)));
  worldNormal_22 = tmpvar_23;
  mediump vec4 hdr_25;
  hdr_25 = tmpvar_19;
  highp float mip_26;
  mediump float tmpvar_27;
  tmpvar_27 = ((1.0 - sg_10.w) * 7.0);
  mip_26 = tmpvar_27;
  highp vec4 tmpvar_28;
  tmpvar_28.xyz = worldNormal_22;
  tmpvar_28.w = mip_26;
  lowp vec4 tmpvar_29;
  tmpvar_29 = textureCube (unity_SpecCube0, tmpvar_28.xyz, mip_26);
  mediump vec4 tmpvar_30;
  tmpvar_30 = tmpvar_29;
  tmpvar_21 = ((tmpvar_30.w * hdr_25.x) * tmpvar_30.xyz);
  tmpvar_21 = (tmpvar_21 * tmpvar_16);
  mediump vec2 tmpvar_31;
  tmpvar_31.x = dot ((cse_20 - (2.0 * 
    (dot (n_9, cse_20) * n_9)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_31.y = (1.0 - clamp (dot (n_9, cse_20), 0.0, 1.0));
  mediump vec2 tmpvar_32;
  tmpvar_32 = (((tmpvar_31 * tmpvar_31) * tmpvar_31) * tmpvar_31);
  mediump vec2 tmpvar_33;
  tmpvar_33.x = tmpvar_32.x;
  tmpvar_33.y = (1.0 - sg_10.w);
  lowp vec4 tmpvar_34;
  tmpvar_34 = texture2D (unity_NHxRoughness, tmpvar_33);
  mediump vec3 tmpvar_35;
  tmpvar_35 = (((
    ((tmpvar_12 + ((tmpvar_34.w * 16.0) * sg_10.xyz)) * tmpvar_14)
   * 
    clamp (dot (n_9, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_16)
   * tmpvar_12)) + (tmpvar_21 * mix (sg_10.xyz, vec3(
    clamp ((sg_10.w + (1.0 - tmpvar_13)), 0.0, 1.0)
  ), tmpvar_32.yyy)));
  mediump vec4 tmpvar_36;
  tmpvar_36.w = 1.0;
  tmpvar_36.xyz = tmpvar_35;
  c_1.w = tmpvar_36.w;
  c_1.xyz = tmpvar_35;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_37;
  xlat_varoutput_37.xyz = c_1.xyz;
  xlat_varoutput_37.w = 1.0;
  gl_FragData[0] = xlat_varoutput_37;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_11;
  tmpvar_11 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_12;
  texcoord_12.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_13;
  if ((_UVSec == 0.0)) {
    tmpvar_13 = tmpvar_2;
  } else {
    tmpvar_13 = tmpvar_3;
  };
  texcoord_12.zw = ((tmpvar_13 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_14;
  n_14 = (tmpvar_10.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_15;
  norm_15 = tmpvar_1;
  highp vec4 v_16;
  v_16.x = _World2Object[0].x;
  v_16.y = _World2Object[1].x;
  v_16.z = _World2Object[2].x;
  v_16.w = _World2Object[3].x;
  highp vec4 v_17;
  v_17.x = _World2Object[0].y;
  v_17.y = _World2Object[1].y;
  v_17.z = _World2Object[2].y;
  v_17.w = _World2Object[3].y;
  highp vec4 v_18;
  v_18.x = _World2Object[0].z;
  v_18.y = _World2Object[1].z;
  v_18.z = _World2Object[2].z;
  v_18.w = _World2Object[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(((
    (v_16.xyz * norm_15.x)
   + 
    (v_17.xyz * norm_15.y)
  ) + (v_18.xyz * norm_15.z)));
  highp vec3 dir_20;
  dir_20 = tmpvar_4.xyz;
  highp mat3 tmpvar_21;
  tmpvar_21[0] = _Object2World[0].xyz;
  tmpvar_21[1] = _Object2World[1].xyz;
  tmpvar_21[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = normalize((tmpvar_21 * dir_20));
  tmpvar_22.w = tmpvar_4.w;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.www;
  mediump vec3 normal_24;
  normal_24 = tmpvar_19;
  mediump vec3 tangent_25;
  tangent_25 = tmpvar_22.xyz;
  mediump vec3 flip_26;
  flip_26 = tmpvar_23;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (((normal_24.yzx * tangent_25.zxy) - (normal_24.zxy * tangent_25.yzx)) * flip_26);
  mediump mat3 tmpvar_28;
  tmpvar_28[0].x = tangent_25.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = normal_24.x;
  tmpvar_28[1].x = tangent_25.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = normal_24.y;
  tmpvar_28[2].x = tangent_25.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = normal_24.z;
  tangentToWorld_5 = tmpvar_28;
  highp vec3 v_29;
  v_29.x = tangentToWorld_5[0].x;
  v_29.y = tangentToWorld_5[1].x;
  v_29.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].y;
  v_30.y = tangentToWorld_5[1].y;
  v_30.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].z;
  v_31.y = tangentToWorld_5[1].z;
  v_31.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_31;
  highp vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = tmpvar_19;
  mediump vec4 normal_33;
  normal_33 = tmpvar_32;
  mediump vec3 x2_34;
  mediump vec3 x1_35;
  x1_35.x = dot (unity_SHAr, normal_33);
  x1_35.y = dot (unity_SHAg, normal_33);
  x1_35.z = dot (unity_SHAb, normal_33);
  mediump vec4 tmpvar_36;
  tmpvar_36 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_36);
  x2_34.y = dot (unity_SHBg, tmpvar_36);
  x2_34.z = dot (unity_SHBb, tmpvar_36);
  tmpvar_9.xyz = ((x2_34 + (unity_SHC.xyz * 
    ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
  )) + x1_35);
  highp vec3 lightColor0_37;
  lightColor0_37 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_38;
  lightColor1_38 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_39;
  lightColor2_39 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_40;
  lightColor3_40 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_41;
  lightAttenSq_41 = unity_4LightAtten0;
  highp vec4 tmpvar_42;
  tmpvar_42 = (unity_4LightPosX0 - tmpvar_10.x);
  highp vec4 tmpvar_43;
  tmpvar_43 = (unity_4LightPosY0 - tmpvar_10.y);
  highp vec4 tmpvar_44;
  tmpvar_44 = (unity_4LightPosZ0 - tmpvar_10.z);
  highp vec4 tmpvar_45;
  tmpvar_45 = (((tmpvar_42 * tmpvar_42) + (tmpvar_43 * tmpvar_43)) + (tmpvar_44 * tmpvar_44));
  highp vec4 tmpvar_46;
  tmpvar_46 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_42 * tmpvar_19.x) + (tmpvar_43 * tmpvar_19.y)) + (tmpvar_44 * tmpvar_19.z))
   * 
    inversesqrt(tmpvar_45)
  )) * (1.0/((1.0 + 
    (tmpvar_45 * lightAttenSq_41)
  ))));
  highp vec3 tmpvar_47;
  tmpvar_47 = (tmpvar_9.xyz + ((
    ((lightColor0_37 * tmpvar_46.x) + (lightColor1_38 * tmpvar_46.y))
   + 
    (lightColor2_39 * tmpvar_46.z)
  ) + (lightColor3_40 * tmpvar_46.w)));
  tmpvar_9.xyz = tmpvar_47;
  gl_Position = tmpvar_11;
  xlv_TEXCOORD0 = texcoord_12;
  xlv_TEXCOORD1 = normalize(n_14);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 c_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_2 = xlv_TEXCOORD2.xyz;
  tmpvar_3 = xlv_TEXCOORD2_1.xyz;
  tmpvar_4 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_5;
  tmpvar_5[0].x = tmpvar_2.x;
  tmpvar_5[0].y = tmpvar_3.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = tmpvar_2.y;
  tmpvar_5[1].y = tmpvar_3.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = tmpvar_2.z;
  tmpvar_5[2].y = tmpvar_3.z;
  tmpvar_5[2].z = tmpvar_4.z;
  lowp vec4 cse_6;
  cse_6 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_8;
  packednormal_8 = tmpvar_7;
  mediump vec3 n_9;
  n_9 = (((packednormal_8.xyz * 2.0) - 1.0) * tmpvar_5);
  mediump vec4 sg_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_10 = tmpvar_11;
  mediump vec3 tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = (1.0 - sg_10.x);
  tmpvar_12 = ((_Color.xyz * cse_6.xyz) * tmpvar_13);
  mediump vec3 tmpvar_14;
  lowp vec3 tmpvar_15;
  tmpvar_15 = _LightColor0.xyz;
  tmpvar_14 = tmpvar_15;
  mediump float tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_16 = tmpvar_17.y;
  highp vec3 tmpvar_18;
  highp vec4 tmpvar_19;
  mediump vec3 cse_20;
  cse_20 = -(xlv_TEXCOORD1);
  tmpvar_18 = cse_20;
  tmpvar_19 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_21;
  mediump vec3 worldNormal_22;
  highp vec3 tmpvar_23;
  highp vec3 I_24;
  I_24 = -(tmpvar_18);
  tmpvar_23 = (I_24 - (2.0 * (
    dot (n_9, I_24)
   * n_9)));
  worldNormal_22 = tmpvar_23;
  mediump vec4 hdr_25;
  hdr_25 = tmpvar_19;
  highp float mip_26;
  mediump float tmpvar_27;
  tmpvar_27 = ((1.0 - sg_10.w) * 7.0);
  mip_26 = tmpvar_27;
  highp vec4 tmpvar_28;
  tmpvar_28.xyz = worldNormal_22;
  tmpvar_28.w = mip_26;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture (unity_SpecCube0, tmpvar_28.xyz, mip_26);
  mediump vec4 tmpvar_30;
  tmpvar_30 = tmpvar_29;
  tmpvar_21 = ((tmpvar_30.w * hdr_25.x) * tmpvar_30.xyz);
  tmpvar_21 = (tmpvar_21 * tmpvar_16);
  mediump vec2 tmpvar_31;
  tmpvar_31.x = dot ((cse_20 - (2.0 * 
    (dot (n_9, cse_20) * n_9)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_31.y = (1.0 - clamp (dot (n_9, cse_20), 0.0, 1.0));
  mediump vec2 tmpvar_32;
  tmpvar_32 = (((tmpvar_31 * tmpvar_31) * tmpvar_31) * tmpvar_31);
  mediump vec2 tmpvar_33;
  tmpvar_33.x = tmpvar_32.x;
  tmpvar_33.y = (1.0 - sg_10.w);
  lowp vec4 tmpvar_34;
  tmpvar_34 = texture (unity_NHxRoughness, tmpvar_33);
  mediump vec3 tmpvar_35;
  tmpvar_35 = (((
    ((tmpvar_12 + ((tmpvar_34.w * 16.0) * sg_10.xyz)) * tmpvar_14)
   * 
    clamp (dot (n_9, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_16)
   * tmpvar_12)) + (tmpvar_21 * mix (sg_10.xyz, vec3(
    clamp ((sg_10.w + (1.0 - tmpvar_13)), 0.0, 1.0)
  ), tmpvar_32.yyy)));
  mediump vec4 tmpvar_36;
  tmpvar_36.w = 1.0;
  tmpvar_36.xyz = tmpvar_35;
  c_1.w = tmpvar_36.w;
  c_1.xyz = tmpvar_35;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_37;
  xlat_varoutput_37.xyz = c_1.xyz;
  xlat_varoutput_37.w = 1.0;
  _glesFragData[0] = xlat_varoutput_37;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec4 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_5 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].x;
  v_30.y = tangentToWorld_5[1].x;
  v_30.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].y;
  v_31.y = tangentToWorld_5[1].y;
  v_31.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_5[0].z;
  v_32.y = tangentToWorld_5[1].z;
  v_32.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_32;
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_10 = tmpvar_33;
  highp vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = tmpvar_20;
  mediump vec4 normal_35;
  normal_35 = tmpvar_34;
  mediump vec3 x2_36;
  mediump vec3 x1_37;
  x1_37.x = dot (unity_SHAr, normal_35);
  x1_37.y = dot (unity_SHAg, normal_35);
  x1_37.z = dot (unity_SHAb, normal_35);
  mediump vec4 tmpvar_38;
  tmpvar_38 = (normal_35.xyzz * normal_35.yzzx);
  x2_36.x = dot (unity_SHBr, tmpvar_38);
  x2_36.y = dot (unity_SHBg, tmpvar_38);
  x2_36.z = dot (unity_SHBb, tmpvar_38);
  tmpvar_9.xyz = ((x2_36 + (unity_SHC.xyz * 
    ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
  )) + x1_37);
  highp vec3 lightColor0_39;
  lightColor0_39 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_40;
  lightColor1_40 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_41;
  lightColor2_41 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_42;
  lightColor3_42 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_43;
  lightAttenSq_43 = unity_4LightAtten0;
  highp vec4 tmpvar_44;
  tmpvar_44 = (unity_4LightPosX0 - tmpvar_11.x);
  highp vec4 tmpvar_45;
  tmpvar_45 = (unity_4LightPosY0 - tmpvar_11.y);
  highp vec4 tmpvar_46;
  tmpvar_46 = (unity_4LightPosZ0 - tmpvar_11.z);
  highp vec4 tmpvar_47;
  tmpvar_47 = (((tmpvar_44 * tmpvar_44) + (tmpvar_45 * tmpvar_45)) + (tmpvar_46 * tmpvar_46));
  highp vec4 tmpvar_48;
  tmpvar_48 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_44 * tmpvar_20.x) + (tmpvar_45 * tmpvar_20.y)) + (tmpvar_46 * tmpvar_20.z))
   * 
    inversesqrt(tmpvar_47)
  )) * (1.0/((1.0 + 
    (tmpvar_47 * lightAttenSq_43)
  ))));
  highp vec3 tmpvar_49;
  tmpvar_49 = (tmpvar_9.xyz + ((
    ((lightColor0_39 * tmpvar_48.x) + (lightColor1_40 * tmpvar_48.y))
   + 
    (lightColor2_41 * tmpvar_48.z)
  ) + (lightColor3_42 * tmpvar_48.w)));
  tmpvar_9.xyz = tmpvar_49;
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform sampler2D _ShadowMapTexture;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = xlv_TEXCOORD2_1.xyz;
  tmpvar_5 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_3.x;
  tmpvar_6[0].y = tmpvar_4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = tmpvar_3.y;
  tmpvar_6[1].y = tmpvar_4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = tmpvar_3.z;
  tmpvar_6[2].y = tmpvar_4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  lowp vec4 cse_7;
  cse_7 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_9;
  packednormal_9 = tmpvar_8;
  mediump vec3 n_10;
  n_10 = (((packednormal_9.xyz * 2.0) - 1.0) * tmpvar_6);
  mediump vec4 sg_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_11 = tmpvar_12;
  mediump vec3 tmpvar_13;
  mediump float tmpvar_14;
  tmpvar_14 = (1.0 - sg_11.x);
  tmpvar_13 = ((_Color.xyz * cse_7.xyz) * tmpvar_14);
  mediump vec3 tmpvar_15;
  lowp vec3 tmpvar_16;
  tmpvar_16 = _LightColor0.xyz;
  tmpvar_15 = tmpvar_16;
  lowp float tmpvar_17;
  mediump float dist_18;
  lowp float tmpvar_19;
  tmpvar_19 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_18 = tmpvar_19;
  mediump float tmpvar_20;
  tmpvar_20 = max (float((dist_18 > 
    (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w)
  )), _LightShadowData.x);
  tmpvar_17 = tmpvar_20;
  atten_2 = tmpvar_17;
  mediump float tmpvar_21;
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_21 = tmpvar_22.y;
  highp vec3 tmpvar_23;
  highp vec4 tmpvar_24;
  mediump vec3 cse_25;
  cse_25 = -(xlv_TEXCOORD1);
  tmpvar_23 = cse_25;
  tmpvar_24 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_26;
  mediump vec3 worldNormal_27;
  highp vec3 tmpvar_28;
  highp vec3 I_29;
  I_29 = -(tmpvar_23);
  tmpvar_28 = (I_29 - (2.0 * (
    dot (n_10, I_29)
   * n_10)));
  worldNormal_27 = tmpvar_28;
  mediump vec4 hdr_30;
  hdr_30 = tmpvar_24;
  highp float mip_31;
  mediump float tmpvar_32;
  tmpvar_32 = ((1.0 - sg_11.w) * 7.0);
  mip_31 = tmpvar_32;
  highp vec4 tmpvar_33;
  tmpvar_33.xyz = worldNormal_27;
  tmpvar_33.w = mip_31;
  lowp vec4 tmpvar_34;
  tmpvar_34 = textureCube (unity_SpecCube0, tmpvar_33.xyz, mip_31);
  mediump vec4 tmpvar_35;
  tmpvar_35 = tmpvar_34;
  tmpvar_26 = ((tmpvar_35.w * hdr_30.x) * tmpvar_35.xyz);
  tmpvar_26 = (tmpvar_26 * tmpvar_21);
  mediump vec2 tmpvar_36;
  tmpvar_36.x = dot ((cse_25 - (2.0 * 
    (dot (n_10, cse_25) * n_10)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_36.y = (1.0 - clamp (dot (n_10, cse_25), 0.0, 1.0));
  mediump vec2 tmpvar_37;
  tmpvar_37 = (((tmpvar_36 * tmpvar_36) * tmpvar_36) * tmpvar_36);
  mediump vec2 tmpvar_38;
  tmpvar_38.x = tmpvar_37.x;
  tmpvar_38.y = (1.0 - sg_11.w);
  lowp vec4 tmpvar_39;
  tmpvar_39 = texture2D (unity_NHxRoughness, tmpvar_38);
  mediump vec3 tmpvar_40;
  tmpvar_40 = (((
    ((tmpvar_13 + ((tmpvar_39.w * 16.0) * sg_11.xyz)) * (tmpvar_15 * atten_2))
   * 
    clamp (dot (n_10, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_21)
   * tmpvar_13)) + (tmpvar_26 * mix (sg_11.xyz, vec3(
    clamp ((sg_11.w + (1.0 - tmpvar_14)), 0.0, 1.0)
  ), tmpvar_37.yyy)));
  mediump vec4 tmpvar_41;
  tmpvar_41.w = 1.0;
  tmpvar_41.xyz = tmpvar_40;
  c_1.w = tmpvar_41.w;
  c_1.xyz = tmpvar_40;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_42;
  xlat_varoutput_42.xyz = c_1.xyz;
  xlat_varoutput_42.w = 1.0;
  gl_FragData[0] = xlat_varoutput_42;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec4 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_5 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].x;
  v_30.y = tangentToWorld_5[1].x;
  v_30.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].y;
  v_31.y = tangentToWorld_5[1].y;
  v_31.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_5[0].z;
  v_32.y = tangentToWorld_5[1].z;
  v_32.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_32;
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_10 = tmpvar_33;
  highp vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = tmpvar_20;
  mediump vec4 normal_35;
  normal_35 = tmpvar_34;
  mediump vec3 x2_36;
  mediump vec3 x1_37;
  x1_37.x = dot (unity_SHAr, normal_35);
  x1_37.y = dot (unity_SHAg, normal_35);
  x1_37.z = dot (unity_SHAb, normal_35);
  mediump vec4 tmpvar_38;
  tmpvar_38 = (normal_35.xyzz * normal_35.yzzx);
  x2_36.x = dot (unity_SHBr, tmpvar_38);
  x2_36.y = dot (unity_SHBg, tmpvar_38);
  x2_36.z = dot (unity_SHBb, tmpvar_38);
  tmpvar_9.xyz = ((x2_36 + (unity_SHC.xyz * 
    ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
  )) + x1_37);
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform lowp sampler2DShadow _ShadowMapTexture;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = xlv_TEXCOORD2_1.xyz;
  tmpvar_5 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_3.x;
  tmpvar_6[0].y = tmpvar_4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = tmpvar_3.y;
  tmpvar_6[1].y = tmpvar_4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = tmpvar_3.z;
  tmpvar_6[2].y = tmpvar_4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  lowp vec4 cse_7;
  cse_7 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_9;
  packednormal_9 = tmpvar_8;
  mediump vec3 n_10;
  n_10 = (((packednormal_9.xyz * 2.0) - 1.0) * tmpvar_6);
  mediump vec4 sg_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_11 = tmpvar_12;
  mediump vec3 tmpvar_13;
  mediump float tmpvar_14;
  tmpvar_14 = (1.0 - sg_11.x);
  tmpvar_13 = ((_Color.xyz * cse_7.xyz) * tmpvar_14);
  mediump vec3 tmpvar_15;
  lowp vec3 tmpvar_16;
  tmpvar_16 = _LightColor0.xyz;
  tmpvar_15 = tmpvar_16;
  lowp float shadow_17;
  lowp float tmpvar_18;
  tmpvar_18 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  mediump float tmpvar_19;
  tmpvar_19 = (_LightShadowData.x + (tmpvar_18 * (1.0 - _LightShadowData.x)));
  shadow_17 = tmpvar_19;
  atten_2 = shadow_17;
  mediump float tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_20 = tmpvar_21.y;
  highp vec3 tmpvar_22;
  highp vec4 tmpvar_23;
  mediump vec3 cse_24;
  cse_24 = -(xlv_TEXCOORD1);
  tmpvar_22 = cse_24;
  tmpvar_23 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_25;
  mediump vec3 worldNormal_26;
  highp vec3 tmpvar_27;
  highp vec3 I_28;
  I_28 = -(tmpvar_22);
  tmpvar_27 = (I_28 - (2.0 * (
    dot (n_10, I_28)
   * n_10)));
  worldNormal_26 = tmpvar_27;
  mediump vec4 hdr_29;
  hdr_29 = tmpvar_23;
  highp float mip_30;
  mediump float tmpvar_31;
  tmpvar_31 = ((1.0 - sg_11.w) * 7.0);
  mip_30 = tmpvar_31;
  highp vec4 tmpvar_32;
  tmpvar_32.xyz = worldNormal_26;
  tmpvar_32.w = mip_30;
  lowp vec4 tmpvar_33;
  tmpvar_33 = textureCube (unity_SpecCube0, tmpvar_32.xyz, mip_30);
  mediump vec4 tmpvar_34;
  tmpvar_34 = tmpvar_33;
  tmpvar_25 = ((tmpvar_34.w * hdr_29.x) * tmpvar_34.xyz);
  tmpvar_25 = (tmpvar_25 * tmpvar_20);
  mediump vec2 tmpvar_35;
  tmpvar_35.x = dot ((cse_24 - (2.0 * 
    (dot (n_10, cse_24) * n_10)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_35.y = (1.0 - clamp (dot (n_10, cse_24), 0.0, 1.0));
  mediump vec2 tmpvar_36;
  tmpvar_36 = (((tmpvar_35 * tmpvar_35) * tmpvar_35) * tmpvar_35);
  mediump vec2 tmpvar_37;
  tmpvar_37.x = tmpvar_36.x;
  tmpvar_37.y = (1.0 - sg_11.w);
  lowp vec4 tmpvar_38;
  tmpvar_38 = texture2D (unity_NHxRoughness, tmpvar_37);
  mediump vec3 tmpvar_39;
  tmpvar_39 = (((
    ((tmpvar_13 + ((tmpvar_38.w * 16.0) * sg_11.xyz)) * (tmpvar_15 * atten_2))
   * 
    clamp (dot (n_10, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_20)
   * tmpvar_13)) + (tmpvar_25 * mix (sg_11.xyz, vec3(
    clamp ((sg_11.w + (1.0 - tmpvar_14)), 0.0, 1.0)
  ), tmpvar_36.yyy)));
  mediump vec4 tmpvar_40;
  tmpvar_40.w = 1.0;
  tmpvar_40.xyz = tmpvar_39;
  c_1.w = tmpvar_40.w;
  c_1.xyz = tmpvar_39;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_41;
  xlat_varoutput_41.xyz = c_1.xyz;
  xlat_varoutput_41.w = 1.0;
  gl_FragData[0] = xlat_varoutput_41;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
out mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec4 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_5 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].x;
  v_30.y = tangentToWorld_5[1].x;
  v_30.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].y;
  v_31.y = tangentToWorld_5[1].y;
  v_31.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_5[0].z;
  v_32.y = tangentToWorld_5[1].z;
  v_32.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_32;
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_10 = tmpvar_33;
  highp vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = tmpvar_20;
  mediump vec4 normal_35;
  normal_35 = tmpvar_34;
  mediump vec3 x2_36;
  mediump vec3 x1_37;
  x1_37.x = dot (unity_SHAr, normal_35);
  x1_37.y = dot (unity_SHAg, normal_35);
  x1_37.z = dot (unity_SHAb, normal_35);
  mediump vec4 tmpvar_38;
  tmpvar_38 = (normal_35.xyzz * normal_35.yzzx);
  x2_36.x = dot (unity_SHBr, tmpvar_38);
  x2_36.y = dot (unity_SHBg, tmpvar_38);
  x2_36.z = dot (unity_SHBb, tmpvar_38);
  tmpvar_9.xyz = ((x2_36 + (unity_SHC.xyz * 
    ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
  )) + x1_37);
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform lowp sampler2DShadow _ShadowMapTexture;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
in mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = xlv_TEXCOORD2_1.xyz;
  tmpvar_5 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_3.x;
  tmpvar_6[0].y = tmpvar_4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = tmpvar_3.y;
  tmpvar_6[1].y = tmpvar_4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = tmpvar_3.z;
  tmpvar_6[2].y = tmpvar_4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  lowp vec4 cse_7;
  cse_7 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_9;
  packednormal_9 = tmpvar_8;
  mediump vec3 n_10;
  n_10 = (((packednormal_9.xyz * 2.0) - 1.0) * tmpvar_6);
  mediump vec4 sg_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_11 = tmpvar_12;
  mediump vec3 tmpvar_13;
  mediump float tmpvar_14;
  tmpvar_14 = (1.0 - sg_11.x);
  tmpvar_13 = ((_Color.xyz * cse_7.xyz) * tmpvar_14);
  mediump vec3 tmpvar_15;
  lowp vec3 tmpvar_16;
  tmpvar_16 = _LightColor0.xyz;
  tmpvar_15 = tmpvar_16;
  lowp float shadow_17;
  mediump float tmpvar_18;
  tmpvar_18 = texture (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  lowp float tmpvar_19;
  tmpvar_19 = tmpvar_18;
  mediump float tmpvar_20;
  tmpvar_20 = (_LightShadowData.x + (tmpvar_19 * (1.0 - _LightShadowData.x)));
  shadow_17 = tmpvar_20;
  atten_2 = shadow_17;
  mediump float tmpvar_21;
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_21 = tmpvar_22.y;
  highp vec3 tmpvar_23;
  highp vec4 tmpvar_24;
  mediump vec3 cse_25;
  cse_25 = -(xlv_TEXCOORD1);
  tmpvar_23 = cse_25;
  tmpvar_24 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_26;
  mediump vec3 worldNormal_27;
  highp vec3 tmpvar_28;
  highp vec3 I_29;
  I_29 = -(tmpvar_23);
  tmpvar_28 = (I_29 - (2.0 * (
    dot (n_10, I_29)
   * n_10)));
  worldNormal_27 = tmpvar_28;
  mediump vec4 hdr_30;
  hdr_30 = tmpvar_24;
  highp float mip_31;
  mediump float tmpvar_32;
  tmpvar_32 = ((1.0 - sg_11.w) * 7.0);
  mip_31 = tmpvar_32;
  highp vec4 tmpvar_33;
  tmpvar_33.xyz = worldNormal_27;
  tmpvar_33.w = mip_31;
  lowp vec4 tmpvar_34;
  tmpvar_34 = texture (unity_SpecCube0, tmpvar_33.xyz, mip_31);
  mediump vec4 tmpvar_35;
  tmpvar_35 = tmpvar_34;
  tmpvar_26 = ((tmpvar_35.w * hdr_30.x) * tmpvar_35.xyz);
  tmpvar_26 = (tmpvar_26 * tmpvar_21);
  mediump vec2 tmpvar_36;
  tmpvar_36.x = dot ((cse_25 - (2.0 * 
    (dot (n_10, cse_25) * n_10)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_36.y = (1.0 - clamp (dot (n_10, cse_25), 0.0, 1.0));
  mediump vec2 tmpvar_37;
  tmpvar_37 = (((tmpvar_36 * tmpvar_36) * tmpvar_36) * tmpvar_36);
  mediump vec2 tmpvar_38;
  tmpvar_38.x = tmpvar_37.x;
  tmpvar_38.y = (1.0 - sg_11.w);
  lowp vec4 tmpvar_39;
  tmpvar_39 = texture (unity_NHxRoughness, tmpvar_38);
  mediump vec3 tmpvar_40;
  tmpvar_40 = (((
    ((tmpvar_13 + ((tmpvar_39.w * 16.0) * sg_11.xyz)) * (tmpvar_15 * atten_2))
   * 
    clamp (dot (n_10, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_21)
   * tmpvar_13)) + (tmpvar_26 * mix (sg_11.xyz, vec3(
    clamp ((sg_11.w + (1.0 - tmpvar_14)), 0.0, 1.0)
  ), tmpvar_37.yyy)));
  mediump vec4 tmpvar_41;
  tmpvar_41.w = 1.0;
  tmpvar_41.xyz = tmpvar_40;
  c_1.w = tmpvar_41.w;
  c_1.xyz = tmpvar_40;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_42;
  xlat_varoutput_42.xyz = c_1.xyz;
  xlat_varoutput_42.w = 1.0;
  _glesFragData[0] = xlat_varoutput_42;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec4 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_5 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].x;
  v_30.y = tangentToWorld_5[1].x;
  v_30.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].y;
  v_31.y = tangentToWorld_5[1].y;
  v_31.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_5[0].z;
  v_32.y = tangentToWorld_5[1].z;
  v_32.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_32;
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_10 = tmpvar_33;
  highp vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = tmpvar_20;
  mediump vec4 normal_35;
  normal_35 = tmpvar_34;
  mediump vec3 x2_36;
  mediump vec3 x1_37;
  x1_37.x = dot (unity_SHAr, normal_35);
  x1_37.y = dot (unity_SHAg, normal_35);
  x1_37.z = dot (unity_SHAb, normal_35);
  mediump vec4 tmpvar_38;
  tmpvar_38 = (normal_35.xyzz * normal_35.yzzx);
  x2_36.x = dot (unity_SHBr, tmpvar_38);
  x2_36.y = dot (unity_SHBg, tmpvar_38);
  x2_36.z = dot (unity_SHBb, tmpvar_38);
  tmpvar_9.xyz = ((x2_36 + (unity_SHC.xyz * 
    ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
  )) + x1_37);
  highp vec3 lightColor0_39;
  lightColor0_39 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_40;
  lightColor1_40 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_41;
  lightColor2_41 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_42;
  lightColor3_42 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_43;
  lightAttenSq_43 = unity_4LightAtten0;
  highp vec4 tmpvar_44;
  tmpvar_44 = (unity_4LightPosX0 - tmpvar_11.x);
  highp vec4 tmpvar_45;
  tmpvar_45 = (unity_4LightPosY0 - tmpvar_11.y);
  highp vec4 tmpvar_46;
  tmpvar_46 = (unity_4LightPosZ0 - tmpvar_11.z);
  highp vec4 tmpvar_47;
  tmpvar_47 = (((tmpvar_44 * tmpvar_44) + (tmpvar_45 * tmpvar_45)) + (tmpvar_46 * tmpvar_46));
  highp vec4 tmpvar_48;
  tmpvar_48 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_44 * tmpvar_20.x) + (tmpvar_45 * tmpvar_20.y)) + (tmpvar_46 * tmpvar_20.z))
   * 
    inversesqrt(tmpvar_47)
  )) * (1.0/((1.0 + 
    (tmpvar_47 * lightAttenSq_43)
  ))));
  highp vec3 tmpvar_49;
  tmpvar_49 = (tmpvar_9.xyz + ((
    ((lightColor0_39 * tmpvar_48.x) + (lightColor1_40 * tmpvar_48.y))
   + 
    (lightColor2_41 * tmpvar_48.z)
  ) + (lightColor3_42 * tmpvar_48.w)));
  tmpvar_9.xyz = tmpvar_49;
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform lowp sampler2DShadow _ShadowMapTexture;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = xlv_TEXCOORD2_1.xyz;
  tmpvar_5 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_3.x;
  tmpvar_6[0].y = tmpvar_4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = tmpvar_3.y;
  tmpvar_6[1].y = tmpvar_4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = tmpvar_3.z;
  tmpvar_6[2].y = tmpvar_4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  lowp vec4 cse_7;
  cse_7 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_9;
  packednormal_9 = tmpvar_8;
  mediump vec3 n_10;
  n_10 = (((packednormal_9.xyz * 2.0) - 1.0) * tmpvar_6);
  mediump vec4 sg_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_11 = tmpvar_12;
  mediump vec3 tmpvar_13;
  mediump float tmpvar_14;
  tmpvar_14 = (1.0 - sg_11.x);
  tmpvar_13 = ((_Color.xyz * cse_7.xyz) * tmpvar_14);
  mediump vec3 tmpvar_15;
  lowp vec3 tmpvar_16;
  tmpvar_16 = _LightColor0.xyz;
  tmpvar_15 = tmpvar_16;
  lowp float shadow_17;
  lowp float tmpvar_18;
  tmpvar_18 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  mediump float tmpvar_19;
  tmpvar_19 = (_LightShadowData.x + (tmpvar_18 * (1.0 - _LightShadowData.x)));
  shadow_17 = tmpvar_19;
  atten_2 = shadow_17;
  mediump float tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_20 = tmpvar_21.y;
  highp vec3 tmpvar_22;
  highp vec4 tmpvar_23;
  mediump vec3 cse_24;
  cse_24 = -(xlv_TEXCOORD1);
  tmpvar_22 = cse_24;
  tmpvar_23 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_25;
  mediump vec3 worldNormal_26;
  highp vec3 tmpvar_27;
  highp vec3 I_28;
  I_28 = -(tmpvar_22);
  tmpvar_27 = (I_28 - (2.0 * (
    dot (n_10, I_28)
   * n_10)));
  worldNormal_26 = tmpvar_27;
  mediump vec4 hdr_29;
  hdr_29 = tmpvar_23;
  highp float mip_30;
  mediump float tmpvar_31;
  tmpvar_31 = ((1.0 - sg_11.w) * 7.0);
  mip_30 = tmpvar_31;
  highp vec4 tmpvar_32;
  tmpvar_32.xyz = worldNormal_26;
  tmpvar_32.w = mip_30;
  lowp vec4 tmpvar_33;
  tmpvar_33 = textureCube (unity_SpecCube0, tmpvar_32.xyz, mip_30);
  mediump vec4 tmpvar_34;
  tmpvar_34 = tmpvar_33;
  tmpvar_25 = ((tmpvar_34.w * hdr_29.x) * tmpvar_34.xyz);
  tmpvar_25 = (tmpvar_25 * tmpvar_20);
  mediump vec2 tmpvar_35;
  tmpvar_35.x = dot ((cse_24 - (2.0 * 
    (dot (n_10, cse_24) * n_10)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_35.y = (1.0 - clamp (dot (n_10, cse_24), 0.0, 1.0));
  mediump vec2 tmpvar_36;
  tmpvar_36 = (((tmpvar_35 * tmpvar_35) * tmpvar_35) * tmpvar_35);
  mediump vec2 tmpvar_37;
  tmpvar_37.x = tmpvar_36.x;
  tmpvar_37.y = (1.0 - sg_11.w);
  lowp vec4 tmpvar_38;
  tmpvar_38 = texture2D (unity_NHxRoughness, tmpvar_37);
  mediump vec3 tmpvar_39;
  tmpvar_39 = (((
    ((tmpvar_13 + ((tmpvar_38.w * 16.0) * sg_11.xyz)) * (tmpvar_15 * atten_2))
   * 
    clamp (dot (n_10, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_20)
   * tmpvar_13)) + (tmpvar_25 * mix (sg_11.xyz, vec3(
    clamp ((sg_11.w + (1.0 - tmpvar_14)), 0.0, 1.0)
  ), tmpvar_36.yyy)));
  mediump vec4 tmpvar_40;
  tmpvar_40.w = 1.0;
  tmpvar_40.xyz = tmpvar_39;
  c_1.w = tmpvar_40.w;
  c_1.xyz = tmpvar_39;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_41;
  xlat_varoutput_41.xyz = c_1.xyz;
  xlat_varoutput_41.w = 1.0;
  gl_FragData[0] = xlat_varoutput_41;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
out mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec4 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_5 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].x;
  v_30.y = tangentToWorld_5[1].x;
  v_30.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].y;
  v_31.y = tangentToWorld_5[1].y;
  v_31.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_5[0].z;
  v_32.y = tangentToWorld_5[1].z;
  v_32.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_32;
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_10 = tmpvar_33;
  highp vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = tmpvar_20;
  mediump vec4 normal_35;
  normal_35 = tmpvar_34;
  mediump vec3 x2_36;
  mediump vec3 x1_37;
  x1_37.x = dot (unity_SHAr, normal_35);
  x1_37.y = dot (unity_SHAg, normal_35);
  x1_37.z = dot (unity_SHAb, normal_35);
  mediump vec4 tmpvar_38;
  tmpvar_38 = (normal_35.xyzz * normal_35.yzzx);
  x2_36.x = dot (unity_SHBr, tmpvar_38);
  x2_36.y = dot (unity_SHBg, tmpvar_38);
  x2_36.z = dot (unity_SHBb, tmpvar_38);
  tmpvar_9.xyz = ((x2_36 + (unity_SHC.xyz * 
    ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
  )) + x1_37);
  highp vec3 lightColor0_39;
  lightColor0_39 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_40;
  lightColor1_40 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_41;
  lightColor2_41 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_42;
  lightColor3_42 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_43;
  lightAttenSq_43 = unity_4LightAtten0;
  highp vec4 tmpvar_44;
  tmpvar_44 = (unity_4LightPosX0 - tmpvar_11.x);
  highp vec4 tmpvar_45;
  tmpvar_45 = (unity_4LightPosY0 - tmpvar_11.y);
  highp vec4 tmpvar_46;
  tmpvar_46 = (unity_4LightPosZ0 - tmpvar_11.z);
  highp vec4 tmpvar_47;
  tmpvar_47 = (((tmpvar_44 * tmpvar_44) + (tmpvar_45 * tmpvar_45)) + (tmpvar_46 * tmpvar_46));
  highp vec4 tmpvar_48;
  tmpvar_48 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_44 * tmpvar_20.x) + (tmpvar_45 * tmpvar_20.y)) + (tmpvar_46 * tmpvar_20.z))
   * 
    inversesqrt(tmpvar_47)
  )) * (1.0/((1.0 + 
    (tmpvar_47 * lightAttenSq_43)
  ))));
  highp vec3 tmpvar_49;
  tmpvar_49 = (tmpvar_9.xyz + ((
    ((lightColor0_39 * tmpvar_48.x) + (lightColor1_40 * tmpvar_48.y))
   + 
    (lightColor2_41 * tmpvar_48.z)
  ) + (lightColor3_42 * tmpvar_48.w)));
  tmpvar_9.xyz = tmpvar_49;
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform lowp sampler2DShadow _ShadowMapTexture;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
in mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = xlv_TEXCOORD2_1.xyz;
  tmpvar_5 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_3.x;
  tmpvar_6[0].y = tmpvar_4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = tmpvar_3.y;
  tmpvar_6[1].y = tmpvar_4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = tmpvar_3.z;
  tmpvar_6[2].y = tmpvar_4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  lowp vec4 cse_7;
  cse_7 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_9;
  packednormal_9 = tmpvar_8;
  mediump vec3 n_10;
  n_10 = (((packednormal_9.xyz * 2.0) - 1.0) * tmpvar_6);
  mediump vec4 sg_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_11 = tmpvar_12;
  mediump vec3 tmpvar_13;
  mediump float tmpvar_14;
  tmpvar_14 = (1.0 - sg_11.x);
  tmpvar_13 = ((_Color.xyz * cse_7.xyz) * tmpvar_14);
  mediump vec3 tmpvar_15;
  lowp vec3 tmpvar_16;
  tmpvar_16 = _LightColor0.xyz;
  tmpvar_15 = tmpvar_16;
  lowp float shadow_17;
  mediump float tmpvar_18;
  tmpvar_18 = texture (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  lowp float tmpvar_19;
  tmpvar_19 = tmpvar_18;
  mediump float tmpvar_20;
  tmpvar_20 = (_LightShadowData.x + (tmpvar_19 * (1.0 - _LightShadowData.x)));
  shadow_17 = tmpvar_20;
  atten_2 = shadow_17;
  mediump float tmpvar_21;
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_21 = tmpvar_22.y;
  highp vec3 tmpvar_23;
  highp vec4 tmpvar_24;
  mediump vec3 cse_25;
  cse_25 = -(xlv_TEXCOORD1);
  tmpvar_23 = cse_25;
  tmpvar_24 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_26;
  mediump vec3 worldNormal_27;
  highp vec3 tmpvar_28;
  highp vec3 I_29;
  I_29 = -(tmpvar_23);
  tmpvar_28 = (I_29 - (2.0 * (
    dot (n_10, I_29)
   * n_10)));
  worldNormal_27 = tmpvar_28;
  mediump vec4 hdr_30;
  hdr_30 = tmpvar_24;
  highp float mip_31;
  mediump float tmpvar_32;
  tmpvar_32 = ((1.0 - sg_11.w) * 7.0);
  mip_31 = tmpvar_32;
  highp vec4 tmpvar_33;
  tmpvar_33.xyz = worldNormal_27;
  tmpvar_33.w = mip_31;
  lowp vec4 tmpvar_34;
  tmpvar_34 = texture (unity_SpecCube0, tmpvar_33.xyz, mip_31);
  mediump vec4 tmpvar_35;
  tmpvar_35 = tmpvar_34;
  tmpvar_26 = ((tmpvar_35.w * hdr_30.x) * tmpvar_35.xyz);
  tmpvar_26 = (tmpvar_26 * tmpvar_21);
  mediump vec2 tmpvar_36;
  tmpvar_36.x = dot ((cse_25 - (2.0 * 
    (dot (n_10, cse_25) * n_10)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_36.y = (1.0 - clamp (dot (n_10, cse_25), 0.0, 1.0));
  mediump vec2 tmpvar_37;
  tmpvar_37 = (((tmpvar_36 * tmpvar_36) * tmpvar_36) * tmpvar_36);
  mediump vec2 tmpvar_38;
  tmpvar_38.x = tmpvar_37.x;
  tmpvar_38.y = (1.0 - sg_11.w);
  lowp vec4 tmpvar_39;
  tmpvar_39 = texture (unity_NHxRoughness, tmpvar_38);
  mediump vec3 tmpvar_40;
  tmpvar_40 = (((
    ((tmpvar_13 + ((tmpvar_39.w * 16.0) * sg_11.xyz)) * (tmpvar_15 * atten_2))
   * 
    clamp (dot (n_10, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_21)
   * tmpvar_13)) + (tmpvar_26 * mix (sg_11.xyz, vec3(
    clamp ((sg_11.w + (1.0 - tmpvar_14)), 0.0, 1.0)
  ), tmpvar_37.yyy)));
  mediump vec4 tmpvar_41;
  tmpvar_41.w = 1.0;
  tmpvar_41.xyz = tmpvar_40;
  c_1.w = tmpvar_41.w;
  c_1.xyz = tmpvar_40;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_42;
  xlat_varoutput_42.xyz = c_1.xyz;
  xlat_varoutput_42.w = 1.0;
  _glesFragData[0] = xlat_varoutput_42;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_11;
  tmpvar_11 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_12;
  texcoord_12.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_13;
  if ((_UVSec == 0.0)) {
    tmpvar_13 = tmpvar_2;
  } else {
    tmpvar_13 = tmpvar_3;
  };
  texcoord_12.zw = ((tmpvar_13 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_14;
  n_14 = (tmpvar_10.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_15;
  norm_15 = tmpvar_1;
  highp vec4 v_16;
  v_16.x = _World2Object[0].x;
  v_16.y = _World2Object[1].x;
  v_16.z = _World2Object[2].x;
  v_16.w = _World2Object[3].x;
  highp vec4 v_17;
  v_17.x = _World2Object[0].y;
  v_17.y = _World2Object[1].y;
  v_17.z = _World2Object[2].y;
  v_17.w = _World2Object[3].y;
  highp vec4 v_18;
  v_18.x = _World2Object[0].z;
  v_18.y = _World2Object[1].z;
  v_18.z = _World2Object[2].z;
  v_18.w = _World2Object[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(((
    (v_16.xyz * norm_15.x)
   + 
    (v_17.xyz * norm_15.y)
  ) + (v_18.xyz * norm_15.z)));
  highp vec3 dir_20;
  dir_20 = tmpvar_4.xyz;
  highp mat3 tmpvar_21;
  tmpvar_21[0] = _Object2World[0].xyz;
  tmpvar_21[1] = _Object2World[1].xyz;
  tmpvar_21[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = normalize((tmpvar_21 * dir_20));
  tmpvar_22.w = tmpvar_4.w;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.www;
  mediump vec3 normal_24;
  normal_24 = tmpvar_19;
  mediump vec3 tangent_25;
  tangent_25 = tmpvar_22.xyz;
  mediump vec3 flip_26;
  flip_26 = tmpvar_23;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (((normal_24.yzx * tangent_25.zxy) - (normal_24.zxy * tangent_25.yzx)) * flip_26);
  mediump mat3 tmpvar_28;
  tmpvar_28[0].x = tangent_25.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = normal_24.x;
  tmpvar_28[1].x = tangent_25.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = normal_24.y;
  tmpvar_28[2].x = tangent_25.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = normal_24.z;
  tangentToWorld_5 = tmpvar_28;
  highp vec3 v_29;
  v_29.x = tangentToWorld_5[0].x;
  v_29.y = tangentToWorld_5[1].x;
  v_29.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].y;
  v_30.y = tangentToWorld_5[1].y;
  v_30.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].z;
  v_31.y = tangentToWorld_5[1].z;
  v_31.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_31;
  highp vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = tmpvar_19;
  mediump vec4 normal_33;
  normal_33 = tmpvar_32;
  mediump vec3 x2_34;
  mediump vec3 x1_35;
  x1_35.x = dot (unity_SHAr, normal_33);
  x1_35.y = dot (unity_SHAg, normal_33);
  x1_35.z = dot (unity_SHAb, normal_33);
  mediump vec4 tmpvar_36;
  tmpvar_36 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_36);
  x2_34.y = dot (unity_SHBg, tmpvar_36);
  x2_34.z = dot (unity_SHBb, tmpvar_36);
  tmpvar_9.xyz = ((x2_34 + (unity_SHC.xyz * 
    ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
  )) + x1_35);
  gl_Position = tmpvar_11;
  xlv_TEXCOORD0 = texcoord_12;
  xlv_TEXCOORD1 = normalize(n_14);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 unity_ColorSpaceDouble;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _DetailAlbedoMap;
uniform sampler2D _BumpMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 c_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_2 = xlv_TEXCOORD2.xyz;
  tmpvar_3 = xlv_TEXCOORD2_1.xyz;
  tmpvar_4 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_5;
  tmpvar_5[0].x = tmpvar_2.x;
  tmpvar_5[0].y = tmpvar_3.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = tmpvar_2.y;
  tmpvar_5[1].y = tmpvar_3.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = tmpvar_2.z;
  tmpvar_5[2].y = tmpvar_3.z;
  tmpvar_5[2].z = tmpvar_4.z;
  lowp vec4 cse_6;
  cse_6 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_8;
  packednormal_8 = tmpvar_7;
  mediump vec3 n_9;
  n_9 = (((packednormal_8.xyz * 2.0) - 1.0) * tmpvar_5);
  mediump vec4 sg_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_10 = tmpvar_11;
  mediump vec3 detailAlbedo_12;
  lowp vec3 tmpvar_13;
  tmpvar_13 = texture2D (_DetailAlbedoMap, xlv_TEXCOORD0.zw).xyz;
  detailAlbedo_12 = tmpvar_13;
  mediump vec3 tmpvar_14;
  mediump float tmpvar_15;
  tmpvar_15 = (1.0 - sg_10.x);
  tmpvar_14 = (((_Color.xyz * cse_6.xyz) * (detailAlbedo_12 * unity_ColorSpaceDouble.xyz)) * tmpvar_15);
  mediump vec3 tmpvar_16;
  lowp vec3 tmpvar_17;
  tmpvar_17 = _LightColor0.xyz;
  tmpvar_16 = tmpvar_17;
  mediump float tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_18 = tmpvar_19.y;
  highp vec3 tmpvar_20;
  highp vec4 tmpvar_21;
  mediump vec3 cse_22;
  cse_22 = -(xlv_TEXCOORD1);
  tmpvar_20 = cse_22;
  tmpvar_21 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_23;
  mediump vec3 worldNormal_24;
  highp vec3 tmpvar_25;
  highp vec3 I_26;
  I_26 = -(tmpvar_20);
  tmpvar_25 = (I_26 - (2.0 * (
    dot (n_9, I_26)
   * n_9)));
  worldNormal_24 = tmpvar_25;
  mediump vec4 hdr_27;
  hdr_27 = tmpvar_21;
  highp float mip_28;
  mediump float tmpvar_29;
  tmpvar_29 = ((1.0 - sg_10.w) * 7.0);
  mip_28 = tmpvar_29;
  highp vec4 tmpvar_30;
  tmpvar_30.xyz = worldNormal_24;
  tmpvar_30.w = mip_28;
  lowp vec4 tmpvar_31;
  tmpvar_31 = textureCube (unity_SpecCube0, tmpvar_30.xyz, mip_28);
  mediump vec4 tmpvar_32;
  tmpvar_32 = tmpvar_31;
  tmpvar_23 = ((tmpvar_32.w * hdr_27.x) * tmpvar_32.xyz);
  tmpvar_23 = (tmpvar_23 * tmpvar_18);
  mediump vec2 tmpvar_33;
  tmpvar_33.x = dot ((cse_22 - (2.0 * 
    (dot (n_9, cse_22) * n_9)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_33.y = (1.0 - clamp (dot (n_9, cse_22), 0.0, 1.0));
  mediump vec2 tmpvar_34;
  tmpvar_34 = (((tmpvar_33 * tmpvar_33) * tmpvar_33) * tmpvar_33);
  mediump vec2 tmpvar_35;
  tmpvar_35.x = tmpvar_34.x;
  tmpvar_35.y = (1.0 - sg_10.w);
  lowp vec4 tmpvar_36;
  tmpvar_36 = texture2D (unity_NHxRoughness, tmpvar_35);
  mediump vec3 tmpvar_37;
  tmpvar_37 = (((
    ((tmpvar_14 + ((tmpvar_36.w * 16.0) * sg_10.xyz)) * tmpvar_16)
   * 
    clamp (dot (n_9, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_18)
   * tmpvar_14)) + (tmpvar_23 * mix (sg_10.xyz, vec3(
    clamp ((sg_10.w + (1.0 - tmpvar_15)), 0.0, 1.0)
  ), tmpvar_34.yyy)));
  mediump vec4 tmpvar_38;
  tmpvar_38.w = 1.0;
  tmpvar_38.xyz = tmpvar_37;
  c_1.w = tmpvar_38.w;
  c_1.xyz = tmpvar_37;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_39;
  xlat_varoutput_39.xyz = c_1.xyz;
  xlat_varoutput_39.w = 1.0;
  gl_FragData[0] = xlat_varoutput_39;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_11;
  tmpvar_11 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_12;
  texcoord_12.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_13;
  if ((_UVSec == 0.0)) {
    tmpvar_13 = tmpvar_2;
  } else {
    tmpvar_13 = tmpvar_3;
  };
  texcoord_12.zw = ((tmpvar_13 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_14;
  n_14 = (tmpvar_10.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_15;
  norm_15 = tmpvar_1;
  highp vec4 v_16;
  v_16.x = _World2Object[0].x;
  v_16.y = _World2Object[1].x;
  v_16.z = _World2Object[2].x;
  v_16.w = _World2Object[3].x;
  highp vec4 v_17;
  v_17.x = _World2Object[0].y;
  v_17.y = _World2Object[1].y;
  v_17.z = _World2Object[2].y;
  v_17.w = _World2Object[3].y;
  highp vec4 v_18;
  v_18.x = _World2Object[0].z;
  v_18.y = _World2Object[1].z;
  v_18.z = _World2Object[2].z;
  v_18.w = _World2Object[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(((
    (v_16.xyz * norm_15.x)
   + 
    (v_17.xyz * norm_15.y)
  ) + (v_18.xyz * norm_15.z)));
  highp vec3 dir_20;
  dir_20 = tmpvar_4.xyz;
  highp mat3 tmpvar_21;
  tmpvar_21[0] = _Object2World[0].xyz;
  tmpvar_21[1] = _Object2World[1].xyz;
  tmpvar_21[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = normalize((tmpvar_21 * dir_20));
  tmpvar_22.w = tmpvar_4.w;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.www;
  mediump vec3 normal_24;
  normal_24 = tmpvar_19;
  mediump vec3 tangent_25;
  tangent_25 = tmpvar_22.xyz;
  mediump vec3 flip_26;
  flip_26 = tmpvar_23;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (((normal_24.yzx * tangent_25.zxy) - (normal_24.zxy * tangent_25.yzx)) * flip_26);
  mediump mat3 tmpvar_28;
  tmpvar_28[0].x = tangent_25.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = normal_24.x;
  tmpvar_28[1].x = tangent_25.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = normal_24.y;
  tmpvar_28[2].x = tangent_25.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = normal_24.z;
  tangentToWorld_5 = tmpvar_28;
  highp vec3 v_29;
  v_29.x = tangentToWorld_5[0].x;
  v_29.y = tangentToWorld_5[1].x;
  v_29.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].y;
  v_30.y = tangentToWorld_5[1].y;
  v_30.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].z;
  v_31.y = tangentToWorld_5[1].z;
  v_31.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_31;
  highp vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = tmpvar_19;
  mediump vec4 normal_33;
  normal_33 = tmpvar_32;
  mediump vec3 x2_34;
  mediump vec3 x1_35;
  x1_35.x = dot (unity_SHAr, normal_33);
  x1_35.y = dot (unity_SHAg, normal_33);
  x1_35.z = dot (unity_SHAb, normal_33);
  mediump vec4 tmpvar_36;
  tmpvar_36 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_36);
  x2_34.y = dot (unity_SHBg, tmpvar_36);
  x2_34.z = dot (unity_SHBb, tmpvar_36);
  tmpvar_9.xyz = ((x2_34 + (unity_SHC.xyz * 
    ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
  )) + x1_35);
  gl_Position = tmpvar_11;
  xlv_TEXCOORD0 = texcoord_12;
  xlv_TEXCOORD1 = normalize(n_14);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 unity_ColorSpaceDouble;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _DetailAlbedoMap;
uniform sampler2D _BumpMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 c_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_2 = xlv_TEXCOORD2.xyz;
  tmpvar_3 = xlv_TEXCOORD2_1.xyz;
  tmpvar_4 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_5;
  tmpvar_5[0].x = tmpvar_2.x;
  tmpvar_5[0].y = tmpvar_3.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = tmpvar_2.y;
  tmpvar_5[1].y = tmpvar_3.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = tmpvar_2.z;
  tmpvar_5[2].y = tmpvar_3.z;
  tmpvar_5[2].z = tmpvar_4.z;
  lowp vec4 cse_6;
  cse_6 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_8;
  packednormal_8 = tmpvar_7;
  mediump vec3 n_9;
  n_9 = (((packednormal_8.xyz * 2.0) - 1.0) * tmpvar_5);
  mediump vec4 sg_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_10 = tmpvar_11;
  mediump vec3 detailAlbedo_12;
  lowp vec3 tmpvar_13;
  tmpvar_13 = texture (_DetailAlbedoMap, xlv_TEXCOORD0.zw).xyz;
  detailAlbedo_12 = tmpvar_13;
  mediump vec3 tmpvar_14;
  mediump float tmpvar_15;
  tmpvar_15 = (1.0 - sg_10.x);
  tmpvar_14 = (((_Color.xyz * cse_6.xyz) * (detailAlbedo_12 * unity_ColorSpaceDouble.xyz)) * tmpvar_15);
  mediump vec3 tmpvar_16;
  lowp vec3 tmpvar_17;
  tmpvar_17 = _LightColor0.xyz;
  tmpvar_16 = tmpvar_17;
  mediump float tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_18 = tmpvar_19.y;
  highp vec3 tmpvar_20;
  highp vec4 tmpvar_21;
  mediump vec3 cse_22;
  cse_22 = -(xlv_TEXCOORD1);
  tmpvar_20 = cse_22;
  tmpvar_21 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_23;
  mediump vec3 worldNormal_24;
  highp vec3 tmpvar_25;
  highp vec3 I_26;
  I_26 = -(tmpvar_20);
  tmpvar_25 = (I_26 - (2.0 * (
    dot (n_9, I_26)
   * n_9)));
  worldNormal_24 = tmpvar_25;
  mediump vec4 hdr_27;
  hdr_27 = tmpvar_21;
  highp float mip_28;
  mediump float tmpvar_29;
  tmpvar_29 = ((1.0 - sg_10.w) * 7.0);
  mip_28 = tmpvar_29;
  highp vec4 tmpvar_30;
  tmpvar_30.xyz = worldNormal_24;
  tmpvar_30.w = mip_28;
  lowp vec4 tmpvar_31;
  tmpvar_31 = texture (unity_SpecCube0, tmpvar_30.xyz, mip_28);
  mediump vec4 tmpvar_32;
  tmpvar_32 = tmpvar_31;
  tmpvar_23 = ((tmpvar_32.w * hdr_27.x) * tmpvar_32.xyz);
  tmpvar_23 = (tmpvar_23 * tmpvar_18);
  mediump vec2 tmpvar_33;
  tmpvar_33.x = dot ((cse_22 - (2.0 * 
    (dot (n_9, cse_22) * n_9)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_33.y = (1.0 - clamp (dot (n_9, cse_22), 0.0, 1.0));
  mediump vec2 tmpvar_34;
  tmpvar_34 = (((tmpvar_33 * tmpvar_33) * tmpvar_33) * tmpvar_33);
  mediump vec2 tmpvar_35;
  tmpvar_35.x = tmpvar_34.x;
  tmpvar_35.y = (1.0 - sg_10.w);
  lowp vec4 tmpvar_36;
  tmpvar_36 = texture (unity_NHxRoughness, tmpvar_35);
  mediump vec3 tmpvar_37;
  tmpvar_37 = (((
    ((tmpvar_14 + ((tmpvar_36.w * 16.0) * sg_10.xyz)) * tmpvar_16)
   * 
    clamp (dot (n_9, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_18)
   * tmpvar_14)) + (tmpvar_23 * mix (sg_10.xyz, vec3(
    clamp ((sg_10.w + (1.0 - tmpvar_15)), 0.0, 1.0)
  ), tmpvar_34.yyy)));
  mediump vec4 tmpvar_38;
  tmpvar_38.w = 1.0;
  tmpvar_38.xyz = tmpvar_37;
  c_1.w = tmpvar_38.w;
  c_1.xyz = tmpvar_37;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_39;
  xlat_varoutput_39.xyz = c_1.xyz;
  xlat_varoutput_39.w = 1.0;
  _glesFragData[0] = xlat_varoutput_39;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec4 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_5 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].x;
  v_30.y = tangentToWorld_5[1].x;
  v_30.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].y;
  v_31.y = tangentToWorld_5[1].y;
  v_31.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_5[0].z;
  v_32.y = tangentToWorld_5[1].z;
  v_32.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_32;
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_10 = tmpvar_33;
  highp vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = tmpvar_20;
  mediump vec4 normal_35;
  normal_35 = tmpvar_34;
  mediump vec3 x2_36;
  mediump vec3 x1_37;
  x1_37.x = dot (unity_SHAr, normal_35);
  x1_37.y = dot (unity_SHAg, normal_35);
  x1_37.z = dot (unity_SHAb, normal_35);
  mediump vec4 tmpvar_38;
  tmpvar_38 = (normal_35.xyzz * normal_35.yzzx);
  x2_36.x = dot (unity_SHBr, tmpvar_38);
  x2_36.y = dot (unity_SHBg, tmpvar_38);
  x2_36.z = dot (unity_SHBb, tmpvar_38);
  tmpvar_9.xyz = ((x2_36 + (unity_SHC.xyz * 
    ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
  )) + x1_37);
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 unity_ColorSpaceDouble;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _DetailAlbedoMap;
uniform sampler2D _BumpMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform sampler2D _ShadowMapTexture;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = xlv_TEXCOORD2_1.xyz;
  tmpvar_5 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_3.x;
  tmpvar_6[0].y = tmpvar_4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = tmpvar_3.y;
  tmpvar_6[1].y = tmpvar_4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = tmpvar_3.z;
  tmpvar_6[2].y = tmpvar_4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  lowp vec4 cse_7;
  cse_7 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_9;
  packednormal_9 = tmpvar_8;
  mediump vec3 n_10;
  n_10 = (((packednormal_9.xyz * 2.0) - 1.0) * tmpvar_6);
  mediump vec4 sg_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_11 = tmpvar_12;
  mediump vec3 detailAlbedo_13;
  lowp vec3 tmpvar_14;
  tmpvar_14 = texture2D (_DetailAlbedoMap, xlv_TEXCOORD0.zw).xyz;
  detailAlbedo_13 = tmpvar_14;
  mediump vec3 tmpvar_15;
  mediump float tmpvar_16;
  tmpvar_16 = (1.0 - sg_11.x);
  tmpvar_15 = (((_Color.xyz * cse_7.xyz) * (detailAlbedo_13 * unity_ColorSpaceDouble.xyz)) * tmpvar_16);
  mediump vec3 tmpvar_17;
  lowp vec3 tmpvar_18;
  tmpvar_18 = _LightColor0.xyz;
  tmpvar_17 = tmpvar_18;
  lowp float tmpvar_19;
  mediump float dist_20;
  lowp float tmpvar_21;
  tmpvar_21 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_20 = tmpvar_21;
  mediump float tmpvar_22;
  tmpvar_22 = max (float((dist_20 > 
    (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w)
  )), _LightShadowData.x);
  tmpvar_19 = tmpvar_22;
  atten_2 = tmpvar_19;
  mediump float tmpvar_23;
  lowp vec4 tmpvar_24;
  tmpvar_24 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_23 = tmpvar_24.y;
  highp vec3 tmpvar_25;
  highp vec4 tmpvar_26;
  mediump vec3 cse_27;
  cse_27 = -(xlv_TEXCOORD1);
  tmpvar_25 = cse_27;
  tmpvar_26 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_28;
  mediump vec3 worldNormal_29;
  highp vec3 tmpvar_30;
  highp vec3 I_31;
  I_31 = -(tmpvar_25);
  tmpvar_30 = (I_31 - (2.0 * (
    dot (n_10, I_31)
   * n_10)));
  worldNormal_29 = tmpvar_30;
  mediump vec4 hdr_32;
  hdr_32 = tmpvar_26;
  highp float mip_33;
  mediump float tmpvar_34;
  tmpvar_34 = ((1.0 - sg_11.w) * 7.0);
  mip_33 = tmpvar_34;
  highp vec4 tmpvar_35;
  tmpvar_35.xyz = worldNormal_29;
  tmpvar_35.w = mip_33;
  lowp vec4 tmpvar_36;
  tmpvar_36 = textureCube (unity_SpecCube0, tmpvar_35.xyz, mip_33);
  mediump vec4 tmpvar_37;
  tmpvar_37 = tmpvar_36;
  tmpvar_28 = ((tmpvar_37.w * hdr_32.x) * tmpvar_37.xyz);
  tmpvar_28 = (tmpvar_28 * tmpvar_23);
  mediump vec2 tmpvar_38;
  tmpvar_38.x = dot ((cse_27 - (2.0 * 
    (dot (n_10, cse_27) * n_10)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_38.y = (1.0 - clamp (dot (n_10, cse_27), 0.0, 1.0));
  mediump vec2 tmpvar_39;
  tmpvar_39 = (((tmpvar_38 * tmpvar_38) * tmpvar_38) * tmpvar_38);
  mediump vec2 tmpvar_40;
  tmpvar_40.x = tmpvar_39.x;
  tmpvar_40.y = (1.0 - sg_11.w);
  lowp vec4 tmpvar_41;
  tmpvar_41 = texture2D (unity_NHxRoughness, tmpvar_40);
  mediump vec3 tmpvar_42;
  tmpvar_42 = (((
    ((tmpvar_15 + ((tmpvar_41.w * 16.0) * sg_11.xyz)) * (tmpvar_17 * atten_2))
   * 
    clamp (dot (n_10, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_23)
   * tmpvar_15)) + (tmpvar_28 * mix (sg_11.xyz, vec3(
    clamp ((sg_11.w + (1.0 - tmpvar_16)), 0.0, 1.0)
  ), tmpvar_39.yyy)));
  mediump vec4 tmpvar_43;
  tmpvar_43.w = 1.0;
  tmpvar_43.xyz = tmpvar_42;
  c_1.w = tmpvar_43.w;
  c_1.xyz = tmpvar_42;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_44;
  xlat_varoutput_44.xyz = c_1.xyz;
  xlat_varoutput_44.w = 1.0;
  gl_FragData[0] = xlat_varoutput_44;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_NORMALMAP" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_11;
  tmpvar_11 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_12;
  texcoord_12.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_13;
  if ((_UVSec == 0.0)) {
    tmpvar_13 = tmpvar_2;
  } else {
    tmpvar_13 = tmpvar_3;
  };
  texcoord_12.zw = ((tmpvar_13 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_14;
  n_14 = (tmpvar_10.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_15;
  norm_15 = tmpvar_1;
  highp vec4 v_16;
  v_16.x = _World2Object[0].x;
  v_16.y = _World2Object[1].x;
  v_16.z = _World2Object[2].x;
  v_16.w = _World2Object[3].x;
  highp vec4 v_17;
  v_17.x = _World2Object[0].y;
  v_17.y = _World2Object[1].y;
  v_17.z = _World2Object[2].y;
  v_17.w = _World2Object[3].y;
  highp vec4 v_18;
  v_18.x = _World2Object[0].z;
  v_18.y = _World2Object[1].z;
  v_18.z = _World2Object[2].z;
  v_18.w = _World2Object[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(((
    (v_16.xyz * norm_15.x)
   + 
    (v_17.xyz * norm_15.y)
  ) + (v_18.xyz * norm_15.z)));
  highp vec3 dir_20;
  dir_20 = tmpvar_4.xyz;
  highp mat3 tmpvar_21;
  tmpvar_21[0] = _Object2World[0].xyz;
  tmpvar_21[1] = _Object2World[1].xyz;
  tmpvar_21[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = normalize((tmpvar_21 * dir_20));
  tmpvar_22.w = tmpvar_4.w;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.www;
  mediump vec3 normal_24;
  normal_24 = tmpvar_19;
  mediump vec3 tangent_25;
  tangent_25 = tmpvar_22.xyz;
  mediump vec3 flip_26;
  flip_26 = tmpvar_23;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (((normal_24.yzx * tangent_25.zxy) - (normal_24.zxy * tangent_25.yzx)) * flip_26);
  mediump mat3 tmpvar_28;
  tmpvar_28[0].x = tangent_25.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = normal_24.x;
  tmpvar_28[1].x = tangent_25.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = normal_24.y;
  tmpvar_28[2].x = tangent_25.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = normal_24.z;
  tangentToWorld_5 = tmpvar_28;
  highp vec3 v_29;
  v_29.x = tangentToWorld_5[0].x;
  v_29.y = tangentToWorld_5[1].x;
  v_29.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].y;
  v_30.y = tangentToWorld_5[1].y;
  v_30.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].z;
  v_31.y = tangentToWorld_5[1].z;
  v_31.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_31;
  highp vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = tmpvar_19;
  mediump vec4 normal_33;
  normal_33 = tmpvar_32;
  mediump vec3 x2_34;
  mediump vec3 x1_35;
  x1_35.x = dot (unity_SHAr, normal_33);
  x1_35.y = dot (unity_SHAg, normal_33);
  x1_35.z = dot (unity_SHAb, normal_33);
  mediump vec4 tmpvar_36;
  tmpvar_36 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_36);
  x2_34.y = dot (unity_SHBg, tmpvar_36);
  x2_34.z = dot (unity_SHBb, tmpvar_36);
  tmpvar_9.xyz = ((x2_34 + (unity_SHC.xyz * 
    ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
  )) + x1_35);
  highp vec3 lightColor0_37;
  lightColor0_37 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_38;
  lightColor1_38 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_39;
  lightColor2_39 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_40;
  lightColor3_40 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_41;
  lightAttenSq_41 = unity_4LightAtten0;
  highp vec4 tmpvar_42;
  tmpvar_42 = (unity_4LightPosX0 - tmpvar_10.x);
  highp vec4 tmpvar_43;
  tmpvar_43 = (unity_4LightPosY0 - tmpvar_10.y);
  highp vec4 tmpvar_44;
  tmpvar_44 = (unity_4LightPosZ0 - tmpvar_10.z);
  highp vec4 tmpvar_45;
  tmpvar_45 = (((tmpvar_42 * tmpvar_42) + (tmpvar_43 * tmpvar_43)) + (tmpvar_44 * tmpvar_44));
  highp vec4 tmpvar_46;
  tmpvar_46 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_42 * tmpvar_19.x) + (tmpvar_43 * tmpvar_19.y)) + (tmpvar_44 * tmpvar_19.z))
   * 
    inversesqrt(tmpvar_45)
  )) * (1.0/((1.0 + 
    (tmpvar_45 * lightAttenSq_41)
  ))));
  highp vec3 tmpvar_47;
  tmpvar_47 = (tmpvar_9.xyz + ((
    ((lightColor0_37 * tmpvar_46.x) + (lightColor1_38 * tmpvar_46.y))
   + 
    (lightColor2_39 * tmpvar_46.z)
  ) + (lightColor3_40 * tmpvar_46.w)));
  tmpvar_9.xyz = tmpvar_47;
  gl_Position = tmpvar_11;
  xlv_TEXCOORD0 = texcoord_12;
  xlv_TEXCOORD1 = normalize(n_14);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 unity_ColorSpaceDouble;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _DetailAlbedoMap;
uniform sampler2D _BumpMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 c_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_2 = xlv_TEXCOORD2.xyz;
  tmpvar_3 = xlv_TEXCOORD2_1.xyz;
  tmpvar_4 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_5;
  tmpvar_5[0].x = tmpvar_2.x;
  tmpvar_5[0].y = tmpvar_3.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = tmpvar_2.y;
  tmpvar_5[1].y = tmpvar_3.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = tmpvar_2.z;
  tmpvar_5[2].y = tmpvar_3.z;
  tmpvar_5[2].z = tmpvar_4.z;
  lowp vec4 cse_6;
  cse_6 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_8;
  packednormal_8 = tmpvar_7;
  mediump vec3 n_9;
  n_9 = (((packednormal_8.xyz * 2.0) - 1.0) * tmpvar_5);
  mediump vec4 sg_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_10 = tmpvar_11;
  mediump vec3 detailAlbedo_12;
  lowp vec3 tmpvar_13;
  tmpvar_13 = texture2D (_DetailAlbedoMap, xlv_TEXCOORD0.zw).xyz;
  detailAlbedo_12 = tmpvar_13;
  mediump vec3 tmpvar_14;
  mediump float tmpvar_15;
  tmpvar_15 = (1.0 - sg_10.x);
  tmpvar_14 = (((_Color.xyz * cse_6.xyz) * (detailAlbedo_12 * unity_ColorSpaceDouble.xyz)) * tmpvar_15);
  mediump vec3 tmpvar_16;
  lowp vec3 tmpvar_17;
  tmpvar_17 = _LightColor0.xyz;
  tmpvar_16 = tmpvar_17;
  mediump float tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_18 = tmpvar_19.y;
  highp vec3 tmpvar_20;
  highp vec4 tmpvar_21;
  mediump vec3 cse_22;
  cse_22 = -(xlv_TEXCOORD1);
  tmpvar_20 = cse_22;
  tmpvar_21 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_23;
  mediump vec3 worldNormal_24;
  highp vec3 tmpvar_25;
  highp vec3 I_26;
  I_26 = -(tmpvar_20);
  tmpvar_25 = (I_26 - (2.0 * (
    dot (n_9, I_26)
   * n_9)));
  worldNormal_24 = tmpvar_25;
  mediump vec4 hdr_27;
  hdr_27 = tmpvar_21;
  highp float mip_28;
  mediump float tmpvar_29;
  tmpvar_29 = ((1.0 - sg_10.w) * 7.0);
  mip_28 = tmpvar_29;
  highp vec4 tmpvar_30;
  tmpvar_30.xyz = worldNormal_24;
  tmpvar_30.w = mip_28;
  lowp vec4 tmpvar_31;
  tmpvar_31 = textureCube (unity_SpecCube0, tmpvar_30.xyz, mip_28);
  mediump vec4 tmpvar_32;
  tmpvar_32 = tmpvar_31;
  tmpvar_23 = ((tmpvar_32.w * hdr_27.x) * tmpvar_32.xyz);
  tmpvar_23 = (tmpvar_23 * tmpvar_18);
  mediump vec2 tmpvar_33;
  tmpvar_33.x = dot ((cse_22 - (2.0 * 
    (dot (n_9, cse_22) * n_9)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_33.y = (1.0 - clamp (dot (n_9, cse_22), 0.0, 1.0));
  mediump vec2 tmpvar_34;
  tmpvar_34 = (((tmpvar_33 * tmpvar_33) * tmpvar_33) * tmpvar_33);
  mediump vec2 tmpvar_35;
  tmpvar_35.x = tmpvar_34.x;
  tmpvar_35.y = (1.0 - sg_10.w);
  lowp vec4 tmpvar_36;
  tmpvar_36 = texture2D (unity_NHxRoughness, tmpvar_35);
  mediump vec3 tmpvar_37;
  tmpvar_37 = (((
    ((tmpvar_14 + ((tmpvar_36.w * 16.0) * sg_10.xyz)) * tmpvar_16)
   * 
    clamp (dot (n_9, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_18)
   * tmpvar_14)) + (tmpvar_23 * mix (sg_10.xyz, vec3(
    clamp ((sg_10.w + (1.0 - tmpvar_15)), 0.0, 1.0)
  ), tmpvar_34.yyy)));
  mediump vec4 tmpvar_38;
  tmpvar_38.w = 1.0;
  tmpvar_38.xyz = tmpvar_37;
  c_1.w = tmpvar_38.w;
  c_1.xyz = tmpvar_37;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_39;
  xlat_varoutput_39.xyz = c_1.xyz;
  xlat_varoutput_39.w = 1.0;
  gl_FragData[0] = xlat_varoutput_39;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_NORMALMAP" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_11;
  tmpvar_11 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_12;
  texcoord_12.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_13;
  if ((_UVSec == 0.0)) {
    tmpvar_13 = tmpvar_2;
  } else {
    tmpvar_13 = tmpvar_3;
  };
  texcoord_12.zw = ((tmpvar_13 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_14;
  n_14 = (tmpvar_10.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_15;
  norm_15 = tmpvar_1;
  highp vec4 v_16;
  v_16.x = _World2Object[0].x;
  v_16.y = _World2Object[1].x;
  v_16.z = _World2Object[2].x;
  v_16.w = _World2Object[3].x;
  highp vec4 v_17;
  v_17.x = _World2Object[0].y;
  v_17.y = _World2Object[1].y;
  v_17.z = _World2Object[2].y;
  v_17.w = _World2Object[3].y;
  highp vec4 v_18;
  v_18.x = _World2Object[0].z;
  v_18.y = _World2Object[1].z;
  v_18.z = _World2Object[2].z;
  v_18.w = _World2Object[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(((
    (v_16.xyz * norm_15.x)
   + 
    (v_17.xyz * norm_15.y)
  ) + (v_18.xyz * norm_15.z)));
  highp vec3 dir_20;
  dir_20 = tmpvar_4.xyz;
  highp mat3 tmpvar_21;
  tmpvar_21[0] = _Object2World[0].xyz;
  tmpvar_21[1] = _Object2World[1].xyz;
  tmpvar_21[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = normalize((tmpvar_21 * dir_20));
  tmpvar_22.w = tmpvar_4.w;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.www;
  mediump vec3 normal_24;
  normal_24 = tmpvar_19;
  mediump vec3 tangent_25;
  tangent_25 = tmpvar_22.xyz;
  mediump vec3 flip_26;
  flip_26 = tmpvar_23;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (((normal_24.yzx * tangent_25.zxy) - (normal_24.zxy * tangent_25.yzx)) * flip_26);
  mediump mat3 tmpvar_28;
  tmpvar_28[0].x = tangent_25.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = normal_24.x;
  tmpvar_28[1].x = tangent_25.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = normal_24.y;
  tmpvar_28[2].x = tangent_25.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = normal_24.z;
  tangentToWorld_5 = tmpvar_28;
  highp vec3 v_29;
  v_29.x = tangentToWorld_5[0].x;
  v_29.y = tangentToWorld_5[1].x;
  v_29.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].y;
  v_30.y = tangentToWorld_5[1].y;
  v_30.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].z;
  v_31.y = tangentToWorld_5[1].z;
  v_31.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_31;
  highp vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = tmpvar_19;
  mediump vec4 normal_33;
  normal_33 = tmpvar_32;
  mediump vec3 x2_34;
  mediump vec3 x1_35;
  x1_35.x = dot (unity_SHAr, normal_33);
  x1_35.y = dot (unity_SHAg, normal_33);
  x1_35.z = dot (unity_SHAb, normal_33);
  mediump vec4 tmpvar_36;
  tmpvar_36 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_36);
  x2_34.y = dot (unity_SHBg, tmpvar_36);
  x2_34.z = dot (unity_SHBb, tmpvar_36);
  tmpvar_9.xyz = ((x2_34 + (unity_SHC.xyz * 
    ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
  )) + x1_35);
  highp vec3 lightColor0_37;
  lightColor0_37 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_38;
  lightColor1_38 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_39;
  lightColor2_39 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_40;
  lightColor3_40 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_41;
  lightAttenSq_41 = unity_4LightAtten0;
  highp vec4 tmpvar_42;
  tmpvar_42 = (unity_4LightPosX0 - tmpvar_10.x);
  highp vec4 tmpvar_43;
  tmpvar_43 = (unity_4LightPosY0 - tmpvar_10.y);
  highp vec4 tmpvar_44;
  tmpvar_44 = (unity_4LightPosZ0 - tmpvar_10.z);
  highp vec4 tmpvar_45;
  tmpvar_45 = (((tmpvar_42 * tmpvar_42) + (tmpvar_43 * tmpvar_43)) + (tmpvar_44 * tmpvar_44));
  highp vec4 tmpvar_46;
  tmpvar_46 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_42 * tmpvar_19.x) + (tmpvar_43 * tmpvar_19.y)) + (tmpvar_44 * tmpvar_19.z))
   * 
    inversesqrt(tmpvar_45)
  )) * (1.0/((1.0 + 
    (tmpvar_45 * lightAttenSq_41)
  ))));
  highp vec3 tmpvar_47;
  tmpvar_47 = (tmpvar_9.xyz + ((
    ((lightColor0_37 * tmpvar_46.x) + (lightColor1_38 * tmpvar_46.y))
   + 
    (lightColor2_39 * tmpvar_46.z)
  ) + (lightColor3_40 * tmpvar_46.w)));
  tmpvar_9.xyz = tmpvar_47;
  gl_Position = tmpvar_11;
  xlv_TEXCOORD0 = texcoord_12;
  xlv_TEXCOORD1 = normalize(n_14);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 unity_ColorSpaceDouble;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _DetailAlbedoMap;
uniform sampler2D _BumpMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 c_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_2 = xlv_TEXCOORD2.xyz;
  tmpvar_3 = xlv_TEXCOORD2_1.xyz;
  tmpvar_4 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_5;
  tmpvar_5[0].x = tmpvar_2.x;
  tmpvar_5[0].y = tmpvar_3.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = tmpvar_2.y;
  tmpvar_5[1].y = tmpvar_3.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = tmpvar_2.z;
  tmpvar_5[2].y = tmpvar_3.z;
  tmpvar_5[2].z = tmpvar_4.z;
  lowp vec4 cse_6;
  cse_6 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_8;
  packednormal_8 = tmpvar_7;
  mediump vec3 n_9;
  n_9 = (((packednormal_8.xyz * 2.0) - 1.0) * tmpvar_5);
  mediump vec4 sg_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_10 = tmpvar_11;
  mediump vec3 detailAlbedo_12;
  lowp vec3 tmpvar_13;
  tmpvar_13 = texture (_DetailAlbedoMap, xlv_TEXCOORD0.zw).xyz;
  detailAlbedo_12 = tmpvar_13;
  mediump vec3 tmpvar_14;
  mediump float tmpvar_15;
  tmpvar_15 = (1.0 - sg_10.x);
  tmpvar_14 = (((_Color.xyz * cse_6.xyz) * (detailAlbedo_12 * unity_ColorSpaceDouble.xyz)) * tmpvar_15);
  mediump vec3 tmpvar_16;
  lowp vec3 tmpvar_17;
  tmpvar_17 = _LightColor0.xyz;
  tmpvar_16 = tmpvar_17;
  mediump float tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_18 = tmpvar_19.y;
  highp vec3 tmpvar_20;
  highp vec4 tmpvar_21;
  mediump vec3 cse_22;
  cse_22 = -(xlv_TEXCOORD1);
  tmpvar_20 = cse_22;
  tmpvar_21 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_23;
  mediump vec3 worldNormal_24;
  highp vec3 tmpvar_25;
  highp vec3 I_26;
  I_26 = -(tmpvar_20);
  tmpvar_25 = (I_26 - (2.0 * (
    dot (n_9, I_26)
   * n_9)));
  worldNormal_24 = tmpvar_25;
  mediump vec4 hdr_27;
  hdr_27 = tmpvar_21;
  highp float mip_28;
  mediump float tmpvar_29;
  tmpvar_29 = ((1.0 - sg_10.w) * 7.0);
  mip_28 = tmpvar_29;
  highp vec4 tmpvar_30;
  tmpvar_30.xyz = worldNormal_24;
  tmpvar_30.w = mip_28;
  lowp vec4 tmpvar_31;
  tmpvar_31 = texture (unity_SpecCube0, tmpvar_30.xyz, mip_28);
  mediump vec4 tmpvar_32;
  tmpvar_32 = tmpvar_31;
  tmpvar_23 = ((tmpvar_32.w * hdr_27.x) * tmpvar_32.xyz);
  tmpvar_23 = (tmpvar_23 * tmpvar_18);
  mediump vec2 tmpvar_33;
  tmpvar_33.x = dot ((cse_22 - (2.0 * 
    (dot (n_9, cse_22) * n_9)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_33.y = (1.0 - clamp (dot (n_9, cse_22), 0.0, 1.0));
  mediump vec2 tmpvar_34;
  tmpvar_34 = (((tmpvar_33 * tmpvar_33) * tmpvar_33) * tmpvar_33);
  mediump vec2 tmpvar_35;
  tmpvar_35.x = tmpvar_34.x;
  tmpvar_35.y = (1.0 - sg_10.w);
  lowp vec4 tmpvar_36;
  tmpvar_36 = texture (unity_NHxRoughness, tmpvar_35);
  mediump vec3 tmpvar_37;
  tmpvar_37 = (((
    ((tmpvar_14 + ((tmpvar_36.w * 16.0) * sg_10.xyz)) * tmpvar_16)
   * 
    clamp (dot (n_9, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_18)
   * tmpvar_14)) + (tmpvar_23 * mix (sg_10.xyz, vec3(
    clamp ((sg_10.w + (1.0 - tmpvar_15)), 0.0, 1.0)
  ), tmpvar_34.yyy)));
  mediump vec4 tmpvar_38;
  tmpvar_38.w = 1.0;
  tmpvar_38.xyz = tmpvar_37;
  c_1.w = tmpvar_38.w;
  c_1.xyz = tmpvar_37;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_39;
  xlat_varoutput_39.xyz = c_1.xyz;
  xlat_varoutput_39.w = 1.0;
  _glesFragData[0] = xlat_varoutput_39;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_NORMALMAP" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec4 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_5 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].x;
  v_30.y = tangentToWorld_5[1].x;
  v_30.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].y;
  v_31.y = tangentToWorld_5[1].y;
  v_31.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_5[0].z;
  v_32.y = tangentToWorld_5[1].z;
  v_32.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_32;
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_10 = tmpvar_33;
  highp vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = tmpvar_20;
  mediump vec4 normal_35;
  normal_35 = tmpvar_34;
  mediump vec3 x2_36;
  mediump vec3 x1_37;
  x1_37.x = dot (unity_SHAr, normal_35);
  x1_37.y = dot (unity_SHAg, normal_35);
  x1_37.z = dot (unity_SHAb, normal_35);
  mediump vec4 tmpvar_38;
  tmpvar_38 = (normal_35.xyzz * normal_35.yzzx);
  x2_36.x = dot (unity_SHBr, tmpvar_38);
  x2_36.y = dot (unity_SHBg, tmpvar_38);
  x2_36.z = dot (unity_SHBb, tmpvar_38);
  tmpvar_9.xyz = ((x2_36 + (unity_SHC.xyz * 
    ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
  )) + x1_37);
  highp vec3 lightColor0_39;
  lightColor0_39 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_40;
  lightColor1_40 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_41;
  lightColor2_41 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_42;
  lightColor3_42 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_43;
  lightAttenSq_43 = unity_4LightAtten0;
  highp vec4 tmpvar_44;
  tmpvar_44 = (unity_4LightPosX0 - tmpvar_11.x);
  highp vec4 tmpvar_45;
  tmpvar_45 = (unity_4LightPosY0 - tmpvar_11.y);
  highp vec4 tmpvar_46;
  tmpvar_46 = (unity_4LightPosZ0 - tmpvar_11.z);
  highp vec4 tmpvar_47;
  tmpvar_47 = (((tmpvar_44 * tmpvar_44) + (tmpvar_45 * tmpvar_45)) + (tmpvar_46 * tmpvar_46));
  highp vec4 tmpvar_48;
  tmpvar_48 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_44 * tmpvar_20.x) + (tmpvar_45 * tmpvar_20.y)) + (tmpvar_46 * tmpvar_20.z))
   * 
    inversesqrt(tmpvar_47)
  )) * (1.0/((1.0 + 
    (tmpvar_47 * lightAttenSq_43)
  ))));
  highp vec3 tmpvar_49;
  tmpvar_49 = (tmpvar_9.xyz + ((
    ((lightColor0_39 * tmpvar_48.x) + (lightColor1_40 * tmpvar_48.y))
   + 
    (lightColor2_41 * tmpvar_48.z)
  ) + (lightColor3_42 * tmpvar_48.w)));
  tmpvar_9.xyz = tmpvar_49;
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 unity_ColorSpaceDouble;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _DetailAlbedoMap;
uniform sampler2D _BumpMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform sampler2D _ShadowMapTexture;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = xlv_TEXCOORD2_1.xyz;
  tmpvar_5 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_3.x;
  tmpvar_6[0].y = tmpvar_4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = tmpvar_3.y;
  tmpvar_6[1].y = tmpvar_4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = tmpvar_3.z;
  tmpvar_6[2].y = tmpvar_4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  lowp vec4 cse_7;
  cse_7 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_9;
  packednormal_9 = tmpvar_8;
  mediump vec3 n_10;
  n_10 = (((packednormal_9.xyz * 2.0) - 1.0) * tmpvar_6);
  mediump vec4 sg_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_11 = tmpvar_12;
  mediump vec3 detailAlbedo_13;
  lowp vec3 tmpvar_14;
  tmpvar_14 = texture2D (_DetailAlbedoMap, xlv_TEXCOORD0.zw).xyz;
  detailAlbedo_13 = tmpvar_14;
  mediump vec3 tmpvar_15;
  mediump float tmpvar_16;
  tmpvar_16 = (1.0 - sg_11.x);
  tmpvar_15 = (((_Color.xyz * cse_7.xyz) * (detailAlbedo_13 * unity_ColorSpaceDouble.xyz)) * tmpvar_16);
  mediump vec3 tmpvar_17;
  lowp vec3 tmpvar_18;
  tmpvar_18 = _LightColor0.xyz;
  tmpvar_17 = tmpvar_18;
  lowp float tmpvar_19;
  mediump float dist_20;
  lowp float tmpvar_21;
  tmpvar_21 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_20 = tmpvar_21;
  mediump float tmpvar_22;
  tmpvar_22 = max (float((dist_20 > 
    (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w)
  )), _LightShadowData.x);
  tmpvar_19 = tmpvar_22;
  atten_2 = tmpvar_19;
  mediump float tmpvar_23;
  lowp vec4 tmpvar_24;
  tmpvar_24 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_23 = tmpvar_24.y;
  highp vec3 tmpvar_25;
  highp vec4 tmpvar_26;
  mediump vec3 cse_27;
  cse_27 = -(xlv_TEXCOORD1);
  tmpvar_25 = cse_27;
  tmpvar_26 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_28;
  mediump vec3 worldNormal_29;
  highp vec3 tmpvar_30;
  highp vec3 I_31;
  I_31 = -(tmpvar_25);
  tmpvar_30 = (I_31 - (2.0 * (
    dot (n_10, I_31)
   * n_10)));
  worldNormal_29 = tmpvar_30;
  mediump vec4 hdr_32;
  hdr_32 = tmpvar_26;
  highp float mip_33;
  mediump float tmpvar_34;
  tmpvar_34 = ((1.0 - sg_11.w) * 7.0);
  mip_33 = tmpvar_34;
  highp vec4 tmpvar_35;
  tmpvar_35.xyz = worldNormal_29;
  tmpvar_35.w = mip_33;
  lowp vec4 tmpvar_36;
  tmpvar_36 = textureCube (unity_SpecCube0, tmpvar_35.xyz, mip_33);
  mediump vec4 tmpvar_37;
  tmpvar_37 = tmpvar_36;
  tmpvar_28 = ((tmpvar_37.w * hdr_32.x) * tmpvar_37.xyz);
  tmpvar_28 = (tmpvar_28 * tmpvar_23);
  mediump vec2 tmpvar_38;
  tmpvar_38.x = dot ((cse_27 - (2.0 * 
    (dot (n_10, cse_27) * n_10)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_38.y = (1.0 - clamp (dot (n_10, cse_27), 0.0, 1.0));
  mediump vec2 tmpvar_39;
  tmpvar_39 = (((tmpvar_38 * tmpvar_38) * tmpvar_38) * tmpvar_38);
  mediump vec2 tmpvar_40;
  tmpvar_40.x = tmpvar_39.x;
  tmpvar_40.y = (1.0 - sg_11.w);
  lowp vec4 tmpvar_41;
  tmpvar_41 = texture2D (unity_NHxRoughness, tmpvar_40);
  mediump vec3 tmpvar_42;
  tmpvar_42 = (((
    ((tmpvar_15 + ((tmpvar_41.w * 16.0) * sg_11.xyz)) * (tmpvar_17 * atten_2))
   * 
    clamp (dot (n_10, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_23)
   * tmpvar_15)) + (tmpvar_28 * mix (sg_11.xyz, vec3(
    clamp ((sg_11.w + (1.0 - tmpvar_16)), 0.0, 1.0)
  ), tmpvar_39.yyy)));
  mediump vec4 tmpvar_43;
  tmpvar_43.w = 1.0;
  tmpvar_43.xyz = tmpvar_42;
  c_1.w = tmpvar_43.w;
  c_1.xyz = tmpvar_42;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_44;
  xlat_varoutput_44.xyz = c_1.xyz;
  xlat_varoutput_44.w = 1.0;
  gl_FragData[0] = xlat_varoutput_44;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec4 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_5 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].x;
  v_30.y = tangentToWorld_5[1].x;
  v_30.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].y;
  v_31.y = tangentToWorld_5[1].y;
  v_31.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_5[0].z;
  v_32.y = tangentToWorld_5[1].z;
  v_32.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_32;
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_10 = tmpvar_33;
  highp vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = tmpvar_20;
  mediump vec4 normal_35;
  normal_35 = tmpvar_34;
  mediump vec3 x2_36;
  mediump vec3 x1_37;
  x1_37.x = dot (unity_SHAr, normal_35);
  x1_37.y = dot (unity_SHAg, normal_35);
  x1_37.z = dot (unity_SHAb, normal_35);
  mediump vec4 tmpvar_38;
  tmpvar_38 = (normal_35.xyzz * normal_35.yzzx);
  x2_36.x = dot (unity_SHBr, tmpvar_38);
  x2_36.y = dot (unity_SHBg, tmpvar_38);
  x2_36.z = dot (unity_SHBb, tmpvar_38);
  tmpvar_9.xyz = ((x2_36 + (unity_SHC.xyz * 
    ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
  )) + x1_37);
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 unity_ColorSpaceDouble;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _DetailAlbedoMap;
uniform sampler2D _BumpMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform lowp sampler2DShadow _ShadowMapTexture;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = xlv_TEXCOORD2_1.xyz;
  tmpvar_5 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_3.x;
  tmpvar_6[0].y = tmpvar_4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = tmpvar_3.y;
  tmpvar_6[1].y = tmpvar_4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = tmpvar_3.z;
  tmpvar_6[2].y = tmpvar_4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  lowp vec4 cse_7;
  cse_7 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_9;
  packednormal_9 = tmpvar_8;
  mediump vec3 n_10;
  n_10 = (((packednormal_9.xyz * 2.0) - 1.0) * tmpvar_6);
  mediump vec4 sg_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_11 = tmpvar_12;
  mediump vec3 detailAlbedo_13;
  lowp vec3 tmpvar_14;
  tmpvar_14 = texture2D (_DetailAlbedoMap, xlv_TEXCOORD0.zw).xyz;
  detailAlbedo_13 = tmpvar_14;
  mediump vec3 tmpvar_15;
  mediump float tmpvar_16;
  tmpvar_16 = (1.0 - sg_11.x);
  tmpvar_15 = (((_Color.xyz * cse_7.xyz) * (detailAlbedo_13 * unity_ColorSpaceDouble.xyz)) * tmpvar_16);
  mediump vec3 tmpvar_17;
  lowp vec3 tmpvar_18;
  tmpvar_18 = _LightColor0.xyz;
  tmpvar_17 = tmpvar_18;
  lowp float shadow_19;
  lowp float tmpvar_20;
  tmpvar_20 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  mediump float tmpvar_21;
  tmpvar_21 = (_LightShadowData.x + (tmpvar_20 * (1.0 - _LightShadowData.x)));
  shadow_19 = tmpvar_21;
  atten_2 = shadow_19;
  mediump float tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_22 = tmpvar_23.y;
  highp vec3 tmpvar_24;
  highp vec4 tmpvar_25;
  mediump vec3 cse_26;
  cse_26 = -(xlv_TEXCOORD1);
  tmpvar_24 = cse_26;
  tmpvar_25 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_27;
  mediump vec3 worldNormal_28;
  highp vec3 tmpvar_29;
  highp vec3 I_30;
  I_30 = -(tmpvar_24);
  tmpvar_29 = (I_30 - (2.0 * (
    dot (n_10, I_30)
   * n_10)));
  worldNormal_28 = tmpvar_29;
  mediump vec4 hdr_31;
  hdr_31 = tmpvar_25;
  highp float mip_32;
  mediump float tmpvar_33;
  tmpvar_33 = ((1.0 - sg_11.w) * 7.0);
  mip_32 = tmpvar_33;
  highp vec4 tmpvar_34;
  tmpvar_34.xyz = worldNormal_28;
  tmpvar_34.w = mip_32;
  lowp vec4 tmpvar_35;
  tmpvar_35 = textureCube (unity_SpecCube0, tmpvar_34.xyz, mip_32);
  mediump vec4 tmpvar_36;
  tmpvar_36 = tmpvar_35;
  tmpvar_27 = ((tmpvar_36.w * hdr_31.x) * tmpvar_36.xyz);
  tmpvar_27 = (tmpvar_27 * tmpvar_22);
  mediump vec2 tmpvar_37;
  tmpvar_37.x = dot ((cse_26 - (2.0 * 
    (dot (n_10, cse_26) * n_10)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_37.y = (1.0 - clamp (dot (n_10, cse_26), 0.0, 1.0));
  mediump vec2 tmpvar_38;
  tmpvar_38 = (((tmpvar_37 * tmpvar_37) * tmpvar_37) * tmpvar_37);
  mediump vec2 tmpvar_39;
  tmpvar_39.x = tmpvar_38.x;
  tmpvar_39.y = (1.0 - sg_11.w);
  lowp vec4 tmpvar_40;
  tmpvar_40 = texture2D (unity_NHxRoughness, tmpvar_39);
  mediump vec3 tmpvar_41;
  tmpvar_41 = (((
    ((tmpvar_15 + ((tmpvar_40.w * 16.0) * sg_11.xyz)) * (tmpvar_17 * atten_2))
   * 
    clamp (dot (n_10, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_22)
   * tmpvar_15)) + (tmpvar_27 * mix (sg_11.xyz, vec3(
    clamp ((sg_11.w + (1.0 - tmpvar_16)), 0.0, 1.0)
  ), tmpvar_38.yyy)));
  mediump vec4 tmpvar_42;
  tmpvar_42.w = 1.0;
  tmpvar_42.xyz = tmpvar_41;
  c_1.w = tmpvar_42.w;
  c_1.xyz = tmpvar_41;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_43;
  xlat_varoutput_43.xyz = c_1.xyz;
  xlat_varoutput_43.w = 1.0;
  gl_FragData[0] = xlat_varoutput_43;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
out mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec4 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_5 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].x;
  v_30.y = tangentToWorld_5[1].x;
  v_30.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].y;
  v_31.y = tangentToWorld_5[1].y;
  v_31.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_5[0].z;
  v_32.y = tangentToWorld_5[1].z;
  v_32.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_32;
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_10 = tmpvar_33;
  highp vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = tmpvar_20;
  mediump vec4 normal_35;
  normal_35 = tmpvar_34;
  mediump vec3 x2_36;
  mediump vec3 x1_37;
  x1_37.x = dot (unity_SHAr, normal_35);
  x1_37.y = dot (unity_SHAg, normal_35);
  x1_37.z = dot (unity_SHAb, normal_35);
  mediump vec4 tmpvar_38;
  tmpvar_38 = (normal_35.xyzz * normal_35.yzzx);
  x2_36.x = dot (unity_SHBr, tmpvar_38);
  x2_36.y = dot (unity_SHBg, tmpvar_38);
  x2_36.z = dot (unity_SHBb, tmpvar_38);
  tmpvar_9.xyz = ((x2_36 + (unity_SHC.xyz * 
    ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
  )) + x1_37);
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 unity_ColorSpaceDouble;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _DetailAlbedoMap;
uniform sampler2D _BumpMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform lowp sampler2DShadow _ShadowMapTexture;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
in mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = xlv_TEXCOORD2_1.xyz;
  tmpvar_5 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_3.x;
  tmpvar_6[0].y = tmpvar_4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = tmpvar_3.y;
  tmpvar_6[1].y = tmpvar_4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = tmpvar_3.z;
  tmpvar_6[2].y = tmpvar_4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  lowp vec4 cse_7;
  cse_7 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_9;
  packednormal_9 = tmpvar_8;
  mediump vec3 n_10;
  n_10 = (((packednormal_9.xyz * 2.0) - 1.0) * tmpvar_6);
  mediump vec4 sg_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_11 = tmpvar_12;
  mediump vec3 detailAlbedo_13;
  lowp vec3 tmpvar_14;
  tmpvar_14 = texture (_DetailAlbedoMap, xlv_TEXCOORD0.zw).xyz;
  detailAlbedo_13 = tmpvar_14;
  mediump vec3 tmpvar_15;
  mediump float tmpvar_16;
  tmpvar_16 = (1.0 - sg_11.x);
  tmpvar_15 = (((_Color.xyz * cse_7.xyz) * (detailAlbedo_13 * unity_ColorSpaceDouble.xyz)) * tmpvar_16);
  mediump vec3 tmpvar_17;
  lowp vec3 tmpvar_18;
  tmpvar_18 = _LightColor0.xyz;
  tmpvar_17 = tmpvar_18;
  lowp float shadow_19;
  mediump float tmpvar_20;
  tmpvar_20 = texture (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  lowp float tmpvar_21;
  tmpvar_21 = tmpvar_20;
  mediump float tmpvar_22;
  tmpvar_22 = (_LightShadowData.x + (tmpvar_21 * (1.0 - _LightShadowData.x)));
  shadow_19 = tmpvar_22;
  atten_2 = shadow_19;
  mediump float tmpvar_23;
  lowp vec4 tmpvar_24;
  tmpvar_24 = texture (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_23 = tmpvar_24.y;
  highp vec3 tmpvar_25;
  highp vec4 tmpvar_26;
  mediump vec3 cse_27;
  cse_27 = -(xlv_TEXCOORD1);
  tmpvar_25 = cse_27;
  tmpvar_26 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_28;
  mediump vec3 worldNormal_29;
  highp vec3 tmpvar_30;
  highp vec3 I_31;
  I_31 = -(tmpvar_25);
  tmpvar_30 = (I_31 - (2.0 * (
    dot (n_10, I_31)
   * n_10)));
  worldNormal_29 = tmpvar_30;
  mediump vec4 hdr_32;
  hdr_32 = tmpvar_26;
  highp float mip_33;
  mediump float tmpvar_34;
  tmpvar_34 = ((1.0 - sg_11.w) * 7.0);
  mip_33 = tmpvar_34;
  highp vec4 tmpvar_35;
  tmpvar_35.xyz = worldNormal_29;
  tmpvar_35.w = mip_33;
  lowp vec4 tmpvar_36;
  tmpvar_36 = texture (unity_SpecCube0, tmpvar_35.xyz, mip_33);
  mediump vec4 tmpvar_37;
  tmpvar_37 = tmpvar_36;
  tmpvar_28 = ((tmpvar_37.w * hdr_32.x) * tmpvar_37.xyz);
  tmpvar_28 = (tmpvar_28 * tmpvar_23);
  mediump vec2 tmpvar_38;
  tmpvar_38.x = dot ((cse_27 - (2.0 * 
    (dot (n_10, cse_27) * n_10)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_38.y = (1.0 - clamp (dot (n_10, cse_27), 0.0, 1.0));
  mediump vec2 tmpvar_39;
  tmpvar_39 = (((tmpvar_38 * tmpvar_38) * tmpvar_38) * tmpvar_38);
  mediump vec2 tmpvar_40;
  tmpvar_40.x = tmpvar_39.x;
  tmpvar_40.y = (1.0 - sg_11.w);
  lowp vec4 tmpvar_41;
  tmpvar_41 = texture (unity_NHxRoughness, tmpvar_40);
  mediump vec3 tmpvar_42;
  tmpvar_42 = (((
    ((tmpvar_15 + ((tmpvar_41.w * 16.0) * sg_11.xyz)) * (tmpvar_17 * atten_2))
   * 
    clamp (dot (n_10, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_23)
   * tmpvar_15)) + (tmpvar_28 * mix (sg_11.xyz, vec3(
    clamp ((sg_11.w + (1.0 - tmpvar_16)), 0.0, 1.0)
  ), tmpvar_39.yyy)));
  mediump vec4 tmpvar_43;
  tmpvar_43.w = 1.0;
  tmpvar_43.xyz = tmpvar_42;
  c_1.w = tmpvar_43.w;
  c_1.xyz = tmpvar_42;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_44;
  xlat_varoutput_44.xyz = c_1.xyz;
  xlat_varoutput_44.w = 1.0;
  _glesFragData[0] = xlat_varoutput_44;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_NORMALMAP" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec4 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_5 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].x;
  v_30.y = tangentToWorld_5[1].x;
  v_30.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].y;
  v_31.y = tangentToWorld_5[1].y;
  v_31.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_5[0].z;
  v_32.y = tangentToWorld_5[1].z;
  v_32.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_32;
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_10 = tmpvar_33;
  highp vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = tmpvar_20;
  mediump vec4 normal_35;
  normal_35 = tmpvar_34;
  mediump vec3 x2_36;
  mediump vec3 x1_37;
  x1_37.x = dot (unity_SHAr, normal_35);
  x1_37.y = dot (unity_SHAg, normal_35);
  x1_37.z = dot (unity_SHAb, normal_35);
  mediump vec4 tmpvar_38;
  tmpvar_38 = (normal_35.xyzz * normal_35.yzzx);
  x2_36.x = dot (unity_SHBr, tmpvar_38);
  x2_36.y = dot (unity_SHBg, tmpvar_38);
  x2_36.z = dot (unity_SHBb, tmpvar_38);
  tmpvar_9.xyz = ((x2_36 + (unity_SHC.xyz * 
    ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
  )) + x1_37);
  highp vec3 lightColor0_39;
  lightColor0_39 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_40;
  lightColor1_40 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_41;
  lightColor2_41 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_42;
  lightColor3_42 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_43;
  lightAttenSq_43 = unity_4LightAtten0;
  highp vec4 tmpvar_44;
  tmpvar_44 = (unity_4LightPosX0 - tmpvar_11.x);
  highp vec4 tmpvar_45;
  tmpvar_45 = (unity_4LightPosY0 - tmpvar_11.y);
  highp vec4 tmpvar_46;
  tmpvar_46 = (unity_4LightPosZ0 - tmpvar_11.z);
  highp vec4 tmpvar_47;
  tmpvar_47 = (((tmpvar_44 * tmpvar_44) + (tmpvar_45 * tmpvar_45)) + (tmpvar_46 * tmpvar_46));
  highp vec4 tmpvar_48;
  tmpvar_48 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_44 * tmpvar_20.x) + (tmpvar_45 * tmpvar_20.y)) + (tmpvar_46 * tmpvar_20.z))
   * 
    inversesqrt(tmpvar_47)
  )) * (1.0/((1.0 + 
    (tmpvar_47 * lightAttenSq_43)
  ))));
  highp vec3 tmpvar_49;
  tmpvar_49 = (tmpvar_9.xyz + ((
    ((lightColor0_39 * tmpvar_48.x) + (lightColor1_40 * tmpvar_48.y))
   + 
    (lightColor2_41 * tmpvar_48.z)
  ) + (lightColor3_42 * tmpvar_48.w)));
  tmpvar_9.xyz = tmpvar_49;
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 unity_ColorSpaceDouble;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _DetailAlbedoMap;
uniform sampler2D _BumpMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform lowp sampler2DShadow _ShadowMapTexture;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = xlv_TEXCOORD2_1.xyz;
  tmpvar_5 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_3.x;
  tmpvar_6[0].y = tmpvar_4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = tmpvar_3.y;
  tmpvar_6[1].y = tmpvar_4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = tmpvar_3.z;
  tmpvar_6[2].y = tmpvar_4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  lowp vec4 cse_7;
  cse_7 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_9;
  packednormal_9 = tmpvar_8;
  mediump vec3 n_10;
  n_10 = (((packednormal_9.xyz * 2.0) - 1.0) * tmpvar_6);
  mediump vec4 sg_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_11 = tmpvar_12;
  mediump vec3 detailAlbedo_13;
  lowp vec3 tmpvar_14;
  tmpvar_14 = texture2D (_DetailAlbedoMap, xlv_TEXCOORD0.zw).xyz;
  detailAlbedo_13 = tmpvar_14;
  mediump vec3 tmpvar_15;
  mediump float tmpvar_16;
  tmpvar_16 = (1.0 - sg_11.x);
  tmpvar_15 = (((_Color.xyz * cse_7.xyz) * (detailAlbedo_13 * unity_ColorSpaceDouble.xyz)) * tmpvar_16);
  mediump vec3 tmpvar_17;
  lowp vec3 tmpvar_18;
  tmpvar_18 = _LightColor0.xyz;
  tmpvar_17 = tmpvar_18;
  lowp float shadow_19;
  lowp float tmpvar_20;
  tmpvar_20 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  mediump float tmpvar_21;
  tmpvar_21 = (_LightShadowData.x + (tmpvar_20 * (1.0 - _LightShadowData.x)));
  shadow_19 = tmpvar_21;
  atten_2 = shadow_19;
  mediump float tmpvar_22;
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_22 = tmpvar_23.y;
  highp vec3 tmpvar_24;
  highp vec4 tmpvar_25;
  mediump vec3 cse_26;
  cse_26 = -(xlv_TEXCOORD1);
  tmpvar_24 = cse_26;
  tmpvar_25 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_27;
  mediump vec3 worldNormal_28;
  highp vec3 tmpvar_29;
  highp vec3 I_30;
  I_30 = -(tmpvar_24);
  tmpvar_29 = (I_30 - (2.0 * (
    dot (n_10, I_30)
   * n_10)));
  worldNormal_28 = tmpvar_29;
  mediump vec4 hdr_31;
  hdr_31 = tmpvar_25;
  highp float mip_32;
  mediump float tmpvar_33;
  tmpvar_33 = ((1.0 - sg_11.w) * 7.0);
  mip_32 = tmpvar_33;
  highp vec4 tmpvar_34;
  tmpvar_34.xyz = worldNormal_28;
  tmpvar_34.w = mip_32;
  lowp vec4 tmpvar_35;
  tmpvar_35 = textureCube (unity_SpecCube0, tmpvar_34.xyz, mip_32);
  mediump vec4 tmpvar_36;
  tmpvar_36 = tmpvar_35;
  tmpvar_27 = ((tmpvar_36.w * hdr_31.x) * tmpvar_36.xyz);
  tmpvar_27 = (tmpvar_27 * tmpvar_22);
  mediump vec2 tmpvar_37;
  tmpvar_37.x = dot ((cse_26 - (2.0 * 
    (dot (n_10, cse_26) * n_10)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_37.y = (1.0 - clamp (dot (n_10, cse_26), 0.0, 1.0));
  mediump vec2 tmpvar_38;
  tmpvar_38 = (((tmpvar_37 * tmpvar_37) * tmpvar_37) * tmpvar_37);
  mediump vec2 tmpvar_39;
  tmpvar_39.x = tmpvar_38.x;
  tmpvar_39.y = (1.0 - sg_11.w);
  lowp vec4 tmpvar_40;
  tmpvar_40 = texture2D (unity_NHxRoughness, tmpvar_39);
  mediump vec3 tmpvar_41;
  tmpvar_41 = (((
    ((tmpvar_15 + ((tmpvar_40.w * 16.0) * sg_11.xyz)) * (tmpvar_17 * atten_2))
   * 
    clamp (dot (n_10, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_22)
   * tmpvar_15)) + (tmpvar_27 * mix (sg_11.xyz, vec3(
    clamp ((sg_11.w + (1.0 - tmpvar_16)), 0.0, 1.0)
  ), tmpvar_38.yyy)));
  mediump vec4 tmpvar_42;
  tmpvar_42.w = 1.0;
  tmpvar_42.xyz = tmpvar_41;
  c_1.w = tmpvar_42.w;
  c_1.xyz = tmpvar_41;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_43;
  xlat_varoutput_43.xyz = c_1.xyz;
  xlat_varoutput_43.w = 1.0;
  gl_FragData[0] = xlat_varoutput_43;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_NORMALMAP" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
out mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec4 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_5 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].x;
  v_30.y = tangentToWorld_5[1].x;
  v_30.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].y;
  v_31.y = tangentToWorld_5[1].y;
  v_31.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_5[0].z;
  v_32.y = tangentToWorld_5[1].z;
  v_32.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_32;
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_10 = tmpvar_33;
  highp vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = tmpvar_20;
  mediump vec4 normal_35;
  normal_35 = tmpvar_34;
  mediump vec3 x2_36;
  mediump vec3 x1_37;
  x1_37.x = dot (unity_SHAr, normal_35);
  x1_37.y = dot (unity_SHAg, normal_35);
  x1_37.z = dot (unity_SHAb, normal_35);
  mediump vec4 tmpvar_38;
  tmpvar_38 = (normal_35.xyzz * normal_35.yzzx);
  x2_36.x = dot (unity_SHBr, tmpvar_38);
  x2_36.y = dot (unity_SHBg, tmpvar_38);
  x2_36.z = dot (unity_SHBb, tmpvar_38);
  tmpvar_9.xyz = ((x2_36 + (unity_SHC.xyz * 
    ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
  )) + x1_37);
  highp vec3 lightColor0_39;
  lightColor0_39 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_40;
  lightColor1_40 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_41;
  lightColor2_41 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_42;
  lightColor3_42 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_43;
  lightAttenSq_43 = unity_4LightAtten0;
  highp vec4 tmpvar_44;
  tmpvar_44 = (unity_4LightPosX0 - tmpvar_11.x);
  highp vec4 tmpvar_45;
  tmpvar_45 = (unity_4LightPosY0 - tmpvar_11.y);
  highp vec4 tmpvar_46;
  tmpvar_46 = (unity_4LightPosZ0 - tmpvar_11.z);
  highp vec4 tmpvar_47;
  tmpvar_47 = (((tmpvar_44 * tmpvar_44) + (tmpvar_45 * tmpvar_45)) + (tmpvar_46 * tmpvar_46));
  highp vec4 tmpvar_48;
  tmpvar_48 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_44 * tmpvar_20.x) + (tmpvar_45 * tmpvar_20.y)) + (tmpvar_46 * tmpvar_20.z))
   * 
    inversesqrt(tmpvar_47)
  )) * (1.0/((1.0 + 
    (tmpvar_47 * lightAttenSq_43)
  ))));
  highp vec3 tmpvar_49;
  tmpvar_49 = (tmpvar_9.xyz + ((
    ((lightColor0_39 * tmpvar_48.x) + (lightColor1_40 * tmpvar_48.y))
   + 
    (lightColor2_41 * tmpvar_48.z)
  ) + (lightColor3_42 * tmpvar_48.w)));
  tmpvar_9.xyz = tmpvar_49;
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 unity_ColorSpaceDouble;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _DetailAlbedoMap;
uniform sampler2D _BumpMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform lowp sampler2DShadow _ShadowMapTexture;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
in mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = xlv_TEXCOORD2_1.xyz;
  tmpvar_5 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_3.x;
  tmpvar_6[0].y = tmpvar_4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = tmpvar_3.y;
  tmpvar_6[1].y = tmpvar_4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = tmpvar_3.z;
  tmpvar_6[2].y = tmpvar_4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  lowp vec4 cse_7;
  cse_7 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_9;
  packednormal_9 = tmpvar_8;
  mediump vec3 n_10;
  n_10 = (((packednormal_9.xyz * 2.0) - 1.0) * tmpvar_6);
  mediump vec4 sg_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_11 = tmpvar_12;
  mediump vec3 detailAlbedo_13;
  lowp vec3 tmpvar_14;
  tmpvar_14 = texture (_DetailAlbedoMap, xlv_TEXCOORD0.zw).xyz;
  detailAlbedo_13 = tmpvar_14;
  mediump vec3 tmpvar_15;
  mediump float tmpvar_16;
  tmpvar_16 = (1.0 - sg_11.x);
  tmpvar_15 = (((_Color.xyz * cse_7.xyz) * (detailAlbedo_13 * unity_ColorSpaceDouble.xyz)) * tmpvar_16);
  mediump vec3 tmpvar_17;
  lowp vec3 tmpvar_18;
  tmpvar_18 = _LightColor0.xyz;
  tmpvar_17 = tmpvar_18;
  lowp float shadow_19;
  mediump float tmpvar_20;
  tmpvar_20 = texture (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  lowp float tmpvar_21;
  tmpvar_21 = tmpvar_20;
  mediump float tmpvar_22;
  tmpvar_22 = (_LightShadowData.x + (tmpvar_21 * (1.0 - _LightShadowData.x)));
  shadow_19 = tmpvar_22;
  atten_2 = shadow_19;
  mediump float tmpvar_23;
  lowp vec4 tmpvar_24;
  tmpvar_24 = texture (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_23 = tmpvar_24.y;
  highp vec3 tmpvar_25;
  highp vec4 tmpvar_26;
  mediump vec3 cse_27;
  cse_27 = -(xlv_TEXCOORD1);
  tmpvar_25 = cse_27;
  tmpvar_26 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_28;
  mediump vec3 worldNormal_29;
  highp vec3 tmpvar_30;
  highp vec3 I_31;
  I_31 = -(tmpvar_25);
  tmpvar_30 = (I_31 - (2.0 * (
    dot (n_10, I_31)
   * n_10)));
  worldNormal_29 = tmpvar_30;
  mediump vec4 hdr_32;
  hdr_32 = tmpvar_26;
  highp float mip_33;
  mediump float tmpvar_34;
  tmpvar_34 = ((1.0 - sg_11.w) * 7.0);
  mip_33 = tmpvar_34;
  highp vec4 tmpvar_35;
  tmpvar_35.xyz = worldNormal_29;
  tmpvar_35.w = mip_33;
  lowp vec4 tmpvar_36;
  tmpvar_36 = texture (unity_SpecCube0, tmpvar_35.xyz, mip_33);
  mediump vec4 tmpvar_37;
  tmpvar_37 = tmpvar_36;
  tmpvar_28 = ((tmpvar_37.w * hdr_32.x) * tmpvar_37.xyz);
  tmpvar_28 = (tmpvar_28 * tmpvar_23);
  mediump vec2 tmpvar_38;
  tmpvar_38.x = dot ((cse_27 - (2.0 * 
    (dot (n_10, cse_27) * n_10)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_38.y = (1.0 - clamp (dot (n_10, cse_27), 0.0, 1.0));
  mediump vec2 tmpvar_39;
  tmpvar_39 = (((tmpvar_38 * tmpvar_38) * tmpvar_38) * tmpvar_38);
  mediump vec2 tmpvar_40;
  tmpvar_40.x = tmpvar_39.x;
  tmpvar_40.y = (1.0 - sg_11.w);
  lowp vec4 tmpvar_41;
  tmpvar_41 = texture (unity_NHxRoughness, tmpvar_40);
  mediump vec3 tmpvar_42;
  tmpvar_42 = (((
    ((tmpvar_15 + ((tmpvar_41.w * 16.0) * sg_11.xyz)) * (tmpvar_17 * atten_2))
   * 
    clamp (dot (n_10, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_23)
   * tmpvar_15)) + (tmpvar_28 * mix (sg_11.xyz, vec3(
    clamp ((sg_11.w + (1.0 - tmpvar_16)), 0.0, 1.0)
  ), tmpvar_39.yyy)));
  mediump vec4 tmpvar_43;
  tmpvar_43.w = 1.0;
  tmpvar_43.xyz = tmpvar_42;
  c_1.w = tmpvar_43.w;
  c_1.xyz = tmpvar_42;
  c_1.xyz = c_1.xyz;
  mediump vec4 xlat_varoutput_44;
  xlat_varoutput_44.xyz = c_1.xyz;
  xlat_varoutput_44.w = 1.0;
  _glesFragData[0] = xlat_varoutput_44;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_11;
  tmpvar_11 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_12;
  texcoord_12.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_13;
  if ((_UVSec == 0.0)) {
    tmpvar_13 = tmpvar_2;
  } else {
    tmpvar_13 = tmpvar_3;
  };
  texcoord_12.zw = ((tmpvar_13 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_14;
  n_14 = (tmpvar_10.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_15;
  norm_15 = tmpvar_1;
  highp vec4 v_16;
  v_16.x = _World2Object[0].x;
  v_16.y = _World2Object[1].x;
  v_16.z = _World2Object[2].x;
  v_16.w = _World2Object[3].x;
  highp vec4 v_17;
  v_17.x = _World2Object[0].y;
  v_17.y = _World2Object[1].y;
  v_17.z = _World2Object[2].y;
  v_17.w = _World2Object[3].y;
  highp vec4 v_18;
  v_18.x = _World2Object[0].z;
  v_18.y = _World2Object[1].z;
  v_18.z = _World2Object[2].z;
  v_18.w = _World2Object[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(((
    (v_16.xyz * norm_15.x)
   + 
    (v_17.xyz * norm_15.y)
  ) + (v_18.xyz * norm_15.z)));
  highp vec3 dir_20;
  dir_20 = tmpvar_4.xyz;
  highp mat3 tmpvar_21;
  tmpvar_21[0] = _Object2World[0].xyz;
  tmpvar_21[1] = _Object2World[1].xyz;
  tmpvar_21[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = normalize((tmpvar_21 * dir_20));
  tmpvar_22.w = tmpvar_4.w;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.www;
  mediump vec3 normal_24;
  normal_24 = tmpvar_19;
  mediump vec3 tangent_25;
  tangent_25 = tmpvar_22.xyz;
  mediump vec3 flip_26;
  flip_26 = tmpvar_23;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (((normal_24.yzx * tangent_25.zxy) - (normal_24.zxy * tangent_25.yzx)) * flip_26);
  mediump mat3 tmpvar_28;
  tmpvar_28[0].x = tangent_25.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = normal_24.x;
  tmpvar_28[1].x = tangent_25.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = normal_24.y;
  tmpvar_28[2].x = tangent_25.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = normal_24.z;
  tangentToWorld_5 = tmpvar_28;
  highp vec3 v_29;
  v_29.x = tangentToWorld_5[0].x;
  v_29.y = tangentToWorld_5[1].x;
  v_29.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].y;
  v_30.y = tangentToWorld_5[1].y;
  v_30.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].z;
  v_31.y = tangentToWorld_5[1].z;
  v_31.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_31;
  highp vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = tmpvar_19;
  mediump vec4 normal_33;
  normal_33 = tmpvar_32;
  mediump vec3 x2_34;
  mediump vec3 x1_35;
  x1_35.x = dot (unity_SHAr, normal_33);
  x1_35.y = dot (unity_SHAg, normal_33);
  x1_35.z = dot (unity_SHAb, normal_33);
  mediump vec4 tmpvar_36;
  tmpvar_36 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_36);
  x2_34.y = dot (unity_SHBg, tmpvar_36);
  x2_34.z = dot (unity_SHBb, tmpvar_36);
  tmpvar_9.xyz = ((x2_34 + (unity_SHC.xyz * 
    ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
  )) + x1_35);
  gl_Position = tmpvar_11;
  xlv_TEXCOORD0 = texcoord_12;
  xlv_TEXCOORD1 = normalize(n_14);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform mediump vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 c_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_2 = xlv_TEXCOORD2.xyz;
  tmpvar_3 = xlv_TEXCOORD2_1.xyz;
  tmpvar_4 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_5;
  tmpvar_5[0].x = tmpvar_2.x;
  tmpvar_5[0].y = tmpvar_3.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = tmpvar_2.y;
  tmpvar_5[1].y = tmpvar_3.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = tmpvar_2.z;
  tmpvar_5[2].y = tmpvar_3.z;
  tmpvar_5[2].z = tmpvar_4.z;
  lowp vec4 cse_6;
  cse_6 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_8;
  packednormal_8 = tmpvar_7;
  mediump vec3 n_9;
  n_9 = (((packednormal_8.xyz * 2.0) - 1.0) * tmpvar_5);
  mediump vec4 sg_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_10 = tmpvar_11;
  mediump vec3 tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = (1.0 - sg_10.x);
  tmpvar_12 = ((_Color.xyz * cse_6.xyz) * tmpvar_13);
  mediump vec3 tmpvar_14;
  lowp vec3 tmpvar_15;
  tmpvar_15 = _LightColor0.xyz;
  tmpvar_14 = tmpvar_15;
  mediump float tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_16 = tmpvar_17.y;
  highp vec3 tmpvar_18;
  highp vec4 tmpvar_19;
  mediump vec3 cse_20;
  cse_20 = -(xlv_TEXCOORD1);
  tmpvar_18 = cse_20;
  tmpvar_19 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_21;
  mediump vec3 worldNormal_22;
  highp vec3 tmpvar_23;
  highp vec3 I_24;
  I_24 = -(tmpvar_18);
  tmpvar_23 = (I_24 - (2.0 * (
    dot (n_9, I_24)
   * n_9)));
  worldNormal_22 = tmpvar_23;
  mediump vec4 hdr_25;
  hdr_25 = tmpvar_19;
  highp float mip_26;
  mediump float tmpvar_27;
  tmpvar_27 = ((1.0 - sg_10.w) * 7.0);
  mip_26 = tmpvar_27;
  highp vec4 tmpvar_28;
  tmpvar_28.xyz = worldNormal_22;
  tmpvar_28.w = mip_26;
  lowp vec4 tmpvar_29;
  tmpvar_29 = textureCube (unity_SpecCube0, tmpvar_28.xyz, mip_26);
  mediump vec4 tmpvar_30;
  tmpvar_30 = tmpvar_29;
  tmpvar_21 = ((tmpvar_30.w * hdr_25.x) * tmpvar_30.xyz);
  tmpvar_21 = (tmpvar_21 * tmpvar_16);
  mediump vec2 tmpvar_31;
  tmpvar_31.x = dot ((cse_20 - (2.0 * 
    (dot (n_9, cse_20) * n_9)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_31.y = (1.0 - clamp (dot (n_9, cse_20), 0.0, 1.0));
  mediump vec2 tmpvar_32;
  tmpvar_32 = (((tmpvar_31 * tmpvar_31) * tmpvar_31) * tmpvar_31);
  mediump vec2 tmpvar_33;
  tmpvar_33.x = tmpvar_32.x;
  tmpvar_33.y = (1.0 - sg_10.w);
  lowp vec4 tmpvar_34;
  tmpvar_34 = texture2D (unity_NHxRoughness, tmpvar_33);
  mediump vec3 tmpvar_35;
  tmpvar_35 = (((
    ((tmpvar_12 + ((tmpvar_34.w * 16.0) * sg_10.xyz)) * tmpvar_14)
   * 
    clamp (dot (n_9, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_16)
   * tmpvar_12)) + (tmpvar_21 * mix (sg_10.xyz, vec3(
    clamp ((sg_10.w + (1.0 - tmpvar_13)), 0.0, 1.0)
  ), tmpvar_32.yyy)));
  mediump vec4 tmpvar_36;
  tmpvar_36.w = 1.0;
  tmpvar_36.xyz = tmpvar_35;
  c_1.w = tmpvar_36.w;
  lowp vec4 tmpvar_37;
  tmpvar_37 = texture2D (_EmissionMap, xlv_TEXCOORD0.xy);
  c_1.xyz = (tmpvar_35 + (tmpvar_37.xyz * _EmissionColor.xyz));
  mediump vec4 xlat_varoutput_38;
  xlat_varoutput_38.xyz = c_1.xyz;
  xlat_varoutput_38.w = 1.0;
  gl_FragData[0] = xlat_varoutput_38;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_11;
  tmpvar_11 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_12;
  texcoord_12.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_13;
  if ((_UVSec == 0.0)) {
    tmpvar_13 = tmpvar_2;
  } else {
    tmpvar_13 = tmpvar_3;
  };
  texcoord_12.zw = ((tmpvar_13 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_14;
  n_14 = (tmpvar_10.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_15;
  norm_15 = tmpvar_1;
  highp vec4 v_16;
  v_16.x = _World2Object[0].x;
  v_16.y = _World2Object[1].x;
  v_16.z = _World2Object[2].x;
  v_16.w = _World2Object[3].x;
  highp vec4 v_17;
  v_17.x = _World2Object[0].y;
  v_17.y = _World2Object[1].y;
  v_17.z = _World2Object[2].y;
  v_17.w = _World2Object[3].y;
  highp vec4 v_18;
  v_18.x = _World2Object[0].z;
  v_18.y = _World2Object[1].z;
  v_18.z = _World2Object[2].z;
  v_18.w = _World2Object[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(((
    (v_16.xyz * norm_15.x)
   + 
    (v_17.xyz * norm_15.y)
  ) + (v_18.xyz * norm_15.z)));
  highp vec3 dir_20;
  dir_20 = tmpvar_4.xyz;
  highp mat3 tmpvar_21;
  tmpvar_21[0] = _Object2World[0].xyz;
  tmpvar_21[1] = _Object2World[1].xyz;
  tmpvar_21[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = normalize((tmpvar_21 * dir_20));
  tmpvar_22.w = tmpvar_4.w;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.www;
  mediump vec3 normal_24;
  normal_24 = tmpvar_19;
  mediump vec3 tangent_25;
  tangent_25 = tmpvar_22.xyz;
  mediump vec3 flip_26;
  flip_26 = tmpvar_23;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (((normal_24.yzx * tangent_25.zxy) - (normal_24.zxy * tangent_25.yzx)) * flip_26);
  mediump mat3 tmpvar_28;
  tmpvar_28[0].x = tangent_25.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = normal_24.x;
  tmpvar_28[1].x = tangent_25.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = normal_24.y;
  tmpvar_28[2].x = tangent_25.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = normal_24.z;
  tangentToWorld_5 = tmpvar_28;
  highp vec3 v_29;
  v_29.x = tangentToWorld_5[0].x;
  v_29.y = tangentToWorld_5[1].x;
  v_29.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].y;
  v_30.y = tangentToWorld_5[1].y;
  v_30.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].z;
  v_31.y = tangentToWorld_5[1].z;
  v_31.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_31;
  highp vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = tmpvar_19;
  mediump vec4 normal_33;
  normal_33 = tmpvar_32;
  mediump vec3 x2_34;
  mediump vec3 x1_35;
  x1_35.x = dot (unity_SHAr, normal_33);
  x1_35.y = dot (unity_SHAg, normal_33);
  x1_35.z = dot (unity_SHAb, normal_33);
  mediump vec4 tmpvar_36;
  tmpvar_36 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_36);
  x2_34.y = dot (unity_SHBg, tmpvar_36);
  x2_34.z = dot (unity_SHBb, tmpvar_36);
  tmpvar_9.xyz = ((x2_34 + (unity_SHC.xyz * 
    ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
  )) + x1_35);
  gl_Position = tmpvar_11;
  xlv_TEXCOORD0 = texcoord_12;
  xlv_TEXCOORD1 = normalize(n_14);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform mediump vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 c_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_2 = xlv_TEXCOORD2.xyz;
  tmpvar_3 = xlv_TEXCOORD2_1.xyz;
  tmpvar_4 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_5;
  tmpvar_5[0].x = tmpvar_2.x;
  tmpvar_5[0].y = tmpvar_3.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = tmpvar_2.y;
  tmpvar_5[1].y = tmpvar_3.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = tmpvar_2.z;
  tmpvar_5[2].y = tmpvar_3.z;
  tmpvar_5[2].z = tmpvar_4.z;
  lowp vec4 cse_6;
  cse_6 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_8;
  packednormal_8 = tmpvar_7;
  mediump vec3 n_9;
  n_9 = (((packednormal_8.xyz * 2.0) - 1.0) * tmpvar_5);
  mediump vec4 sg_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_10 = tmpvar_11;
  mediump vec3 tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = (1.0 - sg_10.x);
  tmpvar_12 = ((_Color.xyz * cse_6.xyz) * tmpvar_13);
  mediump vec3 tmpvar_14;
  lowp vec3 tmpvar_15;
  tmpvar_15 = _LightColor0.xyz;
  tmpvar_14 = tmpvar_15;
  mediump float tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_16 = tmpvar_17.y;
  highp vec3 tmpvar_18;
  highp vec4 tmpvar_19;
  mediump vec3 cse_20;
  cse_20 = -(xlv_TEXCOORD1);
  tmpvar_18 = cse_20;
  tmpvar_19 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_21;
  mediump vec3 worldNormal_22;
  highp vec3 tmpvar_23;
  highp vec3 I_24;
  I_24 = -(tmpvar_18);
  tmpvar_23 = (I_24 - (2.0 * (
    dot (n_9, I_24)
   * n_9)));
  worldNormal_22 = tmpvar_23;
  mediump vec4 hdr_25;
  hdr_25 = tmpvar_19;
  highp float mip_26;
  mediump float tmpvar_27;
  tmpvar_27 = ((1.0 - sg_10.w) * 7.0);
  mip_26 = tmpvar_27;
  highp vec4 tmpvar_28;
  tmpvar_28.xyz = worldNormal_22;
  tmpvar_28.w = mip_26;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture (unity_SpecCube0, tmpvar_28.xyz, mip_26);
  mediump vec4 tmpvar_30;
  tmpvar_30 = tmpvar_29;
  tmpvar_21 = ((tmpvar_30.w * hdr_25.x) * tmpvar_30.xyz);
  tmpvar_21 = (tmpvar_21 * tmpvar_16);
  mediump vec2 tmpvar_31;
  tmpvar_31.x = dot ((cse_20 - (2.0 * 
    (dot (n_9, cse_20) * n_9)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_31.y = (1.0 - clamp (dot (n_9, cse_20), 0.0, 1.0));
  mediump vec2 tmpvar_32;
  tmpvar_32 = (((tmpvar_31 * tmpvar_31) * tmpvar_31) * tmpvar_31);
  mediump vec2 tmpvar_33;
  tmpvar_33.x = tmpvar_32.x;
  tmpvar_33.y = (1.0 - sg_10.w);
  lowp vec4 tmpvar_34;
  tmpvar_34 = texture (unity_NHxRoughness, tmpvar_33);
  mediump vec3 tmpvar_35;
  tmpvar_35 = (((
    ((tmpvar_12 + ((tmpvar_34.w * 16.0) * sg_10.xyz)) * tmpvar_14)
   * 
    clamp (dot (n_9, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_16)
   * tmpvar_12)) + (tmpvar_21 * mix (sg_10.xyz, vec3(
    clamp ((sg_10.w + (1.0 - tmpvar_13)), 0.0, 1.0)
  ), tmpvar_32.yyy)));
  mediump vec4 tmpvar_36;
  tmpvar_36.w = 1.0;
  tmpvar_36.xyz = tmpvar_35;
  c_1.w = tmpvar_36.w;
  lowp vec4 tmpvar_37;
  tmpvar_37 = texture (_EmissionMap, xlv_TEXCOORD0.xy);
  c_1.xyz = (tmpvar_35 + (tmpvar_37.xyz * _EmissionColor.xyz));
  mediump vec4 xlat_varoutput_38;
  xlat_varoutput_38.xyz = c_1.xyz;
  xlat_varoutput_38.w = 1.0;
  _glesFragData[0] = xlat_varoutput_38;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec4 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_5 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].x;
  v_30.y = tangentToWorld_5[1].x;
  v_30.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].y;
  v_31.y = tangentToWorld_5[1].y;
  v_31.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_5[0].z;
  v_32.y = tangentToWorld_5[1].z;
  v_32.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_32;
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_10 = tmpvar_33;
  highp vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = tmpvar_20;
  mediump vec4 normal_35;
  normal_35 = tmpvar_34;
  mediump vec3 x2_36;
  mediump vec3 x1_37;
  x1_37.x = dot (unity_SHAr, normal_35);
  x1_37.y = dot (unity_SHAg, normal_35);
  x1_37.z = dot (unity_SHAb, normal_35);
  mediump vec4 tmpvar_38;
  tmpvar_38 = (normal_35.xyzz * normal_35.yzzx);
  x2_36.x = dot (unity_SHBr, tmpvar_38);
  x2_36.y = dot (unity_SHBg, tmpvar_38);
  x2_36.z = dot (unity_SHBb, tmpvar_38);
  tmpvar_9.xyz = ((x2_36 + (unity_SHC.xyz * 
    ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
  )) + x1_37);
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform mediump vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
uniform sampler2D _ShadowMapTexture;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = xlv_TEXCOORD2_1.xyz;
  tmpvar_5 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_3.x;
  tmpvar_6[0].y = tmpvar_4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = tmpvar_3.y;
  tmpvar_6[1].y = tmpvar_4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = tmpvar_3.z;
  tmpvar_6[2].y = tmpvar_4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  lowp vec4 cse_7;
  cse_7 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_9;
  packednormal_9 = tmpvar_8;
  mediump vec3 n_10;
  n_10 = (((packednormal_9.xyz * 2.0) - 1.0) * tmpvar_6);
  mediump vec4 sg_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_11 = tmpvar_12;
  mediump vec3 tmpvar_13;
  mediump float tmpvar_14;
  tmpvar_14 = (1.0 - sg_11.x);
  tmpvar_13 = ((_Color.xyz * cse_7.xyz) * tmpvar_14);
  mediump vec3 tmpvar_15;
  lowp vec3 tmpvar_16;
  tmpvar_16 = _LightColor0.xyz;
  tmpvar_15 = tmpvar_16;
  lowp float tmpvar_17;
  mediump float dist_18;
  lowp float tmpvar_19;
  tmpvar_19 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_18 = tmpvar_19;
  mediump float tmpvar_20;
  tmpvar_20 = max (float((dist_18 > 
    (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w)
  )), _LightShadowData.x);
  tmpvar_17 = tmpvar_20;
  atten_2 = tmpvar_17;
  mediump float tmpvar_21;
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_21 = tmpvar_22.y;
  highp vec3 tmpvar_23;
  highp vec4 tmpvar_24;
  mediump vec3 cse_25;
  cse_25 = -(xlv_TEXCOORD1);
  tmpvar_23 = cse_25;
  tmpvar_24 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_26;
  mediump vec3 worldNormal_27;
  highp vec3 tmpvar_28;
  highp vec3 I_29;
  I_29 = -(tmpvar_23);
  tmpvar_28 = (I_29 - (2.0 * (
    dot (n_10, I_29)
   * n_10)));
  worldNormal_27 = tmpvar_28;
  mediump vec4 hdr_30;
  hdr_30 = tmpvar_24;
  highp float mip_31;
  mediump float tmpvar_32;
  tmpvar_32 = ((1.0 - sg_11.w) * 7.0);
  mip_31 = tmpvar_32;
  highp vec4 tmpvar_33;
  tmpvar_33.xyz = worldNormal_27;
  tmpvar_33.w = mip_31;
  lowp vec4 tmpvar_34;
  tmpvar_34 = textureCube (unity_SpecCube0, tmpvar_33.xyz, mip_31);
  mediump vec4 tmpvar_35;
  tmpvar_35 = tmpvar_34;
  tmpvar_26 = ((tmpvar_35.w * hdr_30.x) * tmpvar_35.xyz);
  tmpvar_26 = (tmpvar_26 * tmpvar_21);
  mediump vec2 tmpvar_36;
  tmpvar_36.x = dot ((cse_25 - (2.0 * 
    (dot (n_10, cse_25) * n_10)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_36.y = (1.0 - clamp (dot (n_10, cse_25), 0.0, 1.0));
  mediump vec2 tmpvar_37;
  tmpvar_37 = (((tmpvar_36 * tmpvar_36) * tmpvar_36) * tmpvar_36);
  mediump vec2 tmpvar_38;
  tmpvar_38.x = tmpvar_37.x;
  tmpvar_38.y = (1.0 - sg_11.w);
  lowp vec4 tmpvar_39;
  tmpvar_39 = texture2D (unity_NHxRoughness, tmpvar_38);
  mediump vec3 tmpvar_40;
  tmpvar_40 = (((
    ((tmpvar_13 + ((tmpvar_39.w * 16.0) * sg_11.xyz)) * (tmpvar_15 * atten_2))
   * 
    clamp (dot (n_10, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_21)
   * tmpvar_13)) + (tmpvar_26 * mix (sg_11.xyz, vec3(
    clamp ((sg_11.w + (1.0 - tmpvar_14)), 0.0, 1.0)
  ), tmpvar_37.yyy)));
  mediump vec4 tmpvar_41;
  tmpvar_41.w = 1.0;
  tmpvar_41.xyz = tmpvar_40;
  c_1.w = tmpvar_41.w;
  lowp vec4 tmpvar_42;
  tmpvar_42 = texture2D (_EmissionMap, xlv_TEXCOORD0.xy);
  c_1.xyz = (tmpvar_40 + (tmpvar_42.xyz * _EmissionColor.xyz));
  mediump vec4 xlat_varoutput_43;
  xlat_varoutput_43.xyz = c_1.xyz;
  xlat_varoutput_43.w = 1.0;
  gl_FragData[0] = xlat_varoutput_43;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_EMISSION" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_11;
  tmpvar_11 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_12;
  texcoord_12.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_13;
  if ((_UVSec == 0.0)) {
    tmpvar_13 = tmpvar_2;
  } else {
    tmpvar_13 = tmpvar_3;
  };
  texcoord_12.zw = ((tmpvar_13 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_14;
  n_14 = (tmpvar_10.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_15;
  norm_15 = tmpvar_1;
  highp vec4 v_16;
  v_16.x = _World2Object[0].x;
  v_16.y = _World2Object[1].x;
  v_16.z = _World2Object[2].x;
  v_16.w = _World2Object[3].x;
  highp vec4 v_17;
  v_17.x = _World2Object[0].y;
  v_17.y = _World2Object[1].y;
  v_17.z = _World2Object[2].y;
  v_17.w = _World2Object[3].y;
  highp vec4 v_18;
  v_18.x = _World2Object[0].z;
  v_18.y = _World2Object[1].z;
  v_18.z = _World2Object[2].z;
  v_18.w = _World2Object[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(((
    (v_16.xyz * norm_15.x)
   + 
    (v_17.xyz * norm_15.y)
  ) + (v_18.xyz * norm_15.z)));
  highp vec3 dir_20;
  dir_20 = tmpvar_4.xyz;
  highp mat3 tmpvar_21;
  tmpvar_21[0] = _Object2World[0].xyz;
  tmpvar_21[1] = _Object2World[1].xyz;
  tmpvar_21[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = normalize((tmpvar_21 * dir_20));
  tmpvar_22.w = tmpvar_4.w;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.www;
  mediump vec3 normal_24;
  normal_24 = tmpvar_19;
  mediump vec3 tangent_25;
  tangent_25 = tmpvar_22.xyz;
  mediump vec3 flip_26;
  flip_26 = tmpvar_23;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (((normal_24.yzx * tangent_25.zxy) - (normal_24.zxy * tangent_25.yzx)) * flip_26);
  mediump mat3 tmpvar_28;
  tmpvar_28[0].x = tangent_25.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = normal_24.x;
  tmpvar_28[1].x = tangent_25.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = normal_24.y;
  tmpvar_28[2].x = tangent_25.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = normal_24.z;
  tangentToWorld_5 = tmpvar_28;
  highp vec3 v_29;
  v_29.x = tangentToWorld_5[0].x;
  v_29.y = tangentToWorld_5[1].x;
  v_29.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].y;
  v_30.y = tangentToWorld_5[1].y;
  v_30.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].z;
  v_31.y = tangentToWorld_5[1].z;
  v_31.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_31;
  highp vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = tmpvar_19;
  mediump vec4 normal_33;
  normal_33 = tmpvar_32;
  mediump vec3 x2_34;
  mediump vec3 x1_35;
  x1_35.x = dot (unity_SHAr, normal_33);
  x1_35.y = dot (unity_SHAg, normal_33);
  x1_35.z = dot (unity_SHAb, normal_33);
  mediump vec4 tmpvar_36;
  tmpvar_36 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_36);
  x2_34.y = dot (unity_SHBg, tmpvar_36);
  x2_34.z = dot (unity_SHBb, tmpvar_36);
  tmpvar_9.xyz = ((x2_34 + (unity_SHC.xyz * 
    ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
  )) + x1_35);
  highp vec3 lightColor0_37;
  lightColor0_37 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_38;
  lightColor1_38 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_39;
  lightColor2_39 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_40;
  lightColor3_40 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_41;
  lightAttenSq_41 = unity_4LightAtten0;
  highp vec4 tmpvar_42;
  tmpvar_42 = (unity_4LightPosX0 - tmpvar_10.x);
  highp vec4 tmpvar_43;
  tmpvar_43 = (unity_4LightPosY0 - tmpvar_10.y);
  highp vec4 tmpvar_44;
  tmpvar_44 = (unity_4LightPosZ0 - tmpvar_10.z);
  highp vec4 tmpvar_45;
  tmpvar_45 = (((tmpvar_42 * tmpvar_42) + (tmpvar_43 * tmpvar_43)) + (tmpvar_44 * tmpvar_44));
  highp vec4 tmpvar_46;
  tmpvar_46 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_42 * tmpvar_19.x) + (tmpvar_43 * tmpvar_19.y)) + (tmpvar_44 * tmpvar_19.z))
   * 
    inversesqrt(tmpvar_45)
  )) * (1.0/((1.0 + 
    (tmpvar_45 * lightAttenSq_41)
  ))));
  highp vec3 tmpvar_47;
  tmpvar_47 = (tmpvar_9.xyz + ((
    ((lightColor0_37 * tmpvar_46.x) + (lightColor1_38 * tmpvar_46.y))
   + 
    (lightColor2_39 * tmpvar_46.z)
  ) + (lightColor3_40 * tmpvar_46.w)));
  tmpvar_9.xyz = tmpvar_47;
  gl_Position = tmpvar_11;
  xlv_TEXCOORD0 = texcoord_12;
  xlv_TEXCOORD1 = normalize(n_14);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform mediump vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 c_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_2 = xlv_TEXCOORD2.xyz;
  tmpvar_3 = xlv_TEXCOORD2_1.xyz;
  tmpvar_4 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_5;
  tmpvar_5[0].x = tmpvar_2.x;
  tmpvar_5[0].y = tmpvar_3.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = tmpvar_2.y;
  tmpvar_5[1].y = tmpvar_3.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = tmpvar_2.z;
  tmpvar_5[2].y = tmpvar_3.z;
  tmpvar_5[2].z = tmpvar_4.z;
  lowp vec4 cse_6;
  cse_6 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_8;
  packednormal_8 = tmpvar_7;
  mediump vec3 n_9;
  n_9 = (((packednormal_8.xyz * 2.0) - 1.0) * tmpvar_5);
  mediump vec4 sg_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_10 = tmpvar_11;
  mediump vec3 tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = (1.0 - sg_10.x);
  tmpvar_12 = ((_Color.xyz * cse_6.xyz) * tmpvar_13);
  mediump vec3 tmpvar_14;
  lowp vec3 tmpvar_15;
  tmpvar_15 = _LightColor0.xyz;
  tmpvar_14 = tmpvar_15;
  mediump float tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_16 = tmpvar_17.y;
  highp vec3 tmpvar_18;
  highp vec4 tmpvar_19;
  mediump vec3 cse_20;
  cse_20 = -(xlv_TEXCOORD1);
  tmpvar_18 = cse_20;
  tmpvar_19 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_21;
  mediump vec3 worldNormal_22;
  highp vec3 tmpvar_23;
  highp vec3 I_24;
  I_24 = -(tmpvar_18);
  tmpvar_23 = (I_24 - (2.0 * (
    dot (n_9, I_24)
   * n_9)));
  worldNormal_22 = tmpvar_23;
  mediump vec4 hdr_25;
  hdr_25 = tmpvar_19;
  highp float mip_26;
  mediump float tmpvar_27;
  tmpvar_27 = ((1.0 - sg_10.w) * 7.0);
  mip_26 = tmpvar_27;
  highp vec4 tmpvar_28;
  tmpvar_28.xyz = worldNormal_22;
  tmpvar_28.w = mip_26;
  lowp vec4 tmpvar_29;
  tmpvar_29 = textureCube (unity_SpecCube0, tmpvar_28.xyz, mip_26);
  mediump vec4 tmpvar_30;
  tmpvar_30 = tmpvar_29;
  tmpvar_21 = ((tmpvar_30.w * hdr_25.x) * tmpvar_30.xyz);
  tmpvar_21 = (tmpvar_21 * tmpvar_16);
  mediump vec2 tmpvar_31;
  tmpvar_31.x = dot ((cse_20 - (2.0 * 
    (dot (n_9, cse_20) * n_9)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_31.y = (1.0 - clamp (dot (n_9, cse_20), 0.0, 1.0));
  mediump vec2 tmpvar_32;
  tmpvar_32 = (((tmpvar_31 * tmpvar_31) * tmpvar_31) * tmpvar_31);
  mediump vec2 tmpvar_33;
  tmpvar_33.x = tmpvar_32.x;
  tmpvar_33.y = (1.0 - sg_10.w);
  lowp vec4 tmpvar_34;
  tmpvar_34 = texture2D (unity_NHxRoughness, tmpvar_33);
  mediump vec3 tmpvar_35;
  tmpvar_35 = (((
    ((tmpvar_12 + ((tmpvar_34.w * 16.0) * sg_10.xyz)) * tmpvar_14)
   * 
    clamp (dot (n_9, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_16)
   * tmpvar_12)) + (tmpvar_21 * mix (sg_10.xyz, vec3(
    clamp ((sg_10.w + (1.0 - tmpvar_13)), 0.0, 1.0)
  ), tmpvar_32.yyy)));
  mediump vec4 tmpvar_36;
  tmpvar_36.w = 1.0;
  tmpvar_36.xyz = tmpvar_35;
  c_1.w = tmpvar_36.w;
  lowp vec4 tmpvar_37;
  tmpvar_37 = texture2D (_EmissionMap, xlv_TEXCOORD0.xy);
  c_1.xyz = (tmpvar_35 + (tmpvar_37.xyz * _EmissionColor.xyz));
  mediump vec4 xlat_varoutput_38;
  xlat_varoutput_38.xyz = c_1.xyz;
  xlat_varoutput_38.w = 1.0;
  gl_FragData[0] = xlat_varoutput_38;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_EMISSION" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_11;
  tmpvar_11 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_12;
  texcoord_12.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_13;
  if ((_UVSec == 0.0)) {
    tmpvar_13 = tmpvar_2;
  } else {
    tmpvar_13 = tmpvar_3;
  };
  texcoord_12.zw = ((tmpvar_13 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_14;
  n_14 = (tmpvar_10.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_15;
  norm_15 = tmpvar_1;
  highp vec4 v_16;
  v_16.x = _World2Object[0].x;
  v_16.y = _World2Object[1].x;
  v_16.z = _World2Object[2].x;
  v_16.w = _World2Object[3].x;
  highp vec4 v_17;
  v_17.x = _World2Object[0].y;
  v_17.y = _World2Object[1].y;
  v_17.z = _World2Object[2].y;
  v_17.w = _World2Object[3].y;
  highp vec4 v_18;
  v_18.x = _World2Object[0].z;
  v_18.y = _World2Object[1].z;
  v_18.z = _World2Object[2].z;
  v_18.w = _World2Object[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(((
    (v_16.xyz * norm_15.x)
   + 
    (v_17.xyz * norm_15.y)
  ) + (v_18.xyz * norm_15.z)));
  highp vec3 dir_20;
  dir_20 = tmpvar_4.xyz;
  highp mat3 tmpvar_21;
  tmpvar_21[0] = _Object2World[0].xyz;
  tmpvar_21[1] = _Object2World[1].xyz;
  tmpvar_21[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = normalize((tmpvar_21 * dir_20));
  tmpvar_22.w = tmpvar_4.w;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.www;
  mediump vec3 normal_24;
  normal_24 = tmpvar_19;
  mediump vec3 tangent_25;
  tangent_25 = tmpvar_22.xyz;
  mediump vec3 flip_26;
  flip_26 = tmpvar_23;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (((normal_24.yzx * tangent_25.zxy) - (normal_24.zxy * tangent_25.yzx)) * flip_26);
  mediump mat3 tmpvar_28;
  tmpvar_28[0].x = tangent_25.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = normal_24.x;
  tmpvar_28[1].x = tangent_25.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = normal_24.y;
  tmpvar_28[2].x = tangent_25.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = normal_24.z;
  tangentToWorld_5 = tmpvar_28;
  highp vec3 v_29;
  v_29.x = tangentToWorld_5[0].x;
  v_29.y = tangentToWorld_5[1].x;
  v_29.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].y;
  v_30.y = tangentToWorld_5[1].y;
  v_30.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].z;
  v_31.y = tangentToWorld_5[1].z;
  v_31.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_31;
  highp vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = tmpvar_19;
  mediump vec4 normal_33;
  normal_33 = tmpvar_32;
  mediump vec3 x2_34;
  mediump vec3 x1_35;
  x1_35.x = dot (unity_SHAr, normal_33);
  x1_35.y = dot (unity_SHAg, normal_33);
  x1_35.z = dot (unity_SHAb, normal_33);
  mediump vec4 tmpvar_36;
  tmpvar_36 = (normal_33.xyzz * normal_33.yzzx);
  x2_34.x = dot (unity_SHBr, tmpvar_36);
  x2_34.y = dot (unity_SHBg, tmpvar_36);
  x2_34.z = dot (unity_SHBb, tmpvar_36);
  tmpvar_9.xyz = ((x2_34 + (unity_SHC.xyz * 
    ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
  )) + x1_35);
  highp vec3 lightColor0_37;
  lightColor0_37 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_38;
  lightColor1_38 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_39;
  lightColor2_39 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_40;
  lightColor3_40 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_41;
  lightAttenSq_41 = unity_4LightAtten0;
  highp vec4 tmpvar_42;
  tmpvar_42 = (unity_4LightPosX0 - tmpvar_10.x);
  highp vec4 tmpvar_43;
  tmpvar_43 = (unity_4LightPosY0 - tmpvar_10.y);
  highp vec4 tmpvar_44;
  tmpvar_44 = (unity_4LightPosZ0 - tmpvar_10.z);
  highp vec4 tmpvar_45;
  tmpvar_45 = (((tmpvar_42 * tmpvar_42) + (tmpvar_43 * tmpvar_43)) + (tmpvar_44 * tmpvar_44));
  highp vec4 tmpvar_46;
  tmpvar_46 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_42 * tmpvar_19.x) + (tmpvar_43 * tmpvar_19.y)) + (tmpvar_44 * tmpvar_19.z))
   * 
    inversesqrt(tmpvar_45)
  )) * (1.0/((1.0 + 
    (tmpvar_45 * lightAttenSq_41)
  ))));
  highp vec3 tmpvar_47;
  tmpvar_47 = (tmpvar_9.xyz + ((
    ((lightColor0_37 * tmpvar_46.x) + (lightColor1_38 * tmpvar_46.y))
   + 
    (lightColor2_39 * tmpvar_46.z)
  ) + (lightColor3_40 * tmpvar_46.w)));
  tmpvar_9.xyz = tmpvar_47;
  gl_Position = tmpvar_11;
  xlv_TEXCOORD0 = texcoord_12;
  xlv_TEXCOORD1 = normalize(n_14);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _WorldSpaceLightPos0;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform mediump vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec4 c_1;
  mediump vec3 tmpvar_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_2 = xlv_TEXCOORD2.xyz;
  tmpvar_3 = xlv_TEXCOORD2_1.xyz;
  tmpvar_4 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_5;
  tmpvar_5[0].x = tmpvar_2.x;
  tmpvar_5[0].y = tmpvar_3.x;
  tmpvar_5[0].z = tmpvar_4.x;
  tmpvar_5[1].x = tmpvar_2.y;
  tmpvar_5[1].y = tmpvar_3.y;
  tmpvar_5[1].z = tmpvar_4.y;
  tmpvar_5[2].x = tmpvar_2.z;
  tmpvar_5[2].y = tmpvar_3.z;
  tmpvar_5[2].z = tmpvar_4.z;
  lowp vec4 cse_6;
  cse_6 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_8;
  packednormal_8 = tmpvar_7;
  mediump vec3 n_9;
  n_9 = (((packednormal_8.xyz * 2.0) - 1.0) * tmpvar_5);
  mediump vec4 sg_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_10 = tmpvar_11;
  mediump vec3 tmpvar_12;
  mediump float tmpvar_13;
  tmpvar_13 = (1.0 - sg_10.x);
  tmpvar_12 = ((_Color.xyz * cse_6.xyz) * tmpvar_13);
  mediump vec3 tmpvar_14;
  lowp vec3 tmpvar_15;
  tmpvar_15 = _LightColor0.xyz;
  tmpvar_14 = tmpvar_15;
  mediump float tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_16 = tmpvar_17.y;
  highp vec3 tmpvar_18;
  highp vec4 tmpvar_19;
  mediump vec3 cse_20;
  cse_20 = -(xlv_TEXCOORD1);
  tmpvar_18 = cse_20;
  tmpvar_19 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_21;
  mediump vec3 worldNormal_22;
  highp vec3 tmpvar_23;
  highp vec3 I_24;
  I_24 = -(tmpvar_18);
  tmpvar_23 = (I_24 - (2.0 * (
    dot (n_9, I_24)
   * n_9)));
  worldNormal_22 = tmpvar_23;
  mediump vec4 hdr_25;
  hdr_25 = tmpvar_19;
  highp float mip_26;
  mediump float tmpvar_27;
  tmpvar_27 = ((1.0 - sg_10.w) * 7.0);
  mip_26 = tmpvar_27;
  highp vec4 tmpvar_28;
  tmpvar_28.xyz = worldNormal_22;
  tmpvar_28.w = mip_26;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture (unity_SpecCube0, tmpvar_28.xyz, mip_26);
  mediump vec4 tmpvar_30;
  tmpvar_30 = tmpvar_29;
  tmpvar_21 = ((tmpvar_30.w * hdr_25.x) * tmpvar_30.xyz);
  tmpvar_21 = (tmpvar_21 * tmpvar_16);
  mediump vec2 tmpvar_31;
  tmpvar_31.x = dot ((cse_20 - (2.0 * 
    (dot (n_9, cse_20) * n_9)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_31.y = (1.0 - clamp (dot (n_9, cse_20), 0.0, 1.0));
  mediump vec2 tmpvar_32;
  tmpvar_32 = (((tmpvar_31 * tmpvar_31) * tmpvar_31) * tmpvar_31);
  mediump vec2 tmpvar_33;
  tmpvar_33.x = tmpvar_32.x;
  tmpvar_33.y = (1.0 - sg_10.w);
  lowp vec4 tmpvar_34;
  tmpvar_34 = texture (unity_NHxRoughness, tmpvar_33);
  mediump vec3 tmpvar_35;
  tmpvar_35 = (((
    ((tmpvar_12 + ((tmpvar_34.w * 16.0) * sg_10.xyz)) * tmpvar_14)
   * 
    clamp (dot (n_9, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_16)
   * tmpvar_12)) + (tmpvar_21 * mix (sg_10.xyz, vec3(
    clamp ((sg_10.w + (1.0 - tmpvar_13)), 0.0, 1.0)
  ), tmpvar_32.yyy)));
  mediump vec4 tmpvar_36;
  tmpvar_36.w = 1.0;
  tmpvar_36.xyz = tmpvar_35;
  c_1.w = tmpvar_36.w;
  lowp vec4 tmpvar_37;
  tmpvar_37 = texture (_EmissionMap, xlv_TEXCOORD0.xy);
  c_1.xyz = (tmpvar_35 + (tmpvar_37.xyz * _EmissionColor.xyz));
  mediump vec4 xlat_varoutput_38;
  xlat_varoutput_38.xyz = c_1.xyz;
  xlat_varoutput_38.w = 1.0;
  _glesFragData[0] = xlat_varoutput_38;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_EMISSION" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec4 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_5 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].x;
  v_30.y = tangentToWorld_5[1].x;
  v_30.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].y;
  v_31.y = tangentToWorld_5[1].y;
  v_31.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_5[0].z;
  v_32.y = tangentToWorld_5[1].z;
  v_32.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_32;
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_10 = tmpvar_33;
  highp vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = tmpvar_20;
  mediump vec4 normal_35;
  normal_35 = tmpvar_34;
  mediump vec3 x2_36;
  mediump vec3 x1_37;
  x1_37.x = dot (unity_SHAr, normal_35);
  x1_37.y = dot (unity_SHAg, normal_35);
  x1_37.z = dot (unity_SHAb, normal_35);
  mediump vec4 tmpvar_38;
  tmpvar_38 = (normal_35.xyzz * normal_35.yzzx);
  x2_36.x = dot (unity_SHBr, tmpvar_38);
  x2_36.y = dot (unity_SHBg, tmpvar_38);
  x2_36.z = dot (unity_SHBb, tmpvar_38);
  tmpvar_9.xyz = ((x2_36 + (unity_SHC.xyz * 
    ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
  )) + x1_37);
  highp vec3 lightColor0_39;
  lightColor0_39 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_40;
  lightColor1_40 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_41;
  lightColor2_41 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_42;
  lightColor3_42 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_43;
  lightAttenSq_43 = unity_4LightAtten0;
  highp vec4 tmpvar_44;
  tmpvar_44 = (unity_4LightPosX0 - tmpvar_11.x);
  highp vec4 tmpvar_45;
  tmpvar_45 = (unity_4LightPosY0 - tmpvar_11.y);
  highp vec4 tmpvar_46;
  tmpvar_46 = (unity_4LightPosZ0 - tmpvar_11.z);
  highp vec4 tmpvar_47;
  tmpvar_47 = (((tmpvar_44 * tmpvar_44) + (tmpvar_45 * tmpvar_45)) + (tmpvar_46 * tmpvar_46));
  highp vec4 tmpvar_48;
  tmpvar_48 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_44 * tmpvar_20.x) + (tmpvar_45 * tmpvar_20.y)) + (tmpvar_46 * tmpvar_20.z))
   * 
    inversesqrt(tmpvar_47)
  )) * (1.0/((1.0 + 
    (tmpvar_47 * lightAttenSq_43)
  ))));
  highp vec3 tmpvar_49;
  tmpvar_49 = (tmpvar_9.xyz + ((
    ((lightColor0_39 * tmpvar_48.x) + (lightColor1_40 * tmpvar_48.y))
   + 
    (lightColor2_41 * tmpvar_48.z)
  ) + (lightColor3_42 * tmpvar_48.w)));
  tmpvar_9.xyz = tmpvar_49;
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform mediump vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
uniform sampler2D _ShadowMapTexture;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = xlv_TEXCOORD2_1.xyz;
  tmpvar_5 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_3.x;
  tmpvar_6[0].y = tmpvar_4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = tmpvar_3.y;
  tmpvar_6[1].y = tmpvar_4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = tmpvar_3.z;
  tmpvar_6[2].y = tmpvar_4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  lowp vec4 cse_7;
  cse_7 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_9;
  packednormal_9 = tmpvar_8;
  mediump vec3 n_10;
  n_10 = (((packednormal_9.xyz * 2.0) - 1.0) * tmpvar_6);
  mediump vec4 sg_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_11 = tmpvar_12;
  mediump vec3 tmpvar_13;
  mediump float tmpvar_14;
  tmpvar_14 = (1.0 - sg_11.x);
  tmpvar_13 = ((_Color.xyz * cse_7.xyz) * tmpvar_14);
  mediump vec3 tmpvar_15;
  lowp vec3 tmpvar_16;
  tmpvar_16 = _LightColor0.xyz;
  tmpvar_15 = tmpvar_16;
  lowp float tmpvar_17;
  mediump float dist_18;
  lowp float tmpvar_19;
  tmpvar_19 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_18 = tmpvar_19;
  mediump float tmpvar_20;
  tmpvar_20 = max (float((dist_18 > 
    (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w)
  )), _LightShadowData.x);
  tmpvar_17 = tmpvar_20;
  atten_2 = tmpvar_17;
  mediump float tmpvar_21;
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_21 = tmpvar_22.y;
  highp vec3 tmpvar_23;
  highp vec4 tmpvar_24;
  mediump vec3 cse_25;
  cse_25 = -(xlv_TEXCOORD1);
  tmpvar_23 = cse_25;
  tmpvar_24 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_26;
  mediump vec3 worldNormal_27;
  highp vec3 tmpvar_28;
  highp vec3 I_29;
  I_29 = -(tmpvar_23);
  tmpvar_28 = (I_29 - (2.0 * (
    dot (n_10, I_29)
   * n_10)));
  worldNormal_27 = tmpvar_28;
  mediump vec4 hdr_30;
  hdr_30 = tmpvar_24;
  highp float mip_31;
  mediump float tmpvar_32;
  tmpvar_32 = ((1.0 - sg_11.w) * 7.0);
  mip_31 = tmpvar_32;
  highp vec4 tmpvar_33;
  tmpvar_33.xyz = worldNormal_27;
  tmpvar_33.w = mip_31;
  lowp vec4 tmpvar_34;
  tmpvar_34 = textureCube (unity_SpecCube0, tmpvar_33.xyz, mip_31);
  mediump vec4 tmpvar_35;
  tmpvar_35 = tmpvar_34;
  tmpvar_26 = ((tmpvar_35.w * hdr_30.x) * tmpvar_35.xyz);
  tmpvar_26 = (tmpvar_26 * tmpvar_21);
  mediump vec2 tmpvar_36;
  tmpvar_36.x = dot ((cse_25 - (2.0 * 
    (dot (n_10, cse_25) * n_10)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_36.y = (1.0 - clamp (dot (n_10, cse_25), 0.0, 1.0));
  mediump vec2 tmpvar_37;
  tmpvar_37 = (((tmpvar_36 * tmpvar_36) * tmpvar_36) * tmpvar_36);
  mediump vec2 tmpvar_38;
  tmpvar_38.x = tmpvar_37.x;
  tmpvar_38.y = (1.0 - sg_11.w);
  lowp vec4 tmpvar_39;
  tmpvar_39 = texture2D (unity_NHxRoughness, tmpvar_38);
  mediump vec3 tmpvar_40;
  tmpvar_40 = (((
    ((tmpvar_13 + ((tmpvar_39.w * 16.0) * sg_11.xyz)) * (tmpvar_15 * atten_2))
   * 
    clamp (dot (n_10, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_21)
   * tmpvar_13)) + (tmpvar_26 * mix (sg_11.xyz, vec3(
    clamp ((sg_11.w + (1.0 - tmpvar_14)), 0.0, 1.0)
  ), tmpvar_37.yyy)));
  mediump vec4 tmpvar_41;
  tmpvar_41.w = 1.0;
  tmpvar_41.xyz = tmpvar_40;
  c_1.w = tmpvar_41.w;
  lowp vec4 tmpvar_42;
  tmpvar_42 = texture2D (_EmissionMap, xlv_TEXCOORD0.xy);
  c_1.xyz = (tmpvar_40 + (tmpvar_42.xyz * _EmissionColor.xyz));
  mediump vec4 xlat_varoutput_43;
  xlat_varoutput_43.xyz = c_1.xyz;
  xlat_varoutput_43.w = 1.0;
  gl_FragData[0] = xlat_varoutput_43;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec4 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_5 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].x;
  v_30.y = tangentToWorld_5[1].x;
  v_30.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].y;
  v_31.y = tangentToWorld_5[1].y;
  v_31.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_5[0].z;
  v_32.y = tangentToWorld_5[1].z;
  v_32.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_32;
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_10 = tmpvar_33;
  highp vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = tmpvar_20;
  mediump vec4 normal_35;
  normal_35 = tmpvar_34;
  mediump vec3 x2_36;
  mediump vec3 x1_37;
  x1_37.x = dot (unity_SHAr, normal_35);
  x1_37.y = dot (unity_SHAg, normal_35);
  x1_37.z = dot (unity_SHAb, normal_35);
  mediump vec4 tmpvar_38;
  tmpvar_38 = (normal_35.xyzz * normal_35.yzzx);
  x2_36.x = dot (unity_SHBr, tmpvar_38);
  x2_36.y = dot (unity_SHBg, tmpvar_38);
  x2_36.z = dot (unity_SHBb, tmpvar_38);
  tmpvar_9.xyz = ((x2_36 + (unity_SHC.xyz * 
    ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
  )) + x1_37);
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform mediump vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
uniform lowp sampler2DShadow _ShadowMapTexture;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = xlv_TEXCOORD2_1.xyz;
  tmpvar_5 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_3.x;
  tmpvar_6[0].y = tmpvar_4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = tmpvar_3.y;
  tmpvar_6[1].y = tmpvar_4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = tmpvar_3.z;
  tmpvar_6[2].y = tmpvar_4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  lowp vec4 cse_7;
  cse_7 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_9;
  packednormal_9 = tmpvar_8;
  mediump vec3 n_10;
  n_10 = (((packednormal_9.xyz * 2.0) - 1.0) * tmpvar_6);
  mediump vec4 sg_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_11 = tmpvar_12;
  mediump vec3 tmpvar_13;
  mediump float tmpvar_14;
  tmpvar_14 = (1.0 - sg_11.x);
  tmpvar_13 = ((_Color.xyz * cse_7.xyz) * tmpvar_14);
  mediump vec3 tmpvar_15;
  lowp vec3 tmpvar_16;
  tmpvar_16 = _LightColor0.xyz;
  tmpvar_15 = tmpvar_16;
  lowp float shadow_17;
  lowp float tmpvar_18;
  tmpvar_18 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  mediump float tmpvar_19;
  tmpvar_19 = (_LightShadowData.x + (tmpvar_18 * (1.0 - _LightShadowData.x)));
  shadow_17 = tmpvar_19;
  atten_2 = shadow_17;
  mediump float tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_20 = tmpvar_21.y;
  highp vec3 tmpvar_22;
  highp vec4 tmpvar_23;
  mediump vec3 cse_24;
  cse_24 = -(xlv_TEXCOORD1);
  tmpvar_22 = cse_24;
  tmpvar_23 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_25;
  mediump vec3 worldNormal_26;
  highp vec3 tmpvar_27;
  highp vec3 I_28;
  I_28 = -(tmpvar_22);
  tmpvar_27 = (I_28 - (2.0 * (
    dot (n_10, I_28)
   * n_10)));
  worldNormal_26 = tmpvar_27;
  mediump vec4 hdr_29;
  hdr_29 = tmpvar_23;
  highp float mip_30;
  mediump float tmpvar_31;
  tmpvar_31 = ((1.0 - sg_11.w) * 7.0);
  mip_30 = tmpvar_31;
  highp vec4 tmpvar_32;
  tmpvar_32.xyz = worldNormal_26;
  tmpvar_32.w = mip_30;
  lowp vec4 tmpvar_33;
  tmpvar_33 = textureCube (unity_SpecCube0, tmpvar_32.xyz, mip_30);
  mediump vec4 tmpvar_34;
  tmpvar_34 = tmpvar_33;
  tmpvar_25 = ((tmpvar_34.w * hdr_29.x) * tmpvar_34.xyz);
  tmpvar_25 = (tmpvar_25 * tmpvar_20);
  mediump vec2 tmpvar_35;
  tmpvar_35.x = dot ((cse_24 - (2.0 * 
    (dot (n_10, cse_24) * n_10)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_35.y = (1.0 - clamp (dot (n_10, cse_24), 0.0, 1.0));
  mediump vec2 tmpvar_36;
  tmpvar_36 = (((tmpvar_35 * tmpvar_35) * tmpvar_35) * tmpvar_35);
  mediump vec2 tmpvar_37;
  tmpvar_37.x = tmpvar_36.x;
  tmpvar_37.y = (1.0 - sg_11.w);
  lowp vec4 tmpvar_38;
  tmpvar_38 = texture2D (unity_NHxRoughness, tmpvar_37);
  mediump vec3 tmpvar_39;
  tmpvar_39 = (((
    ((tmpvar_13 + ((tmpvar_38.w * 16.0) * sg_11.xyz)) * (tmpvar_15 * atten_2))
   * 
    clamp (dot (n_10, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_20)
   * tmpvar_13)) + (tmpvar_25 * mix (sg_11.xyz, vec3(
    clamp ((sg_11.w + (1.0 - tmpvar_14)), 0.0, 1.0)
  ), tmpvar_36.yyy)));
  mediump vec4 tmpvar_40;
  tmpvar_40.w = 1.0;
  tmpvar_40.xyz = tmpvar_39;
  c_1.w = tmpvar_40.w;
  lowp vec4 tmpvar_41;
  tmpvar_41 = texture2D (_EmissionMap, xlv_TEXCOORD0.xy);
  c_1.xyz = (tmpvar_39 + (tmpvar_41.xyz * _EmissionColor.xyz));
  mediump vec4 xlat_varoutput_42;
  xlat_varoutput_42.xyz = c_1.xyz;
  xlat_varoutput_42.w = 1.0;
  gl_FragData[0] = xlat_varoutput_42;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
out mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec4 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_5 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].x;
  v_30.y = tangentToWorld_5[1].x;
  v_30.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].y;
  v_31.y = tangentToWorld_5[1].y;
  v_31.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_5[0].z;
  v_32.y = tangentToWorld_5[1].z;
  v_32.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_32;
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_10 = tmpvar_33;
  highp vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = tmpvar_20;
  mediump vec4 normal_35;
  normal_35 = tmpvar_34;
  mediump vec3 x2_36;
  mediump vec3 x1_37;
  x1_37.x = dot (unity_SHAr, normal_35);
  x1_37.y = dot (unity_SHAg, normal_35);
  x1_37.z = dot (unity_SHAb, normal_35);
  mediump vec4 tmpvar_38;
  tmpvar_38 = (normal_35.xyzz * normal_35.yzzx);
  x2_36.x = dot (unity_SHBr, tmpvar_38);
  x2_36.y = dot (unity_SHBg, tmpvar_38);
  x2_36.z = dot (unity_SHBb, tmpvar_38);
  tmpvar_9.xyz = ((x2_36 + (unity_SHC.xyz * 
    ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
  )) + x1_37);
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform mediump vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
uniform lowp sampler2DShadow _ShadowMapTexture;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
in mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = xlv_TEXCOORD2_1.xyz;
  tmpvar_5 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_3.x;
  tmpvar_6[0].y = tmpvar_4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = tmpvar_3.y;
  tmpvar_6[1].y = tmpvar_4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = tmpvar_3.z;
  tmpvar_6[2].y = tmpvar_4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  lowp vec4 cse_7;
  cse_7 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_9;
  packednormal_9 = tmpvar_8;
  mediump vec3 n_10;
  n_10 = (((packednormal_9.xyz * 2.0) - 1.0) * tmpvar_6);
  mediump vec4 sg_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_11 = tmpvar_12;
  mediump vec3 tmpvar_13;
  mediump float tmpvar_14;
  tmpvar_14 = (1.0 - sg_11.x);
  tmpvar_13 = ((_Color.xyz * cse_7.xyz) * tmpvar_14);
  mediump vec3 tmpvar_15;
  lowp vec3 tmpvar_16;
  tmpvar_16 = _LightColor0.xyz;
  tmpvar_15 = tmpvar_16;
  lowp float shadow_17;
  mediump float tmpvar_18;
  tmpvar_18 = texture (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  lowp float tmpvar_19;
  tmpvar_19 = tmpvar_18;
  mediump float tmpvar_20;
  tmpvar_20 = (_LightShadowData.x + (tmpvar_19 * (1.0 - _LightShadowData.x)));
  shadow_17 = tmpvar_20;
  atten_2 = shadow_17;
  mediump float tmpvar_21;
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_21 = tmpvar_22.y;
  highp vec3 tmpvar_23;
  highp vec4 tmpvar_24;
  mediump vec3 cse_25;
  cse_25 = -(xlv_TEXCOORD1);
  tmpvar_23 = cse_25;
  tmpvar_24 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_26;
  mediump vec3 worldNormal_27;
  highp vec3 tmpvar_28;
  highp vec3 I_29;
  I_29 = -(tmpvar_23);
  tmpvar_28 = (I_29 - (2.0 * (
    dot (n_10, I_29)
   * n_10)));
  worldNormal_27 = tmpvar_28;
  mediump vec4 hdr_30;
  hdr_30 = tmpvar_24;
  highp float mip_31;
  mediump float tmpvar_32;
  tmpvar_32 = ((1.0 - sg_11.w) * 7.0);
  mip_31 = tmpvar_32;
  highp vec4 tmpvar_33;
  tmpvar_33.xyz = worldNormal_27;
  tmpvar_33.w = mip_31;
  lowp vec4 tmpvar_34;
  tmpvar_34 = texture (unity_SpecCube0, tmpvar_33.xyz, mip_31);
  mediump vec4 tmpvar_35;
  tmpvar_35 = tmpvar_34;
  tmpvar_26 = ((tmpvar_35.w * hdr_30.x) * tmpvar_35.xyz);
  tmpvar_26 = (tmpvar_26 * tmpvar_21);
  mediump vec2 tmpvar_36;
  tmpvar_36.x = dot ((cse_25 - (2.0 * 
    (dot (n_10, cse_25) * n_10)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_36.y = (1.0 - clamp (dot (n_10, cse_25), 0.0, 1.0));
  mediump vec2 tmpvar_37;
  tmpvar_37 = (((tmpvar_36 * tmpvar_36) * tmpvar_36) * tmpvar_36);
  mediump vec2 tmpvar_38;
  tmpvar_38.x = tmpvar_37.x;
  tmpvar_38.y = (1.0 - sg_11.w);
  lowp vec4 tmpvar_39;
  tmpvar_39 = texture (unity_NHxRoughness, tmpvar_38);
  mediump vec3 tmpvar_40;
  tmpvar_40 = (((
    ((tmpvar_13 + ((tmpvar_39.w * 16.0) * sg_11.xyz)) * (tmpvar_15 * atten_2))
   * 
    clamp (dot (n_10, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_21)
   * tmpvar_13)) + (tmpvar_26 * mix (sg_11.xyz, vec3(
    clamp ((sg_11.w + (1.0 - tmpvar_14)), 0.0, 1.0)
  ), tmpvar_37.yyy)));
  mediump vec4 tmpvar_41;
  tmpvar_41.w = 1.0;
  tmpvar_41.xyz = tmpvar_40;
  c_1.w = tmpvar_41.w;
  lowp vec4 tmpvar_42;
  tmpvar_42 = texture (_EmissionMap, xlv_TEXCOORD0.xy);
  c_1.xyz = (tmpvar_40 + (tmpvar_42.xyz * _EmissionColor.xyz));
  mediump vec4 xlat_varoutput_43;
  xlat_varoutput_43.xyz = c_1.xyz;
  xlat_varoutput_43.w = 1.0;
  _glesFragData[0] = xlat_varoutput_43;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_EMISSION" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec4 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_5 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].x;
  v_30.y = tangentToWorld_5[1].x;
  v_30.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].y;
  v_31.y = tangentToWorld_5[1].y;
  v_31.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_5[0].z;
  v_32.y = tangentToWorld_5[1].z;
  v_32.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_32;
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_10 = tmpvar_33;
  highp vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = tmpvar_20;
  mediump vec4 normal_35;
  normal_35 = tmpvar_34;
  mediump vec3 x2_36;
  mediump vec3 x1_37;
  x1_37.x = dot (unity_SHAr, normal_35);
  x1_37.y = dot (unity_SHAg, normal_35);
  x1_37.z = dot (unity_SHAb, normal_35);
  mediump vec4 tmpvar_38;
  tmpvar_38 = (normal_35.xyzz * normal_35.yzzx);
  x2_36.x = dot (unity_SHBr, tmpvar_38);
  x2_36.y = dot (unity_SHBg, tmpvar_38);
  x2_36.z = dot (unity_SHBb, tmpvar_38);
  tmpvar_9.xyz = ((x2_36 + (unity_SHC.xyz * 
    ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
  )) + x1_37);
  highp vec3 lightColor0_39;
  lightColor0_39 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_40;
  lightColor1_40 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_41;
  lightColor2_41 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_42;
  lightColor3_42 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_43;
  lightAttenSq_43 = unity_4LightAtten0;
  highp vec4 tmpvar_44;
  tmpvar_44 = (unity_4LightPosX0 - tmpvar_11.x);
  highp vec4 tmpvar_45;
  tmpvar_45 = (unity_4LightPosY0 - tmpvar_11.y);
  highp vec4 tmpvar_46;
  tmpvar_46 = (unity_4LightPosZ0 - tmpvar_11.z);
  highp vec4 tmpvar_47;
  tmpvar_47 = (((tmpvar_44 * tmpvar_44) + (tmpvar_45 * tmpvar_45)) + (tmpvar_46 * tmpvar_46));
  highp vec4 tmpvar_48;
  tmpvar_48 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_44 * tmpvar_20.x) + (tmpvar_45 * tmpvar_20.y)) + (tmpvar_46 * tmpvar_20.z))
   * 
    inversesqrt(tmpvar_47)
  )) * (1.0/((1.0 + 
    (tmpvar_47 * lightAttenSq_43)
  ))));
  highp vec3 tmpvar_49;
  tmpvar_49 = (tmpvar_9.xyz + ((
    ((lightColor0_39 * tmpvar_48.x) + (lightColor1_40 * tmpvar_48.y))
   + 
    (lightColor2_41 * tmpvar_48.z)
  ) + (lightColor3_42 * tmpvar_48.w)));
  tmpvar_9.xyz = tmpvar_49;
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform mediump vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
uniform lowp sampler2DShadow _ShadowMapTexture;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = xlv_TEXCOORD2_1.xyz;
  tmpvar_5 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_3.x;
  tmpvar_6[0].y = tmpvar_4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = tmpvar_3.y;
  tmpvar_6[1].y = tmpvar_4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = tmpvar_3.z;
  tmpvar_6[2].y = tmpvar_4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  lowp vec4 cse_7;
  cse_7 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_9;
  packednormal_9 = tmpvar_8;
  mediump vec3 n_10;
  n_10 = (((packednormal_9.xyz * 2.0) - 1.0) * tmpvar_6);
  mediump vec4 sg_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_11 = tmpvar_12;
  mediump vec3 tmpvar_13;
  mediump float tmpvar_14;
  tmpvar_14 = (1.0 - sg_11.x);
  tmpvar_13 = ((_Color.xyz * cse_7.xyz) * tmpvar_14);
  mediump vec3 tmpvar_15;
  lowp vec3 tmpvar_16;
  tmpvar_16 = _LightColor0.xyz;
  tmpvar_15 = tmpvar_16;
  lowp float shadow_17;
  lowp float tmpvar_18;
  tmpvar_18 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  mediump float tmpvar_19;
  tmpvar_19 = (_LightShadowData.x + (tmpvar_18 * (1.0 - _LightShadowData.x)));
  shadow_17 = tmpvar_19;
  atten_2 = shadow_17;
  mediump float tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_20 = tmpvar_21.y;
  highp vec3 tmpvar_22;
  highp vec4 tmpvar_23;
  mediump vec3 cse_24;
  cse_24 = -(xlv_TEXCOORD1);
  tmpvar_22 = cse_24;
  tmpvar_23 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_25;
  mediump vec3 worldNormal_26;
  highp vec3 tmpvar_27;
  highp vec3 I_28;
  I_28 = -(tmpvar_22);
  tmpvar_27 = (I_28 - (2.0 * (
    dot (n_10, I_28)
   * n_10)));
  worldNormal_26 = tmpvar_27;
  mediump vec4 hdr_29;
  hdr_29 = tmpvar_23;
  highp float mip_30;
  mediump float tmpvar_31;
  tmpvar_31 = ((1.0 - sg_11.w) * 7.0);
  mip_30 = tmpvar_31;
  highp vec4 tmpvar_32;
  tmpvar_32.xyz = worldNormal_26;
  tmpvar_32.w = mip_30;
  lowp vec4 tmpvar_33;
  tmpvar_33 = textureCube (unity_SpecCube0, tmpvar_32.xyz, mip_30);
  mediump vec4 tmpvar_34;
  tmpvar_34 = tmpvar_33;
  tmpvar_25 = ((tmpvar_34.w * hdr_29.x) * tmpvar_34.xyz);
  tmpvar_25 = (tmpvar_25 * tmpvar_20);
  mediump vec2 tmpvar_35;
  tmpvar_35.x = dot ((cse_24 - (2.0 * 
    (dot (n_10, cse_24) * n_10)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_35.y = (1.0 - clamp (dot (n_10, cse_24), 0.0, 1.0));
  mediump vec2 tmpvar_36;
  tmpvar_36 = (((tmpvar_35 * tmpvar_35) * tmpvar_35) * tmpvar_35);
  mediump vec2 tmpvar_37;
  tmpvar_37.x = tmpvar_36.x;
  tmpvar_37.y = (1.0 - sg_11.w);
  lowp vec4 tmpvar_38;
  tmpvar_38 = texture2D (unity_NHxRoughness, tmpvar_37);
  mediump vec3 tmpvar_39;
  tmpvar_39 = (((
    ((tmpvar_13 + ((tmpvar_38.w * 16.0) * sg_11.xyz)) * (tmpvar_15 * atten_2))
   * 
    clamp (dot (n_10, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_20)
   * tmpvar_13)) + (tmpvar_25 * mix (sg_11.xyz, vec3(
    clamp ((sg_11.w + (1.0 - tmpvar_14)), 0.0, 1.0)
  ), tmpvar_36.yyy)));
  mediump vec4 tmpvar_40;
  tmpvar_40.w = 1.0;
  tmpvar_40.xyz = tmpvar_39;
  c_1.w = tmpvar_40.w;
  lowp vec4 tmpvar_41;
  tmpvar_41 = texture2D (_EmissionMap, xlv_TEXCOORD0.xy);
  c_1.xyz = (tmpvar_39 + (tmpvar_41.xyz * _EmissionColor.xyz));
  mediump vec4 xlat_varoutput_42;
  xlat_varoutput_42.xyz = c_1.xyz;
  xlat_varoutput_42.w = 1.0;
  gl_FragData[0] = xlat_varoutput_42;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "VERTEXLIGHT_ON" "_EMISSION" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform mediump vec4 unity_4LightAtten0;
uniform mediump vec4 unity_LightColor[8];
uniform mediump vec4 unity_SHAr;
uniform mediump vec4 unity_SHAg;
uniform mediump vec4 unity_SHAb;
uniform mediump vec4 unity_SHBr;
uniform mediump vec4 unity_SHBg;
uniform mediump vec4 unity_SHBb;
uniform mediump vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
out mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec4 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_5 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].x;
  v_30.y = tangentToWorld_5[1].x;
  v_30.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].y;
  v_31.y = tangentToWorld_5[1].y;
  v_31.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_5[0].z;
  v_32.y = tangentToWorld_5[1].z;
  v_32.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_32;
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_10 = tmpvar_33;
  highp vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = tmpvar_20;
  mediump vec4 normal_35;
  normal_35 = tmpvar_34;
  mediump vec3 x2_36;
  mediump vec3 x1_37;
  x1_37.x = dot (unity_SHAr, normal_35);
  x1_37.y = dot (unity_SHAg, normal_35);
  x1_37.z = dot (unity_SHAb, normal_35);
  mediump vec4 tmpvar_38;
  tmpvar_38 = (normal_35.xyzz * normal_35.yzzx);
  x2_36.x = dot (unity_SHBr, tmpvar_38);
  x2_36.y = dot (unity_SHBg, tmpvar_38);
  x2_36.z = dot (unity_SHBb, tmpvar_38);
  tmpvar_9.xyz = ((x2_36 + (unity_SHC.xyz * 
    ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
  )) + x1_37);
  highp vec3 lightColor0_39;
  lightColor0_39 = unity_LightColor[0].xyz;
  highp vec3 lightColor1_40;
  lightColor1_40 = unity_LightColor[1].xyz;
  highp vec3 lightColor2_41;
  lightColor2_41 = unity_LightColor[2].xyz;
  highp vec3 lightColor3_42;
  lightColor3_42 = unity_LightColor[3].xyz;
  highp vec4 lightAttenSq_43;
  lightAttenSq_43 = unity_4LightAtten0;
  highp vec4 tmpvar_44;
  tmpvar_44 = (unity_4LightPosX0 - tmpvar_11.x);
  highp vec4 tmpvar_45;
  tmpvar_45 = (unity_4LightPosY0 - tmpvar_11.y);
  highp vec4 tmpvar_46;
  tmpvar_46 = (unity_4LightPosZ0 - tmpvar_11.z);
  highp vec4 tmpvar_47;
  tmpvar_47 = (((tmpvar_44 * tmpvar_44) + (tmpvar_45 * tmpvar_45)) + (tmpvar_46 * tmpvar_46));
  highp vec4 tmpvar_48;
  tmpvar_48 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
    (((tmpvar_44 * tmpvar_20.x) + (tmpvar_45 * tmpvar_20.y)) + (tmpvar_46 * tmpvar_20.z))
   * 
    inversesqrt(tmpvar_47)
  )) * (1.0/((1.0 + 
    (tmpvar_47 * lightAttenSq_43)
  ))));
  highp vec3 tmpvar_49;
  tmpvar_49 = (tmpvar_9.xyz + ((
    ((lightColor0_39 * tmpvar_48.x) + (lightColor1_40 * tmpvar_48.y))
   + 
    (lightColor2_41 * tmpvar_48.z)
  ) + (lightColor3_42 * tmpvar_48.w)));
  tmpvar_9.xyz = tmpvar_49;
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _WorldSpaceLightPos0;
uniform mediump vec4 _LightShadowData;
uniform lowp samplerCube unity_SpecCube0;
uniform mediump vec4 unity_SpecCube0_HDR;
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _OcclusionMap;
uniform mediump vec4 _EmissionColor;
uniform sampler2D _EmissionMap;
uniform lowp sampler2DShadow _ShadowMapTexture;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
in mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec4 c_1;
  mediump float atten_2;
  mediump vec3 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3 = xlv_TEXCOORD2.xyz;
  tmpvar_4 = xlv_TEXCOORD2_1.xyz;
  tmpvar_5 = xlv_TEXCOORD2_2.xyz;
  mediump mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_3.x;
  tmpvar_6[0].y = tmpvar_4.x;
  tmpvar_6[0].z = tmpvar_5.x;
  tmpvar_6[1].x = tmpvar_3.y;
  tmpvar_6[1].y = tmpvar_4.y;
  tmpvar_6[1].z = tmpvar_5.y;
  tmpvar_6[2].x = tmpvar_3.z;
  tmpvar_6[2].y = tmpvar_4.z;
  tmpvar_6[2].z = tmpvar_5.z;
  lowp vec4 cse_7;
  cse_7 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture (_BumpMap, xlv_TEXCOORD0.xy);
  mediump vec4 packednormal_9;
  packednormal_9 = tmpvar_8;
  mediump vec3 n_10;
  n_10 = (((packednormal_9.xyz * 2.0) - 1.0) * tmpvar_6);
  mediump vec4 sg_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_11 = tmpvar_12;
  mediump vec3 tmpvar_13;
  mediump float tmpvar_14;
  tmpvar_14 = (1.0 - sg_11.x);
  tmpvar_13 = ((_Color.xyz * cse_7.xyz) * tmpvar_14);
  mediump vec3 tmpvar_15;
  lowp vec3 tmpvar_16;
  tmpvar_16 = _LightColor0.xyz;
  tmpvar_15 = tmpvar_16;
  lowp float shadow_17;
  mediump float tmpvar_18;
  tmpvar_18 = texture (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  lowp float tmpvar_19;
  tmpvar_19 = tmpvar_18;
  mediump float tmpvar_20;
  tmpvar_20 = (_LightShadowData.x + (tmpvar_19 * (1.0 - _LightShadowData.x)));
  shadow_17 = tmpvar_20;
  atten_2 = shadow_17;
  mediump float tmpvar_21;
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture (_OcclusionMap, xlv_TEXCOORD0.xy);
  tmpvar_21 = tmpvar_22.y;
  highp vec3 tmpvar_23;
  highp vec4 tmpvar_24;
  mediump vec3 cse_25;
  cse_25 = -(xlv_TEXCOORD1);
  tmpvar_23 = cse_25;
  tmpvar_24 = unity_SpecCube0_HDR;
  mediump vec3 tmpvar_26;
  mediump vec3 worldNormal_27;
  highp vec3 tmpvar_28;
  highp vec3 I_29;
  I_29 = -(tmpvar_23);
  tmpvar_28 = (I_29 - (2.0 * (
    dot (n_10, I_29)
   * n_10)));
  worldNormal_27 = tmpvar_28;
  mediump vec4 hdr_30;
  hdr_30 = tmpvar_24;
  highp float mip_31;
  mediump float tmpvar_32;
  tmpvar_32 = ((1.0 - sg_11.w) * 7.0);
  mip_31 = tmpvar_32;
  highp vec4 tmpvar_33;
  tmpvar_33.xyz = worldNormal_27;
  tmpvar_33.w = mip_31;
  lowp vec4 tmpvar_34;
  tmpvar_34 = texture (unity_SpecCube0, tmpvar_33.xyz, mip_31);
  mediump vec4 tmpvar_35;
  tmpvar_35 = tmpvar_34;
  tmpvar_26 = ((tmpvar_35.w * hdr_30.x) * tmpvar_35.xyz);
  tmpvar_26 = (tmpvar_26 * tmpvar_21);
  mediump vec2 tmpvar_36;
  tmpvar_36.x = dot ((cse_25 - (2.0 * 
    (dot (n_10, cse_25) * n_10)
  )), _WorldSpaceLightPos0.xyz);
  tmpvar_36.y = (1.0 - clamp (dot (n_10, cse_25), 0.0, 1.0));
  mediump vec2 tmpvar_37;
  tmpvar_37 = (((tmpvar_36 * tmpvar_36) * tmpvar_36) * tmpvar_36);
  mediump vec2 tmpvar_38;
  tmpvar_38.x = tmpvar_37.x;
  tmpvar_38.y = (1.0 - sg_11.w);
  lowp vec4 tmpvar_39;
  tmpvar_39 = texture (unity_NHxRoughness, tmpvar_38);
  mediump vec3 tmpvar_40;
  tmpvar_40 = (((
    ((tmpvar_13 + ((tmpvar_39.w * 16.0) * sg_11.xyz)) * (tmpvar_15 * atten_2))
   * 
    clamp (dot (n_10, _WorldSpaceLightPos0.xyz), 0.0, 1.0)
  ) + (
    (xlv_TEXCOORD5.xyz * tmpvar_21)
   * tmpvar_13)) + (tmpvar_26 * mix (sg_11.xyz, vec3(
    clamp ((sg_11.w + (1.0 - tmpvar_14)), 0.0, 1.0)
  ), tmpvar_37.yyy)));
  mediump vec4 tmpvar_41;
  tmpvar_41.w = 1.0;
  tmpvar_41.xyz = tmpvar_40;
  c_1.w = tmpvar_41.w;
  lowp vec4 tmpvar_42;
  tmpvar_42 = texture (_EmissionMap, xlv_TEXCOORD0.xy);
  c_1.xyz = (tmpvar_40 + (tmpvar_42.xyz * _EmissionColor.xyz));
  mediump vec4 xlat_varoutput_43;
  xlat_varoutput_43.xyz = c_1.xyz;
  xlat_varoutput_43.w = 1.0;
  _glesFragData[0] = xlat_varoutput_43;
}



#endif"
}
}
Program "fp" {
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_SPECGLOSSMAP" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_SPECGLOSSMAP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_SPECGLOSSMAP" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_SPECGLOSSMAP" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_SPECGLOSSMAP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_SPECGLOSSMAP" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_NORMALMAP" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES3"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" "_EMISSION" "_NORMALMAP" "_SPECGLOSSMAP" }
"!!GLES3"
}
}
 }
 Pass {
  Name "FORWARD_DELTA"
  Tags { "LIGHTMODE"="ForwardAdd" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  ZWrite Off
  Fog {
   Color (0,0,0,0)
  }
  Blend [_SrcBlend] One
  GpuProgramID 412570
Program "vp" {
SubProgram "gles " {
Keywords { "POINT" "SHADOWS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
uniform mediump mat4 _LightMatrix0;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp vec3 lightDir_5;
  highp mat3 tangentToWorld_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec3 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_6 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_6[0].x;
  v_30.y = tangentToWorld_6[1].x;
  v_30.z = tangentToWorld_6[2].x;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_6[0].y;
  v_31.y = tangentToWorld_6[1].y;
  v_31.z = tangentToWorld_6[2].y;
  tmpvar_8.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_6[0].z;
  v_32.y = tangentToWorld_6[1].z;
  v_32.z = tangentToWorld_6[2].z;
  tmpvar_9.xyz = v_32;
  highp vec3 tmpvar_33;
  tmpvar_33 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
  tmpvar_10 = tmpvar_33;
  highp vec3 tmpvar_34;
  tmpvar_34 = (_WorldSpaceLightPos0.xyz - (tmpvar_11.xyz * _WorldSpaceLightPos0.w));
  mediump vec3 n_35;
  n_35 = tmpvar_34;
  mediump vec3 tmpvar_36;
  tmpvar_36 = normalize(n_35);
  lightDir_5 = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = lightDir_5.x;
  tmpvar_7.w = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = lightDir_5.y;
  tmpvar_8.w = tmpvar_38;
  highp float tmpvar_39;
  tmpvar_39 = lightDir_5.z;
  tmpvar_9.w = tmpvar_39;
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD2_1 = tmpvar_8;
  xlv_TEXCOORD2_2 = tmpvar_9;
  xlv_TEXCOORD5 = tmpvar_10;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
uniform sampler2D _LightTexture0;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_3;
  tmpvar_3.xyz = _SpecColor.xyz;
  tmpvar_3.w = _Glossiness;
  mediump vec3 tmpvar_4;
  tmpvar_4.x = xlv_TEXCOORD2.w;
  tmpvar_4.y = xlv_TEXCOORD2_1.w;
  tmpvar_4.z = xlv_TEXCOORD2_2.w;
  mediump float tmpvar_5;
  tmpvar_5 = dot (xlv_TEXCOORD5, xlv_TEXCOORD5);
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_LightTexture0, vec2(tmpvar_5));
  mediump float atten_7;
  atten_7 = tmpvar_6.w;
  mediump vec3 tmpvar_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = _LightColor0.xyz;
  tmpvar_8 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 * atten_7);
  tmpvar_8 = tmpvar_10;
  mediump vec3 viewDir_11;
  viewDir_11 = -(xlv_TEXCOORD1);
  mediump vec2 tmpvar_12;
  tmpvar_12.x = dot ((viewDir_11 - (2.0 * 
    (dot (tmpvar_1, viewDir_11) * tmpvar_1)
  )), tmpvar_4);
  tmpvar_12.y = (1.0 - clamp (dot (tmpvar_1, viewDir_11), 0.0, 1.0));
  mediump vec2 tmpvar_13;
  tmpvar_13.x = (((tmpvar_12 * tmpvar_12) * tmpvar_12) * tmpvar_12).x;
  tmpvar_13.y = (1.0 - _Glossiness);
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (unity_NHxRoughness, tmpvar_13);
  mediump vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (((
    ((_Color.xyz * cse_2.xyz) * (1.0 - tmpvar_3.x))
   + 
    ((tmpvar_14.w * 16.0) * tmpvar_3.xyz)
  ) * tmpvar_10) * clamp (dot (tmpvar_1, tmpvar_4), 0.0, 1.0));
  mediump vec4 xlat_varoutput_16;
  xlat_varoutput_16.xyz = tmpvar_15.xyz;
  xlat_varoutput_16.w = 1.0;
  gl_FragData[0] = xlat_varoutput_16;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
uniform mediump mat4 _LightMatrix0;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp vec3 lightDir_5;
  highp mat3 tangentToWorld_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec3 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_6 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_6[0].x;
  v_30.y = tangentToWorld_6[1].x;
  v_30.z = tangentToWorld_6[2].x;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_6[0].y;
  v_31.y = tangentToWorld_6[1].y;
  v_31.z = tangentToWorld_6[2].y;
  tmpvar_8.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_6[0].z;
  v_32.y = tangentToWorld_6[1].z;
  v_32.z = tangentToWorld_6[2].z;
  tmpvar_9.xyz = v_32;
  highp vec3 tmpvar_33;
  tmpvar_33 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
  tmpvar_10 = tmpvar_33;
  highp vec3 tmpvar_34;
  tmpvar_34 = (_WorldSpaceLightPos0.xyz - (tmpvar_11.xyz * _WorldSpaceLightPos0.w));
  mediump vec3 n_35;
  n_35 = tmpvar_34;
  mediump vec3 tmpvar_36;
  tmpvar_36 = normalize(n_35);
  lightDir_5 = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = lightDir_5.x;
  tmpvar_7.w = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = lightDir_5.y;
  tmpvar_8.w = tmpvar_38;
  highp float tmpvar_39;
  tmpvar_39 = lightDir_5.z;
  tmpvar_9.w = tmpvar_39;
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD2_1 = tmpvar_8;
  xlv_TEXCOORD2_2 = tmpvar_9;
  xlv_TEXCOORD5 = tmpvar_10;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
uniform sampler2D _LightTexture0;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_3;
  tmpvar_3.xyz = _SpecColor.xyz;
  tmpvar_3.w = _Glossiness;
  mediump vec3 tmpvar_4;
  tmpvar_4.x = xlv_TEXCOORD2.w;
  tmpvar_4.y = xlv_TEXCOORD2_1.w;
  tmpvar_4.z = xlv_TEXCOORD2_2.w;
  mediump float tmpvar_5;
  tmpvar_5 = dot (xlv_TEXCOORD5, xlv_TEXCOORD5);
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture (_LightTexture0, vec2(tmpvar_5));
  mediump float atten_7;
  atten_7 = tmpvar_6.w;
  mediump vec3 tmpvar_8;
  lowp vec3 tmpvar_9;
  tmpvar_9 = _LightColor0.xyz;
  tmpvar_8 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8 * atten_7);
  tmpvar_8 = tmpvar_10;
  mediump vec3 viewDir_11;
  viewDir_11 = -(xlv_TEXCOORD1);
  mediump vec2 tmpvar_12;
  tmpvar_12.x = dot ((viewDir_11 - (2.0 * 
    (dot (tmpvar_1, viewDir_11) * tmpvar_1)
  )), tmpvar_4);
  tmpvar_12.y = (1.0 - clamp (dot (tmpvar_1, viewDir_11), 0.0, 1.0));
  mediump vec2 tmpvar_13;
  tmpvar_13.x = (((tmpvar_12 * tmpvar_12) * tmpvar_12) * tmpvar_12).x;
  tmpvar_13.y = (1.0 - _Glossiness);
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture (unity_NHxRoughness, tmpvar_13);
  mediump vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = (((
    ((_Color.xyz * cse_2.xyz) * (1.0 - tmpvar_3.x))
   + 
    ((tmpvar_14.w * 16.0) * tmpvar_3.xyz)
  ) * tmpvar_10) * clamp (dot (tmpvar_1, tmpvar_4), 0.0, 1.0));
  mediump vec4 xlat_varoutput_16;
  xlat_varoutput_16.xyz = tmpvar_15.xyz;
  xlat_varoutput_16.w = 1.0;
  _glesFragData[0] = xlat_varoutput_16;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_10;
  tmpvar_10 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_11;
  texcoord_11.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_12;
  if ((_UVSec == 0.0)) {
    tmpvar_12 = tmpvar_2;
  } else {
    tmpvar_12 = tmpvar_3;
  };
  texcoord_11.zw = ((tmpvar_12 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_13;
  n_13 = (tmpvar_9.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_14;
  norm_14 = tmpvar_1;
  highp vec4 v_15;
  v_15.x = _World2Object[0].x;
  v_15.y = _World2Object[1].x;
  v_15.z = _World2Object[2].x;
  v_15.w = _World2Object[3].x;
  highp vec4 v_16;
  v_16.x = _World2Object[0].y;
  v_16.y = _World2Object[1].y;
  v_16.z = _World2Object[2].y;
  v_16.w = _World2Object[3].y;
  highp vec4 v_17;
  v_17.x = _World2Object[0].z;
  v_17.y = _World2Object[1].z;
  v_17.z = _World2Object[2].z;
  v_17.w = _World2Object[3].z;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(((
    (v_15.xyz * norm_14.x)
   + 
    (v_16.xyz * norm_14.y)
  ) + (v_17.xyz * norm_14.z)));
  highp vec3 dir_19;
  dir_19 = tmpvar_4.xyz;
  highp mat3 tmpvar_20;
  tmpvar_20[0] = _Object2World[0].xyz;
  tmpvar_20[1] = _Object2World[1].xyz;
  tmpvar_20[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_21;
  tmpvar_21.xyz = normalize((tmpvar_20 * dir_19));
  tmpvar_21.w = tmpvar_4.w;
  highp vec3 tmpvar_22;
  tmpvar_22 = tmpvar_21.www;
  mediump vec3 normal_23;
  normal_23 = tmpvar_18;
  mediump vec3 tangent_24;
  tangent_24 = tmpvar_21.xyz;
  mediump vec3 flip_25;
  flip_25 = tmpvar_22;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (((normal_23.yzx * tangent_24.zxy) - (normal_23.zxy * tangent_24.yzx)) * flip_25);
  mediump mat3 tmpvar_27;
  tmpvar_27[0].x = tangent_24.x;
  tmpvar_27[0].y = tmpvar_26.x;
  tmpvar_27[0].z = normal_23.x;
  tmpvar_27[1].x = tangent_24.y;
  tmpvar_27[1].y = tmpvar_26.y;
  tmpvar_27[1].z = normal_23.y;
  tmpvar_27[2].x = tangent_24.z;
  tmpvar_27[2].y = tmpvar_26.z;
  tmpvar_27[2].z = normal_23.z;
  tangentToWorld_5 = tmpvar_27;
  highp vec3 v_28;
  v_28.x = tangentToWorld_5[0].x;
  v_28.y = tangentToWorld_5[1].x;
  v_28.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_28;
  highp vec3 v_29;
  v_29.x = tangentToWorld_5[0].y;
  v_29.y = tangentToWorld_5[1].y;
  v_29.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].z;
  v_30.y = tangentToWorld_5[1].z;
  v_30.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_30;
  highp vec3 tmpvar_31;
  tmpvar_31 = (_WorldSpaceLightPos0.xyz - (tmpvar_9.xyz * _WorldSpaceLightPos0.w));
  highp float tmpvar_32;
  tmpvar_32 = tmpvar_31.x;
  tmpvar_6.w = tmpvar_32;
  highp float tmpvar_33;
  tmpvar_33 = tmpvar_31.y;
  tmpvar_7.w = tmpvar_33;
  highp float tmpvar_34;
  tmpvar_34 = tmpvar_31.z;
  tmpvar_8.w = tmpvar_34;
  gl_Position = tmpvar_10;
  xlv_TEXCOORD0 = texcoord_11;
  xlv_TEXCOORD1 = normalize(n_13);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_3;
  tmpvar_3.xyz = _SpecColor.xyz;
  tmpvar_3.w = _Glossiness;
  mediump vec3 tmpvar_4;
  tmpvar_4.x = xlv_TEXCOORD2.w;
  tmpvar_4.y = xlv_TEXCOORD2_1.w;
  tmpvar_4.z = xlv_TEXCOORD2_2.w;
  mediump vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = _LightColor0.xyz;
  tmpvar_5 = tmpvar_6;
  mediump vec3 viewDir_7;
  viewDir_7 = -(xlv_TEXCOORD1);
  mediump vec2 tmpvar_8;
  tmpvar_8.x = dot ((viewDir_7 - (2.0 * 
    (dot (tmpvar_1, viewDir_7) * tmpvar_1)
  )), tmpvar_4);
  tmpvar_8.y = (1.0 - clamp (dot (tmpvar_1, viewDir_7), 0.0, 1.0));
  mediump vec2 tmpvar_9;
  tmpvar_9.x = (((tmpvar_8 * tmpvar_8) * tmpvar_8) * tmpvar_8).x;
  tmpvar_9.y = (1.0 - _Glossiness);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (unity_NHxRoughness, tmpvar_9);
  mediump vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = (((
    ((_Color.xyz * cse_2.xyz) * (1.0 - tmpvar_3.x))
   + 
    ((tmpvar_10.w * 16.0) * tmpvar_3.xyz)
  ) * tmpvar_5) * clamp (dot (tmpvar_1, tmpvar_4), 0.0, 1.0));
  mediump vec4 xlat_varoutput_12;
  xlat_varoutput_12.xyz = tmpvar_11.xyz;
  xlat_varoutput_12.w = 1.0;
  gl_FragData[0] = xlat_varoutput_12;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_10;
  tmpvar_10 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_11;
  texcoord_11.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_12;
  if ((_UVSec == 0.0)) {
    tmpvar_12 = tmpvar_2;
  } else {
    tmpvar_12 = tmpvar_3;
  };
  texcoord_11.zw = ((tmpvar_12 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_13;
  n_13 = (tmpvar_9.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_14;
  norm_14 = tmpvar_1;
  highp vec4 v_15;
  v_15.x = _World2Object[0].x;
  v_15.y = _World2Object[1].x;
  v_15.z = _World2Object[2].x;
  v_15.w = _World2Object[3].x;
  highp vec4 v_16;
  v_16.x = _World2Object[0].y;
  v_16.y = _World2Object[1].y;
  v_16.z = _World2Object[2].y;
  v_16.w = _World2Object[3].y;
  highp vec4 v_17;
  v_17.x = _World2Object[0].z;
  v_17.y = _World2Object[1].z;
  v_17.z = _World2Object[2].z;
  v_17.w = _World2Object[3].z;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(((
    (v_15.xyz * norm_14.x)
   + 
    (v_16.xyz * norm_14.y)
  ) + (v_17.xyz * norm_14.z)));
  highp vec3 dir_19;
  dir_19 = tmpvar_4.xyz;
  highp mat3 tmpvar_20;
  tmpvar_20[0] = _Object2World[0].xyz;
  tmpvar_20[1] = _Object2World[1].xyz;
  tmpvar_20[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_21;
  tmpvar_21.xyz = normalize((tmpvar_20 * dir_19));
  tmpvar_21.w = tmpvar_4.w;
  highp vec3 tmpvar_22;
  tmpvar_22 = tmpvar_21.www;
  mediump vec3 normal_23;
  normal_23 = tmpvar_18;
  mediump vec3 tangent_24;
  tangent_24 = tmpvar_21.xyz;
  mediump vec3 flip_25;
  flip_25 = tmpvar_22;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (((normal_23.yzx * tangent_24.zxy) - (normal_23.zxy * tangent_24.yzx)) * flip_25);
  mediump mat3 tmpvar_27;
  tmpvar_27[0].x = tangent_24.x;
  tmpvar_27[0].y = tmpvar_26.x;
  tmpvar_27[0].z = normal_23.x;
  tmpvar_27[1].x = tangent_24.y;
  tmpvar_27[1].y = tmpvar_26.y;
  tmpvar_27[1].z = normal_23.y;
  tmpvar_27[2].x = tangent_24.z;
  tmpvar_27[2].y = tmpvar_26.z;
  tmpvar_27[2].z = normal_23.z;
  tangentToWorld_5 = tmpvar_27;
  highp vec3 v_28;
  v_28.x = tangentToWorld_5[0].x;
  v_28.y = tangentToWorld_5[1].x;
  v_28.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_28;
  highp vec3 v_29;
  v_29.x = tangentToWorld_5[0].y;
  v_29.y = tangentToWorld_5[1].y;
  v_29.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].z;
  v_30.y = tangentToWorld_5[1].z;
  v_30.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_30;
  highp vec3 tmpvar_31;
  tmpvar_31 = (_WorldSpaceLightPos0.xyz - (tmpvar_9.xyz * _WorldSpaceLightPos0.w));
  highp float tmpvar_32;
  tmpvar_32 = tmpvar_31.x;
  tmpvar_6.w = tmpvar_32;
  highp float tmpvar_33;
  tmpvar_33 = tmpvar_31.y;
  tmpvar_7.w = tmpvar_33;
  highp float tmpvar_34;
  tmpvar_34 = tmpvar_31.z;
  tmpvar_8.w = tmpvar_34;
  gl_Position = tmpvar_10;
  xlv_TEXCOORD0 = texcoord_11;
  xlv_TEXCOORD1 = normalize(n_13);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_3;
  tmpvar_3.xyz = _SpecColor.xyz;
  tmpvar_3.w = _Glossiness;
  mediump vec3 tmpvar_4;
  tmpvar_4.x = xlv_TEXCOORD2.w;
  tmpvar_4.y = xlv_TEXCOORD2_1.w;
  tmpvar_4.z = xlv_TEXCOORD2_2.w;
  mediump vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = _LightColor0.xyz;
  tmpvar_5 = tmpvar_6;
  mediump vec3 viewDir_7;
  viewDir_7 = -(xlv_TEXCOORD1);
  mediump vec2 tmpvar_8;
  tmpvar_8.x = dot ((viewDir_7 - (2.0 * 
    (dot (tmpvar_1, viewDir_7) * tmpvar_1)
  )), tmpvar_4);
  tmpvar_8.y = (1.0 - clamp (dot (tmpvar_1, viewDir_7), 0.0, 1.0));
  mediump vec2 tmpvar_9;
  tmpvar_9.x = (((tmpvar_8 * tmpvar_8) * tmpvar_8) * tmpvar_8).x;
  tmpvar_9.y = (1.0 - _Glossiness);
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture (unity_NHxRoughness, tmpvar_9);
  mediump vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = (((
    ((_Color.xyz * cse_2.xyz) * (1.0 - tmpvar_3.x))
   + 
    ((tmpvar_10.w * 16.0) * tmpvar_3.xyz)
  ) * tmpvar_5) * clamp (dot (tmpvar_1, tmpvar_4), 0.0, 1.0));
  mediump vec4 xlat_varoutput_12;
  xlat_varoutput_12.xyz = tmpvar_11.xyz;
  xlat_varoutput_12.w = 1.0;
  _glesFragData[0] = xlat_varoutput_12;
}



#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "SHADOWS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
uniform mediump mat4 _LightMatrix0;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp vec3 lightDir_5;
  highp mat3 tangentToWorld_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec4 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_6 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_6[0].x;
  v_30.y = tangentToWorld_6[1].x;
  v_30.z = tangentToWorld_6[2].x;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_6[0].y;
  v_31.y = tangentToWorld_6[1].y;
  v_31.z = tangentToWorld_6[2].y;
  tmpvar_8.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_6[0].z;
  v_32.y = tangentToWorld_6[1].z;
  v_32.z = tangentToWorld_6[2].z;
  tmpvar_9.xyz = v_32;
  highp vec4 tmpvar_33;
  tmpvar_33 = (_LightMatrix0 * (_Object2World * _glesVertex));
  tmpvar_10 = tmpvar_33;
  highp vec3 tmpvar_34;
  tmpvar_34 = (_WorldSpaceLightPos0.xyz - (tmpvar_11.xyz * _WorldSpaceLightPos0.w));
  mediump vec3 n_35;
  n_35 = tmpvar_34;
  mediump vec3 tmpvar_36;
  tmpvar_36 = normalize(n_35);
  lightDir_5 = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = lightDir_5.x;
  tmpvar_7.w = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = lightDir_5.y;
  tmpvar_8.w = tmpvar_38;
  highp float tmpvar_39;
  tmpvar_39 = lightDir_5.z;
  tmpvar_9.w = tmpvar_39;
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD2_1 = tmpvar_8;
  xlv_TEXCOORD2_2 = tmpvar_9;
  xlv_TEXCOORD5 = tmpvar_10;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_3;
  tmpvar_3.xyz = _SpecColor.xyz;
  tmpvar_3.w = _Glossiness;
  mediump vec3 tmpvar_4;
  tmpvar_4.x = xlv_TEXCOORD2.w;
  tmpvar_4.y = xlv_TEXCOORD2_1.w;
  tmpvar_4.z = xlv_TEXCOORD2_2.w;
  lowp vec4 tmpvar_5;
  mediump vec2 P_6;
  P_6 = ((xlv_TEXCOORD5.xy / xlv_TEXCOORD5.w) + 0.5);
  tmpvar_5 = texture2D (_LightTexture0, P_6);
  mediump float tmpvar_7;
  tmpvar_7 = dot (xlv_TEXCOORD5.xyz, xlv_TEXCOORD5.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_LightTextureB0, vec2(tmpvar_7));
  mediump vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = _LightColor0.xyz;
  tmpvar_9 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_9 * ((
    float((xlv_TEXCOORD5.z > 0.0))
   * tmpvar_5.w) * tmpvar_8.w));
  tmpvar_9 = tmpvar_11;
  mediump vec3 viewDir_12;
  viewDir_12 = -(xlv_TEXCOORD1);
  mediump vec2 tmpvar_13;
  tmpvar_13.x = dot ((viewDir_12 - (2.0 * 
    (dot (tmpvar_1, viewDir_12) * tmpvar_1)
  )), tmpvar_4);
  tmpvar_13.y = (1.0 - clamp (dot (tmpvar_1, viewDir_12), 0.0, 1.0));
  mediump vec2 tmpvar_14;
  tmpvar_14.x = (((tmpvar_13 * tmpvar_13) * tmpvar_13) * tmpvar_13).x;
  tmpvar_14.y = (1.0 - _Glossiness);
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (unity_NHxRoughness, tmpvar_14);
  mediump vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (((
    ((_Color.xyz * cse_2.xyz) * (1.0 - tmpvar_3.x))
   + 
    ((tmpvar_15.w * 16.0) * tmpvar_3.xyz)
  ) * tmpvar_11) * clamp (dot (tmpvar_1, tmpvar_4), 0.0, 1.0));
  mediump vec4 xlat_varoutput_17;
  xlat_varoutput_17.xyz = tmpvar_16.xyz;
  xlat_varoutput_17.w = 1.0;
  gl_FragData[0] = xlat_varoutput_17;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
uniform mediump mat4 _LightMatrix0;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp vec3 lightDir_5;
  highp mat3 tangentToWorld_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec4 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_6 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_6[0].x;
  v_30.y = tangentToWorld_6[1].x;
  v_30.z = tangentToWorld_6[2].x;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_6[0].y;
  v_31.y = tangentToWorld_6[1].y;
  v_31.z = tangentToWorld_6[2].y;
  tmpvar_8.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_6[0].z;
  v_32.y = tangentToWorld_6[1].z;
  v_32.z = tangentToWorld_6[2].z;
  tmpvar_9.xyz = v_32;
  highp vec4 tmpvar_33;
  tmpvar_33 = (_LightMatrix0 * (_Object2World * _glesVertex));
  tmpvar_10 = tmpvar_33;
  highp vec3 tmpvar_34;
  tmpvar_34 = (_WorldSpaceLightPos0.xyz - (tmpvar_11.xyz * _WorldSpaceLightPos0.w));
  mediump vec3 n_35;
  n_35 = tmpvar_34;
  mediump vec3 tmpvar_36;
  tmpvar_36 = normalize(n_35);
  lightDir_5 = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = lightDir_5.x;
  tmpvar_7.w = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = lightDir_5.y;
  tmpvar_8.w = tmpvar_38;
  highp float tmpvar_39;
  tmpvar_39 = lightDir_5.z;
  tmpvar_9.w = tmpvar_39;
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD2_1 = tmpvar_8;
  xlv_TEXCOORD2_2 = tmpvar_9;
  xlv_TEXCOORD5 = tmpvar_10;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_3;
  tmpvar_3.xyz = _SpecColor.xyz;
  tmpvar_3.w = _Glossiness;
  mediump vec3 tmpvar_4;
  tmpvar_4.x = xlv_TEXCOORD2.w;
  tmpvar_4.y = xlv_TEXCOORD2_1.w;
  tmpvar_4.z = xlv_TEXCOORD2_2.w;
  lowp vec4 tmpvar_5;
  mediump vec2 P_6;
  P_6 = ((xlv_TEXCOORD5.xy / xlv_TEXCOORD5.w) + 0.5);
  tmpvar_5 = texture (_LightTexture0, P_6);
  mediump float tmpvar_7;
  tmpvar_7 = dot (xlv_TEXCOORD5.xyz, xlv_TEXCOORD5.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture (_LightTextureB0, vec2(tmpvar_7));
  mediump vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = _LightColor0.xyz;
  tmpvar_9 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_9 * ((
    float((xlv_TEXCOORD5.z > 0.0))
   * tmpvar_5.w) * tmpvar_8.w));
  tmpvar_9 = tmpvar_11;
  mediump vec3 viewDir_12;
  viewDir_12 = -(xlv_TEXCOORD1);
  mediump vec2 tmpvar_13;
  tmpvar_13.x = dot ((viewDir_12 - (2.0 * 
    (dot (tmpvar_1, viewDir_12) * tmpvar_1)
  )), tmpvar_4);
  tmpvar_13.y = (1.0 - clamp (dot (tmpvar_1, viewDir_12), 0.0, 1.0));
  mediump vec2 tmpvar_14;
  tmpvar_14.x = (((tmpvar_13 * tmpvar_13) * tmpvar_13) * tmpvar_13).x;
  tmpvar_14.y = (1.0 - _Glossiness);
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture (unity_NHxRoughness, tmpvar_14);
  mediump vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (((
    ((_Color.xyz * cse_2.xyz) * (1.0 - tmpvar_3.x))
   + 
    ((tmpvar_15.w * 16.0) * tmpvar_3.xyz)
  ) * tmpvar_11) * clamp (dot (tmpvar_1, tmpvar_4), 0.0, 1.0));
  mediump vec4 xlat_varoutput_17;
  xlat_varoutput_17.xyz = tmpvar_16.xyz;
  xlat_varoutput_17.w = 1.0;
  _glesFragData[0] = xlat_varoutput_17;
}



#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
uniform mediump mat4 _LightMatrix0;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp vec3 lightDir_5;
  highp mat3 tangentToWorld_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec3 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_6 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_6[0].x;
  v_30.y = tangentToWorld_6[1].x;
  v_30.z = tangentToWorld_6[2].x;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_6[0].y;
  v_31.y = tangentToWorld_6[1].y;
  v_31.z = tangentToWorld_6[2].y;
  tmpvar_8.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_6[0].z;
  v_32.y = tangentToWorld_6[1].z;
  v_32.z = tangentToWorld_6[2].z;
  tmpvar_9.xyz = v_32;
  highp vec3 tmpvar_33;
  tmpvar_33 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
  tmpvar_10 = tmpvar_33;
  highp vec3 tmpvar_34;
  tmpvar_34 = (_WorldSpaceLightPos0.xyz - (tmpvar_11.xyz * _WorldSpaceLightPos0.w));
  mediump vec3 n_35;
  n_35 = tmpvar_34;
  mediump vec3 tmpvar_36;
  tmpvar_36 = normalize(n_35);
  lightDir_5 = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = lightDir_5.x;
  tmpvar_7.w = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = lightDir_5.y;
  tmpvar_8.w = tmpvar_38;
  highp float tmpvar_39;
  tmpvar_39 = lightDir_5.z;
  tmpvar_9.w = tmpvar_39;
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD2_1 = tmpvar_8;
  xlv_TEXCOORD2_2 = tmpvar_9;
  xlv_TEXCOORD5 = tmpvar_10;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
uniform lowp samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_3;
  tmpvar_3.xyz = _SpecColor.xyz;
  tmpvar_3.w = _Glossiness;
  mediump vec3 tmpvar_4;
  tmpvar_4.x = xlv_TEXCOORD2.w;
  tmpvar_4.y = xlv_TEXCOORD2_1.w;
  tmpvar_4.z = xlv_TEXCOORD2_2.w;
  mediump float tmpvar_5;
  tmpvar_5 = dot (xlv_TEXCOORD5, xlv_TEXCOORD5);
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture2D (_LightTextureB0, vec2(tmpvar_5));
  lowp vec4 tmpvar_7;
  tmpvar_7 = textureCube (_LightTexture0, xlv_TEXCOORD5);
  mediump float atten_8;
  atten_8 = (tmpvar_6.w * tmpvar_7.w);
  mediump vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = _LightColor0.xyz;
  tmpvar_9 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_9 * atten_8);
  tmpvar_9 = tmpvar_11;
  mediump vec3 viewDir_12;
  viewDir_12 = -(xlv_TEXCOORD1);
  mediump vec2 tmpvar_13;
  tmpvar_13.x = dot ((viewDir_12 - (2.0 * 
    (dot (tmpvar_1, viewDir_12) * tmpvar_1)
  )), tmpvar_4);
  tmpvar_13.y = (1.0 - clamp (dot (tmpvar_1, viewDir_12), 0.0, 1.0));
  mediump vec2 tmpvar_14;
  tmpvar_14.x = (((tmpvar_13 * tmpvar_13) * tmpvar_13) * tmpvar_13).x;
  tmpvar_14.y = (1.0 - _Glossiness);
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (unity_NHxRoughness, tmpvar_14);
  mediump vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (((
    ((_Color.xyz * cse_2.xyz) * (1.0 - tmpvar_3.x))
   + 
    ((tmpvar_15.w * 16.0) * tmpvar_3.xyz)
  ) * tmpvar_11) * clamp (dot (tmpvar_1, tmpvar_4), 0.0, 1.0));
  mediump vec4 xlat_varoutput_17;
  xlat_varoutput_17.xyz = tmpvar_16.xyz;
  xlat_varoutput_17.w = 1.0;
  gl_FragData[0] = xlat_varoutput_17;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
uniform mediump mat4 _LightMatrix0;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp vec3 lightDir_5;
  highp mat3 tangentToWorld_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec3 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_6 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_6[0].x;
  v_30.y = tangentToWorld_6[1].x;
  v_30.z = tangentToWorld_6[2].x;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_6[0].y;
  v_31.y = tangentToWorld_6[1].y;
  v_31.z = tangentToWorld_6[2].y;
  tmpvar_8.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_6[0].z;
  v_32.y = tangentToWorld_6[1].z;
  v_32.z = tangentToWorld_6[2].z;
  tmpvar_9.xyz = v_32;
  highp vec3 tmpvar_33;
  tmpvar_33 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
  tmpvar_10 = tmpvar_33;
  highp vec3 tmpvar_34;
  tmpvar_34 = (_WorldSpaceLightPos0.xyz - (tmpvar_11.xyz * _WorldSpaceLightPos0.w));
  mediump vec3 n_35;
  n_35 = tmpvar_34;
  mediump vec3 tmpvar_36;
  tmpvar_36 = normalize(n_35);
  lightDir_5 = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = lightDir_5.x;
  tmpvar_7.w = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = lightDir_5.y;
  tmpvar_8.w = tmpvar_38;
  highp float tmpvar_39;
  tmpvar_39 = lightDir_5.z;
  tmpvar_9.w = tmpvar_39;
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD2_1 = tmpvar_8;
  xlv_TEXCOORD2_2 = tmpvar_9;
  xlv_TEXCOORD5 = tmpvar_10;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
uniform lowp samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_3;
  tmpvar_3.xyz = _SpecColor.xyz;
  tmpvar_3.w = _Glossiness;
  mediump vec3 tmpvar_4;
  tmpvar_4.x = xlv_TEXCOORD2.w;
  tmpvar_4.y = xlv_TEXCOORD2_1.w;
  tmpvar_4.z = xlv_TEXCOORD2_2.w;
  mediump float tmpvar_5;
  tmpvar_5 = dot (xlv_TEXCOORD5, xlv_TEXCOORD5);
  lowp vec4 tmpvar_6;
  tmpvar_6 = texture (_LightTextureB0, vec2(tmpvar_5));
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture (_LightTexture0, xlv_TEXCOORD5);
  mediump float atten_8;
  atten_8 = (tmpvar_6.w * tmpvar_7.w);
  mediump vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = _LightColor0.xyz;
  tmpvar_9 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_9 * atten_8);
  tmpvar_9 = tmpvar_11;
  mediump vec3 viewDir_12;
  viewDir_12 = -(xlv_TEXCOORD1);
  mediump vec2 tmpvar_13;
  tmpvar_13.x = dot ((viewDir_12 - (2.0 * 
    (dot (tmpvar_1, viewDir_12) * tmpvar_1)
  )), tmpvar_4);
  tmpvar_13.y = (1.0 - clamp (dot (tmpvar_1, viewDir_12), 0.0, 1.0));
  mediump vec2 tmpvar_14;
  tmpvar_14.x = (((tmpvar_13 * tmpvar_13) * tmpvar_13) * tmpvar_13).x;
  tmpvar_14.y = (1.0 - _Glossiness);
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture (unity_NHxRoughness, tmpvar_14);
  mediump vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (((
    ((_Color.xyz * cse_2.xyz) * (1.0 - tmpvar_3.x))
   + 
    ((tmpvar_15.w * 16.0) * tmpvar_3.xyz)
  ) * tmpvar_11) * clamp (dot (tmpvar_1, tmpvar_4), 0.0, 1.0));
  mediump vec4 xlat_varoutput_17;
  xlat_varoutput_17.xyz = tmpvar_16.xyz;
  xlat_varoutput_17.w = 1.0;
  _glesFragData[0] = xlat_varoutput_17;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
uniform mediump mat4 _LightMatrix0;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec2 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec2 tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_11;
  tmpvar_11 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_12;
  texcoord_12.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_13;
  if ((_UVSec == 0.0)) {
    tmpvar_13 = tmpvar_2;
  } else {
    tmpvar_13 = tmpvar_3;
  };
  texcoord_12.zw = ((tmpvar_13 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_14;
  n_14 = (tmpvar_10.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_15;
  norm_15 = tmpvar_1;
  highp vec4 v_16;
  v_16.x = _World2Object[0].x;
  v_16.y = _World2Object[1].x;
  v_16.z = _World2Object[2].x;
  v_16.w = _World2Object[3].x;
  highp vec4 v_17;
  v_17.x = _World2Object[0].y;
  v_17.y = _World2Object[1].y;
  v_17.z = _World2Object[2].y;
  v_17.w = _World2Object[3].y;
  highp vec4 v_18;
  v_18.x = _World2Object[0].z;
  v_18.y = _World2Object[1].z;
  v_18.z = _World2Object[2].z;
  v_18.w = _World2Object[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(((
    (v_16.xyz * norm_15.x)
   + 
    (v_17.xyz * norm_15.y)
  ) + (v_18.xyz * norm_15.z)));
  highp vec3 dir_20;
  dir_20 = tmpvar_4.xyz;
  highp mat3 tmpvar_21;
  tmpvar_21[0] = _Object2World[0].xyz;
  tmpvar_21[1] = _Object2World[1].xyz;
  tmpvar_21[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = normalize((tmpvar_21 * dir_20));
  tmpvar_22.w = tmpvar_4.w;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.www;
  mediump vec3 normal_24;
  normal_24 = tmpvar_19;
  mediump vec3 tangent_25;
  tangent_25 = tmpvar_22.xyz;
  mediump vec3 flip_26;
  flip_26 = tmpvar_23;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (((normal_24.yzx * tangent_25.zxy) - (normal_24.zxy * tangent_25.yzx)) * flip_26);
  mediump mat3 tmpvar_28;
  tmpvar_28[0].x = tangent_25.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = normal_24.x;
  tmpvar_28[1].x = tangent_25.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = normal_24.y;
  tmpvar_28[2].x = tangent_25.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = normal_24.z;
  tangentToWorld_5 = tmpvar_28;
  highp vec3 v_29;
  v_29.x = tangentToWorld_5[0].x;
  v_29.y = tangentToWorld_5[1].x;
  v_29.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].y;
  v_30.y = tangentToWorld_5[1].y;
  v_30.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].z;
  v_31.y = tangentToWorld_5[1].z;
  v_31.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_31;
  highp vec2 tmpvar_32;
  tmpvar_32 = (_LightMatrix0 * (_Object2World * _glesVertex)).xy;
  tmpvar_9 = tmpvar_32;
  highp vec3 tmpvar_33;
  tmpvar_33 = (_WorldSpaceLightPos0.xyz - (tmpvar_10.xyz * _WorldSpaceLightPos0.w));
  highp float tmpvar_34;
  tmpvar_34 = tmpvar_33.x;
  tmpvar_6.w = tmpvar_34;
  highp float tmpvar_35;
  tmpvar_35 = tmpvar_33.y;
  tmpvar_7.w = tmpvar_35;
  highp float tmpvar_36;
  tmpvar_36 = tmpvar_33.z;
  tmpvar_8.w = tmpvar_36;
  gl_Position = tmpvar_11;
  xlv_TEXCOORD0 = texcoord_12;
  xlv_TEXCOORD1 = normalize(n_14);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
uniform sampler2D _LightTexture0;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec2 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_3;
  tmpvar_3.xyz = _SpecColor.xyz;
  tmpvar_3.w = _Glossiness;
  mediump vec3 tmpvar_4;
  tmpvar_4.x = xlv_TEXCOORD2.w;
  tmpvar_4.y = xlv_TEXCOORD2_1.w;
  tmpvar_4.z = xlv_TEXCOORD2_2.w;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_LightTexture0, xlv_TEXCOORD5);
  mediump float atten_6;
  atten_6 = tmpvar_5.w;
  mediump vec3 tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = _LightColor0.xyz;
  tmpvar_7 = tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_7 * atten_6);
  tmpvar_7 = tmpvar_9;
  mediump vec3 viewDir_10;
  viewDir_10 = -(xlv_TEXCOORD1);
  mediump vec2 tmpvar_11;
  tmpvar_11.x = dot ((viewDir_10 - (2.0 * 
    (dot (tmpvar_1, viewDir_10) * tmpvar_1)
  )), tmpvar_4);
  tmpvar_11.y = (1.0 - clamp (dot (tmpvar_1, viewDir_10), 0.0, 1.0));
  mediump vec2 tmpvar_12;
  tmpvar_12.x = (((tmpvar_11 * tmpvar_11) * tmpvar_11) * tmpvar_11).x;
  tmpvar_12.y = (1.0 - _Glossiness);
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (unity_NHxRoughness, tmpvar_12);
  mediump vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = (((
    ((_Color.xyz * cse_2.xyz) * (1.0 - tmpvar_3.x))
   + 
    ((tmpvar_13.w * 16.0) * tmpvar_3.xyz)
  ) * tmpvar_9) * clamp (dot (tmpvar_1, tmpvar_4), 0.0, 1.0));
  mediump vec4 xlat_varoutput_15;
  xlat_varoutput_15.xyz = tmpvar_14.xyz;
  xlat_varoutput_15.w = 1.0;
  gl_FragData[0] = xlat_varoutput_15;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
uniform mediump mat4 _LightMatrix0;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec2 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec2 tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_11;
  tmpvar_11 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_12;
  texcoord_12.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_13;
  if ((_UVSec == 0.0)) {
    tmpvar_13 = tmpvar_2;
  } else {
    tmpvar_13 = tmpvar_3;
  };
  texcoord_12.zw = ((tmpvar_13 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_14;
  n_14 = (tmpvar_10.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_15;
  norm_15 = tmpvar_1;
  highp vec4 v_16;
  v_16.x = _World2Object[0].x;
  v_16.y = _World2Object[1].x;
  v_16.z = _World2Object[2].x;
  v_16.w = _World2Object[3].x;
  highp vec4 v_17;
  v_17.x = _World2Object[0].y;
  v_17.y = _World2Object[1].y;
  v_17.z = _World2Object[2].y;
  v_17.w = _World2Object[3].y;
  highp vec4 v_18;
  v_18.x = _World2Object[0].z;
  v_18.y = _World2Object[1].z;
  v_18.z = _World2Object[2].z;
  v_18.w = _World2Object[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(((
    (v_16.xyz * norm_15.x)
   + 
    (v_17.xyz * norm_15.y)
  ) + (v_18.xyz * norm_15.z)));
  highp vec3 dir_20;
  dir_20 = tmpvar_4.xyz;
  highp mat3 tmpvar_21;
  tmpvar_21[0] = _Object2World[0].xyz;
  tmpvar_21[1] = _Object2World[1].xyz;
  tmpvar_21[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = normalize((tmpvar_21 * dir_20));
  tmpvar_22.w = tmpvar_4.w;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.www;
  mediump vec3 normal_24;
  normal_24 = tmpvar_19;
  mediump vec3 tangent_25;
  tangent_25 = tmpvar_22.xyz;
  mediump vec3 flip_26;
  flip_26 = tmpvar_23;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (((normal_24.yzx * tangent_25.zxy) - (normal_24.zxy * tangent_25.yzx)) * flip_26);
  mediump mat3 tmpvar_28;
  tmpvar_28[0].x = tangent_25.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = normal_24.x;
  tmpvar_28[1].x = tangent_25.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = normal_24.y;
  tmpvar_28[2].x = tangent_25.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = normal_24.z;
  tangentToWorld_5 = tmpvar_28;
  highp vec3 v_29;
  v_29.x = tangentToWorld_5[0].x;
  v_29.y = tangentToWorld_5[1].x;
  v_29.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].y;
  v_30.y = tangentToWorld_5[1].y;
  v_30.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].z;
  v_31.y = tangentToWorld_5[1].z;
  v_31.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_31;
  highp vec2 tmpvar_32;
  tmpvar_32 = (_LightMatrix0 * (_Object2World * _glesVertex)).xy;
  tmpvar_9 = tmpvar_32;
  highp vec3 tmpvar_33;
  tmpvar_33 = (_WorldSpaceLightPos0.xyz - (tmpvar_10.xyz * _WorldSpaceLightPos0.w));
  highp float tmpvar_34;
  tmpvar_34 = tmpvar_33.x;
  tmpvar_6.w = tmpvar_34;
  highp float tmpvar_35;
  tmpvar_35 = tmpvar_33.y;
  tmpvar_7.w = tmpvar_35;
  highp float tmpvar_36;
  tmpvar_36 = tmpvar_33.z;
  tmpvar_8.w = tmpvar_36;
  gl_Position = tmpvar_11;
  xlv_TEXCOORD0 = texcoord_12;
  xlv_TEXCOORD1 = normalize(n_14);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
uniform sampler2D _LightTexture0;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec2 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_3;
  tmpvar_3.xyz = _SpecColor.xyz;
  tmpvar_3.w = _Glossiness;
  mediump vec3 tmpvar_4;
  tmpvar_4.x = xlv_TEXCOORD2.w;
  tmpvar_4.y = xlv_TEXCOORD2_1.w;
  tmpvar_4.z = xlv_TEXCOORD2_2.w;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture (_LightTexture0, xlv_TEXCOORD5);
  mediump float atten_6;
  atten_6 = tmpvar_5.w;
  mediump vec3 tmpvar_7;
  lowp vec3 tmpvar_8;
  tmpvar_8 = _LightColor0.xyz;
  tmpvar_7 = tmpvar_8;
  mediump vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_7 * atten_6);
  tmpvar_7 = tmpvar_9;
  mediump vec3 viewDir_10;
  viewDir_10 = -(xlv_TEXCOORD1);
  mediump vec2 tmpvar_11;
  tmpvar_11.x = dot ((viewDir_10 - (2.0 * 
    (dot (tmpvar_1, viewDir_10) * tmpvar_1)
  )), tmpvar_4);
  tmpvar_11.y = (1.0 - clamp (dot (tmpvar_1, viewDir_10), 0.0, 1.0));
  mediump vec2 tmpvar_12;
  tmpvar_12.x = (((tmpvar_11 * tmpvar_11) * tmpvar_11) * tmpvar_11).x;
  tmpvar_12.y = (1.0 - _Glossiness);
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture (unity_NHxRoughness, tmpvar_12);
  mediump vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = (((
    ((_Color.xyz * cse_2.xyz) * (1.0 - tmpvar_3.x))
   + 
    ((tmpvar_13.w * 16.0) * tmpvar_3.xyz)
  ) * tmpvar_9) * clamp (dot (tmpvar_1, tmpvar_4), 0.0, 1.0));
  mediump vec4 xlat_varoutput_15;
  xlat_varoutput_15.xyz = tmpvar_14.xyz;
  xlat_varoutput_15.w = 1.0;
  _glesFragData[0] = xlat_varoutput_15;
}



#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NONATIVE" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
uniform mediump mat4 _LightMatrix0;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp vec3 lightDir_5;
  highp mat3 tangentToWorld_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec4 tmpvar_10;
  mediump vec4 tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_13;
  tmpvar_13 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_14;
  texcoord_14.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_15;
  if ((_UVSec == 0.0)) {
    tmpvar_15 = tmpvar_2;
  } else {
    tmpvar_15 = tmpvar_3;
  };
  texcoord_14.zw = ((tmpvar_15 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_16;
  n_16 = (tmpvar_12.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_17;
  norm_17 = tmpvar_1;
  highp vec4 v_18;
  v_18.x = _World2Object[0].x;
  v_18.y = _World2Object[1].x;
  v_18.z = _World2Object[2].x;
  v_18.w = _World2Object[3].x;
  highp vec4 v_19;
  v_19.x = _World2Object[0].y;
  v_19.y = _World2Object[1].y;
  v_19.z = _World2Object[2].y;
  v_19.w = _World2Object[3].y;
  highp vec4 v_20;
  v_20.x = _World2Object[0].z;
  v_20.y = _World2Object[1].z;
  v_20.z = _World2Object[2].z;
  v_20.w = _World2Object[3].z;
  highp vec3 tmpvar_21;
  tmpvar_21 = normalize(((
    (v_18.xyz * norm_17.x)
   + 
    (v_19.xyz * norm_17.y)
  ) + (v_20.xyz * norm_17.z)));
  highp vec3 dir_22;
  dir_22 = tmpvar_4.xyz;
  highp mat3 tmpvar_23;
  tmpvar_23[0] = _Object2World[0].xyz;
  tmpvar_23[1] = _Object2World[1].xyz;
  tmpvar_23[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_24;
  tmpvar_24.xyz = normalize((tmpvar_23 * dir_22));
  tmpvar_24.w = tmpvar_4.w;
  highp vec3 tmpvar_25;
  tmpvar_25 = tmpvar_24.www;
  mediump vec3 normal_26;
  normal_26 = tmpvar_21;
  mediump vec3 tangent_27;
  tangent_27 = tmpvar_24.xyz;
  mediump vec3 flip_28;
  flip_28 = tmpvar_25;
  mediump vec3 tmpvar_29;
  tmpvar_29 = (((normal_26.yzx * tangent_27.zxy) - (normal_26.zxy * tangent_27.yzx)) * flip_28);
  mediump mat3 tmpvar_30;
  tmpvar_30[0].x = tangent_27.x;
  tmpvar_30[0].y = tmpvar_29.x;
  tmpvar_30[0].z = normal_26.x;
  tmpvar_30[1].x = tangent_27.y;
  tmpvar_30[1].y = tmpvar_29.y;
  tmpvar_30[1].z = normal_26.y;
  tmpvar_30[2].x = tangent_27.z;
  tmpvar_30[2].y = tmpvar_29.z;
  tmpvar_30[2].z = normal_26.z;
  tangentToWorld_6 = tmpvar_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_6[0].x;
  v_31.y = tangentToWorld_6[1].x;
  v_31.z = tangentToWorld_6[2].x;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_6[0].y;
  v_32.y = tangentToWorld_6[1].y;
  v_32.z = tangentToWorld_6[2].y;
  tmpvar_8.xyz = v_32;
  highp vec3 v_33;
  v_33.x = tangentToWorld_6[0].z;
  v_33.y = tangentToWorld_6[1].z;
  v_33.z = tangentToWorld_6[2].z;
  tmpvar_9.xyz = v_33;
  highp vec4 tmpvar_34;
  highp vec4 cse_35;
  cse_35 = (_Object2World * _glesVertex);
  tmpvar_34 = (_LightMatrix0 * cse_35);
  tmpvar_10 = tmpvar_34;
  highp vec4 tmpvar_36;
  tmpvar_36 = (unity_World2Shadow[0] * cse_35);
  tmpvar_11 = tmpvar_36;
  highp vec3 tmpvar_37;
  tmpvar_37 = (_WorldSpaceLightPos0.xyz - (tmpvar_12.xyz * _WorldSpaceLightPos0.w));
  mediump vec3 n_38;
  n_38 = tmpvar_37;
  mediump vec3 tmpvar_39;
  tmpvar_39 = normalize(n_38);
  lightDir_5 = tmpvar_39;
  highp float tmpvar_40;
  tmpvar_40 = lightDir_5.x;
  tmpvar_7.w = tmpvar_40;
  highp float tmpvar_41;
  tmpvar_41 = lightDir_5.y;
  tmpvar_8.w = tmpvar_41;
  highp float tmpvar_42;
  tmpvar_42 = lightDir_5.z;
  tmpvar_9.w = tmpvar_42;
  gl_Position = tmpvar_13;
  xlv_TEXCOORD0 = texcoord_14;
  xlv_TEXCOORD1 = normalize(n_16);
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD2_1 = tmpvar_8;
  xlv_TEXCOORD2_2 = tmpvar_9;
  xlv_TEXCOORD5 = tmpvar_10;
  xlv_TEXCOORD6 = tmpvar_11;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_3;
  tmpvar_3.xyz = _SpecColor.xyz;
  tmpvar_3.w = _Glossiness;
  mediump vec3 tmpvar_4;
  tmpvar_4 = ((_Color.xyz * cse_2.xyz) * (1.0 - tmpvar_3.x));
  mediump vec3 tmpvar_5;
  tmpvar_5.x = xlv_TEXCOORD2.w;
  tmpvar_5.y = xlv_TEXCOORD2_1.w;
  tmpvar_5.z = xlv_TEXCOORD2_2.w;
  lowp vec4 tmpvar_6;
  mediump vec2 P_7;
  P_7 = ((xlv_TEXCOORD5.xy / xlv_TEXCOORD5.w) + 0.5);
  tmpvar_6 = texture2D (_LightTexture0, P_7);
  mediump float tmpvar_8;
  tmpvar_8 = dot (xlv_TEXCOORD5.xyz, xlv_TEXCOORD5.xyz);
  lowp vec4 tmpvar_9;
  tmpvar_9 = texture2D (_LightTextureB0, vec2(tmpvar_8));
  lowp float tmpvar_10;
  highp vec4 shadowCoord_11;
  shadowCoord_11 = xlv_TEXCOORD6;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2DProj (_ShadowMapTexture, shadowCoord_11);
  mediump float tmpvar_13;
  if ((tmpvar_12.x < (shadowCoord_11.z / shadowCoord_11.w))) {
    tmpvar_13 = _LightShadowData.x;
  } else {
    tmpvar_13 = 1.0;
  };
  tmpvar_10 = tmpvar_13;
  mediump vec3 tmpvar_14;
  lowp vec3 tmpvar_15;
  tmpvar_15 = _LightColor0.xyz;
  tmpvar_14 = tmpvar_15;
  mediump vec3 tmpvar_16;
  tmpvar_16 = (tmpvar_14 * ((
    (float((xlv_TEXCOORD5.z > 0.0)) * tmpvar_6.w)
   * tmpvar_9.w) * tmpvar_10));
  tmpvar_14 = tmpvar_16;
  mediump vec3 viewDir_17;
  viewDir_17 = -(xlv_TEXCOORD1);
  mediump vec2 tmpvar_18;
  tmpvar_18.x = dot ((viewDir_17 - (2.0 * 
    (dot (tmpvar_1, viewDir_17) * tmpvar_1)
  )), tmpvar_5);
  tmpvar_18.y = (1.0 - clamp (dot (tmpvar_1, viewDir_17), 0.0, 1.0));
  mediump vec2 tmpvar_19;
  tmpvar_19.x = (((tmpvar_18 * tmpvar_18) * tmpvar_18) * tmpvar_18).x;
  tmpvar_19.y = (1.0 - _Glossiness);
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (unity_NHxRoughness, tmpvar_19);
  mediump vec4 tmpvar_21;
  tmpvar_21.w = 1.0;
  tmpvar_21.xyz = (((tmpvar_4 + 
    ((tmpvar_20.w * 16.0) * tmpvar_3.xyz)
  ) * tmpvar_16) * clamp (dot (tmpvar_1, tmpvar_5), 0.0, 1.0));
  mediump vec4 xlat_varoutput_22;
  xlat_varoutput_22.xyz = tmpvar_21.xyz;
  xlat_varoutput_22.w = 1.0;
  gl_FragData[0] = xlat_varoutput_22;
}



#endif"
}
SubProgram "gles " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
uniform mediump mat4 _LightMatrix0;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp vec3 lightDir_5;
  highp mat3 tangentToWorld_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec4 tmpvar_10;
  mediump vec4 tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_13;
  tmpvar_13 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_14;
  texcoord_14.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_15;
  if ((_UVSec == 0.0)) {
    tmpvar_15 = tmpvar_2;
  } else {
    tmpvar_15 = tmpvar_3;
  };
  texcoord_14.zw = ((tmpvar_15 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_16;
  n_16 = (tmpvar_12.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_17;
  norm_17 = tmpvar_1;
  highp vec4 v_18;
  v_18.x = _World2Object[0].x;
  v_18.y = _World2Object[1].x;
  v_18.z = _World2Object[2].x;
  v_18.w = _World2Object[3].x;
  highp vec4 v_19;
  v_19.x = _World2Object[0].y;
  v_19.y = _World2Object[1].y;
  v_19.z = _World2Object[2].y;
  v_19.w = _World2Object[3].y;
  highp vec4 v_20;
  v_20.x = _World2Object[0].z;
  v_20.y = _World2Object[1].z;
  v_20.z = _World2Object[2].z;
  v_20.w = _World2Object[3].z;
  highp vec3 tmpvar_21;
  tmpvar_21 = normalize(((
    (v_18.xyz * norm_17.x)
   + 
    (v_19.xyz * norm_17.y)
  ) + (v_20.xyz * norm_17.z)));
  highp vec3 dir_22;
  dir_22 = tmpvar_4.xyz;
  highp mat3 tmpvar_23;
  tmpvar_23[0] = _Object2World[0].xyz;
  tmpvar_23[1] = _Object2World[1].xyz;
  tmpvar_23[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_24;
  tmpvar_24.xyz = normalize((tmpvar_23 * dir_22));
  tmpvar_24.w = tmpvar_4.w;
  highp vec3 tmpvar_25;
  tmpvar_25 = tmpvar_24.www;
  mediump vec3 normal_26;
  normal_26 = tmpvar_21;
  mediump vec3 tangent_27;
  tangent_27 = tmpvar_24.xyz;
  mediump vec3 flip_28;
  flip_28 = tmpvar_25;
  mediump vec3 tmpvar_29;
  tmpvar_29 = (((normal_26.yzx * tangent_27.zxy) - (normal_26.zxy * tangent_27.yzx)) * flip_28);
  mediump mat3 tmpvar_30;
  tmpvar_30[0].x = tangent_27.x;
  tmpvar_30[0].y = tmpvar_29.x;
  tmpvar_30[0].z = normal_26.x;
  tmpvar_30[1].x = tangent_27.y;
  tmpvar_30[1].y = tmpvar_29.y;
  tmpvar_30[1].z = normal_26.y;
  tmpvar_30[2].x = tangent_27.z;
  tmpvar_30[2].y = tmpvar_29.z;
  tmpvar_30[2].z = normal_26.z;
  tangentToWorld_6 = tmpvar_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_6[0].x;
  v_31.y = tangentToWorld_6[1].x;
  v_31.z = tangentToWorld_6[2].x;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_6[0].y;
  v_32.y = tangentToWorld_6[1].y;
  v_32.z = tangentToWorld_6[2].y;
  tmpvar_8.xyz = v_32;
  highp vec3 v_33;
  v_33.x = tangentToWorld_6[0].z;
  v_33.y = tangentToWorld_6[1].z;
  v_33.z = tangentToWorld_6[2].z;
  tmpvar_9.xyz = v_33;
  highp vec4 tmpvar_34;
  highp vec4 cse_35;
  cse_35 = (_Object2World * _glesVertex);
  tmpvar_34 = (_LightMatrix0 * cse_35);
  tmpvar_10 = tmpvar_34;
  highp vec4 tmpvar_36;
  tmpvar_36 = (unity_World2Shadow[0] * cse_35);
  tmpvar_11 = tmpvar_36;
  highp vec3 tmpvar_37;
  tmpvar_37 = (_WorldSpaceLightPos0.xyz - (tmpvar_12.xyz * _WorldSpaceLightPos0.w));
  mediump vec3 n_38;
  n_38 = tmpvar_37;
  mediump vec3 tmpvar_39;
  tmpvar_39 = normalize(n_38);
  lightDir_5 = tmpvar_39;
  highp float tmpvar_40;
  tmpvar_40 = lightDir_5.x;
  tmpvar_7.w = tmpvar_40;
  highp float tmpvar_41;
  tmpvar_41 = lightDir_5.y;
  tmpvar_8.w = tmpvar_41;
  highp float tmpvar_42;
  tmpvar_42 = lightDir_5.z;
  tmpvar_9.w = tmpvar_42;
  gl_Position = tmpvar_13;
  xlv_TEXCOORD0 = texcoord_14;
  xlv_TEXCOORD1 = normalize(n_16);
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD2_1 = tmpvar_8;
  xlv_TEXCOORD2_2 = tmpvar_9;
  xlv_TEXCOORD5 = tmpvar_10;
  xlv_TEXCOORD6 = tmpvar_11;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_3;
  tmpvar_3.xyz = _SpecColor.xyz;
  tmpvar_3.w = _Glossiness;
  mediump vec3 tmpvar_4;
  tmpvar_4.x = xlv_TEXCOORD2.w;
  tmpvar_4.y = xlv_TEXCOORD2_1.w;
  tmpvar_4.z = xlv_TEXCOORD2_2.w;
  lowp vec4 tmpvar_5;
  mediump vec2 P_6;
  P_6 = ((xlv_TEXCOORD5.xy / xlv_TEXCOORD5.w) + 0.5);
  tmpvar_5 = texture2D (_LightTexture0, P_6);
  mediump float tmpvar_7;
  tmpvar_7 = dot (xlv_TEXCOORD5.xyz, xlv_TEXCOORD5.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_LightTextureB0, vec2(tmpvar_7));
  lowp float tmpvar_9;
  highp vec4 shadowCoord_10;
  shadowCoord_10 = xlv_TEXCOORD6;
  lowp float tmpvar_11;
  tmpvar_11 = shadow2DProjEXT (_ShadowMapTexture, shadowCoord_10);
  mediump float tmpvar_12;
  tmpvar_12 = tmpvar_11;
  mediump float tmpvar_13;
  tmpvar_13 = (_LightShadowData.x + (tmpvar_12 * (1.0 - _LightShadowData.x)));
  tmpvar_9 = tmpvar_13;
  mediump vec3 tmpvar_14;
  lowp vec3 tmpvar_15;
  tmpvar_15 = _LightColor0.xyz;
  tmpvar_14 = tmpvar_15;
  mediump vec3 tmpvar_16;
  tmpvar_16 = (tmpvar_14 * ((
    (float((xlv_TEXCOORD5.z > 0.0)) * tmpvar_5.w)
   * tmpvar_8.w) * tmpvar_9));
  tmpvar_14 = tmpvar_16;
  mediump vec3 viewDir_17;
  viewDir_17 = -(xlv_TEXCOORD1);
  mediump vec2 tmpvar_18;
  tmpvar_18.x = dot ((viewDir_17 - (2.0 * 
    (dot (tmpvar_1, viewDir_17) * tmpvar_1)
  )), tmpvar_4);
  tmpvar_18.y = (1.0 - clamp (dot (tmpvar_1, viewDir_17), 0.0, 1.0));
  mediump vec2 tmpvar_19;
  tmpvar_19.x = (((tmpvar_18 * tmpvar_18) * tmpvar_18) * tmpvar_18).x;
  tmpvar_19.y = (1.0 - _Glossiness);
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (unity_NHxRoughness, tmpvar_19);
  mediump vec4 tmpvar_21;
  tmpvar_21.w = 1.0;
  tmpvar_21.xyz = (((
    ((_Color.xyz * cse_2.xyz) * (1.0 - tmpvar_3.x))
   + 
    ((tmpvar_20.w * 16.0) * tmpvar_3.xyz)
  ) * tmpvar_16) * clamp (dot (tmpvar_1, tmpvar_4), 0.0, 1.0));
  mediump vec4 xlat_varoutput_22;
  xlat_varoutput_22.xyz = tmpvar_21.xyz;
  xlat_varoutput_22.w = 1.0;
  gl_FragData[0] = xlat_varoutput_22;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_NATIVE" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
uniform mediump mat4 _LightMatrix0;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
out mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp vec3 lightDir_5;
  highp mat3 tangentToWorld_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec4 tmpvar_10;
  mediump vec4 tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_13;
  tmpvar_13 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_14;
  texcoord_14.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_15;
  if ((_UVSec == 0.0)) {
    tmpvar_15 = tmpvar_2;
  } else {
    tmpvar_15 = tmpvar_3;
  };
  texcoord_14.zw = ((tmpvar_15 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_16;
  n_16 = (tmpvar_12.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_17;
  norm_17 = tmpvar_1;
  highp vec4 v_18;
  v_18.x = _World2Object[0].x;
  v_18.y = _World2Object[1].x;
  v_18.z = _World2Object[2].x;
  v_18.w = _World2Object[3].x;
  highp vec4 v_19;
  v_19.x = _World2Object[0].y;
  v_19.y = _World2Object[1].y;
  v_19.z = _World2Object[2].y;
  v_19.w = _World2Object[3].y;
  highp vec4 v_20;
  v_20.x = _World2Object[0].z;
  v_20.y = _World2Object[1].z;
  v_20.z = _World2Object[2].z;
  v_20.w = _World2Object[3].z;
  highp vec3 tmpvar_21;
  tmpvar_21 = normalize(((
    (v_18.xyz * norm_17.x)
   + 
    (v_19.xyz * norm_17.y)
  ) + (v_20.xyz * norm_17.z)));
  highp vec3 dir_22;
  dir_22 = tmpvar_4.xyz;
  highp mat3 tmpvar_23;
  tmpvar_23[0] = _Object2World[0].xyz;
  tmpvar_23[1] = _Object2World[1].xyz;
  tmpvar_23[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_24;
  tmpvar_24.xyz = normalize((tmpvar_23 * dir_22));
  tmpvar_24.w = tmpvar_4.w;
  highp vec3 tmpvar_25;
  tmpvar_25 = tmpvar_24.www;
  mediump vec3 normal_26;
  normal_26 = tmpvar_21;
  mediump vec3 tangent_27;
  tangent_27 = tmpvar_24.xyz;
  mediump vec3 flip_28;
  flip_28 = tmpvar_25;
  mediump vec3 tmpvar_29;
  tmpvar_29 = (((normal_26.yzx * tangent_27.zxy) - (normal_26.zxy * tangent_27.yzx)) * flip_28);
  mediump mat3 tmpvar_30;
  tmpvar_30[0].x = tangent_27.x;
  tmpvar_30[0].y = tmpvar_29.x;
  tmpvar_30[0].z = normal_26.x;
  tmpvar_30[1].x = tangent_27.y;
  tmpvar_30[1].y = tmpvar_29.y;
  tmpvar_30[1].z = normal_26.y;
  tmpvar_30[2].x = tangent_27.z;
  tmpvar_30[2].y = tmpvar_29.z;
  tmpvar_30[2].z = normal_26.z;
  tangentToWorld_6 = tmpvar_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_6[0].x;
  v_31.y = tangentToWorld_6[1].x;
  v_31.z = tangentToWorld_6[2].x;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_6[0].y;
  v_32.y = tangentToWorld_6[1].y;
  v_32.z = tangentToWorld_6[2].y;
  tmpvar_8.xyz = v_32;
  highp vec3 v_33;
  v_33.x = tangentToWorld_6[0].z;
  v_33.y = tangentToWorld_6[1].z;
  v_33.z = tangentToWorld_6[2].z;
  tmpvar_9.xyz = v_33;
  highp vec4 tmpvar_34;
  highp vec4 cse_35;
  cse_35 = (_Object2World * _glesVertex);
  tmpvar_34 = (_LightMatrix0 * cse_35);
  tmpvar_10 = tmpvar_34;
  highp vec4 tmpvar_36;
  tmpvar_36 = (unity_World2Shadow[0] * cse_35);
  tmpvar_11 = tmpvar_36;
  highp vec3 tmpvar_37;
  tmpvar_37 = (_WorldSpaceLightPos0.xyz - (tmpvar_12.xyz * _WorldSpaceLightPos0.w));
  mediump vec3 n_38;
  n_38 = tmpvar_37;
  mediump vec3 tmpvar_39;
  tmpvar_39 = normalize(n_38);
  lightDir_5 = tmpvar_39;
  highp float tmpvar_40;
  tmpvar_40 = lightDir_5.x;
  tmpvar_7.w = tmpvar_40;
  highp float tmpvar_41;
  tmpvar_41 = lightDir_5.y;
  tmpvar_8.w = tmpvar_41;
  highp float tmpvar_42;
  tmpvar_42 = lightDir_5.z;
  tmpvar_9.w = tmpvar_42;
  gl_Position = tmpvar_13;
  xlv_TEXCOORD0 = texcoord_14;
  xlv_TEXCOORD1 = normalize(n_16);
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD2_1 = tmpvar_8;
  xlv_TEXCOORD2_2 = tmpvar_9;
  xlv_TEXCOORD5 = tmpvar_10;
  xlv_TEXCOORD6 = tmpvar_11;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
in mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_3;
  tmpvar_3.xyz = _SpecColor.xyz;
  tmpvar_3.w = _Glossiness;
  mediump vec3 tmpvar_4;
  tmpvar_4.x = xlv_TEXCOORD2.w;
  tmpvar_4.y = xlv_TEXCOORD2_1.w;
  tmpvar_4.z = xlv_TEXCOORD2_2.w;
  lowp vec4 tmpvar_5;
  mediump vec2 P_6;
  P_6 = ((xlv_TEXCOORD5.xy / xlv_TEXCOORD5.w) + 0.5);
  tmpvar_5 = texture (_LightTexture0, P_6);
  mediump float tmpvar_7;
  tmpvar_7 = dot (xlv_TEXCOORD5.xyz, xlv_TEXCOORD5.xyz);
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture (_LightTextureB0, vec2(tmpvar_7));
  lowp float tmpvar_9;
  highp vec4 shadowCoord_10;
  shadowCoord_10 = xlv_TEXCOORD6;
  mediump float tmpvar_11;
  tmpvar_11 = textureProj (_ShadowMapTexture, shadowCoord_10);
  mediump float tmpvar_12;
  tmpvar_12 = (_LightShadowData.x + (tmpvar_11 * (1.0 - _LightShadowData.x)));
  tmpvar_9 = tmpvar_12;
  mediump vec3 tmpvar_13;
  lowp vec3 tmpvar_14;
  tmpvar_14 = _LightColor0.xyz;
  tmpvar_13 = tmpvar_14;
  mediump vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_13 * ((
    (float((xlv_TEXCOORD5.z > 0.0)) * tmpvar_5.w)
   * tmpvar_8.w) * tmpvar_9));
  tmpvar_13 = tmpvar_15;
  mediump vec3 viewDir_16;
  viewDir_16 = -(xlv_TEXCOORD1);
  mediump vec2 tmpvar_17;
  tmpvar_17.x = dot ((viewDir_16 - (2.0 * 
    (dot (tmpvar_1, viewDir_16) * tmpvar_1)
  )), tmpvar_4);
  tmpvar_17.y = (1.0 - clamp (dot (tmpvar_1, viewDir_16), 0.0, 1.0));
  mediump vec2 tmpvar_18;
  tmpvar_18.x = (((tmpvar_17 * tmpvar_17) * tmpvar_17) * tmpvar_17).x;
  tmpvar_18.y = (1.0 - _Glossiness);
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture (unity_NHxRoughness, tmpvar_18);
  mediump vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = (((
    ((_Color.xyz * cse_2.xyz) * (1.0 - tmpvar_3.x))
   + 
    ((tmpvar_19.w * 16.0) * tmpvar_3.xyz)
  ) * tmpvar_15) * clamp (dot (tmpvar_1, tmpvar_4), 0.0, 1.0));
  mediump vec4 xlat_varoutput_21;
  xlat_varoutput_21.xyz = tmpvar_20.xyz;
  xlat_varoutput_21.w = 1.0;
  _glesFragData[0] = xlat_varoutput_21;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_11;
  tmpvar_11 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_12;
  texcoord_12.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_13;
  if ((_UVSec == 0.0)) {
    tmpvar_13 = tmpvar_2;
  } else {
    tmpvar_13 = tmpvar_3;
  };
  texcoord_12.zw = ((tmpvar_13 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_14;
  n_14 = (tmpvar_10.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_15;
  norm_15 = tmpvar_1;
  highp vec4 v_16;
  v_16.x = _World2Object[0].x;
  v_16.y = _World2Object[1].x;
  v_16.z = _World2Object[2].x;
  v_16.w = _World2Object[3].x;
  highp vec4 v_17;
  v_17.x = _World2Object[0].y;
  v_17.y = _World2Object[1].y;
  v_17.z = _World2Object[2].y;
  v_17.w = _World2Object[3].y;
  highp vec4 v_18;
  v_18.x = _World2Object[0].z;
  v_18.y = _World2Object[1].z;
  v_18.z = _World2Object[2].z;
  v_18.w = _World2Object[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(((
    (v_16.xyz * norm_15.x)
   + 
    (v_17.xyz * norm_15.y)
  ) + (v_18.xyz * norm_15.z)));
  highp vec3 dir_20;
  dir_20 = tmpvar_4.xyz;
  highp mat3 tmpvar_21;
  tmpvar_21[0] = _Object2World[0].xyz;
  tmpvar_21[1] = _Object2World[1].xyz;
  tmpvar_21[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = normalize((tmpvar_21 * dir_20));
  tmpvar_22.w = tmpvar_4.w;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.www;
  mediump vec3 normal_24;
  normal_24 = tmpvar_19;
  mediump vec3 tangent_25;
  tangent_25 = tmpvar_22.xyz;
  mediump vec3 flip_26;
  flip_26 = tmpvar_23;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (((normal_24.yzx * tangent_25.zxy) - (normal_24.zxy * tangent_25.yzx)) * flip_26);
  mediump mat3 tmpvar_28;
  tmpvar_28[0].x = tangent_25.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = normal_24.x;
  tmpvar_28[1].x = tangent_25.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = normal_24.y;
  tmpvar_28[2].x = tangent_25.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = normal_24.z;
  tangentToWorld_5 = tmpvar_28;
  highp vec3 v_29;
  v_29.x = tangentToWorld_5[0].x;
  v_29.y = tangentToWorld_5[1].x;
  v_29.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].y;
  v_30.y = tangentToWorld_5[1].y;
  v_30.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].z;
  v_31.y = tangentToWorld_5[1].z;
  v_31.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_31;
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_9 = tmpvar_32;
  highp vec3 tmpvar_33;
  tmpvar_33 = (_WorldSpaceLightPos0.xyz - (tmpvar_10.xyz * _WorldSpaceLightPos0.w));
  highp float tmpvar_34;
  tmpvar_34 = tmpvar_33.x;
  tmpvar_6.w = tmpvar_34;
  highp float tmpvar_35;
  tmpvar_35 = tmpvar_33.y;
  tmpvar_7.w = tmpvar_35;
  highp float tmpvar_36;
  tmpvar_36 = tmpvar_33.z;
  tmpvar_8.w = tmpvar_36;
  gl_Position = tmpvar_11;
  xlv_TEXCOORD0 = texcoord_12;
  xlv_TEXCOORD1 = normalize(n_14);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
uniform sampler2D _ShadowMapTexture;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_3;
  tmpvar_3.xyz = _SpecColor.xyz;
  tmpvar_3.w = _Glossiness;
  mediump vec3 tmpvar_4;
  tmpvar_4.x = xlv_TEXCOORD2.w;
  tmpvar_4.y = xlv_TEXCOORD2_1.w;
  tmpvar_4.z = xlv_TEXCOORD2_2.w;
  lowp float tmpvar_5;
  mediump float dist_6;
  lowp float tmpvar_7;
  tmpvar_7 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD5).x;
  dist_6 = tmpvar_7;
  mediump float tmpvar_8;
  tmpvar_8 = max (float((dist_6 > 
    (xlv_TEXCOORD5.z / xlv_TEXCOORD5.w)
  )), _LightShadowData.x);
  tmpvar_5 = tmpvar_8;
  mediump float atten_9;
  atten_9 = tmpvar_5;
  mediump vec3 tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = _LightColor0.xyz;
  tmpvar_10 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_10 * atten_9);
  tmpvar_10 = tmpvar_12;
  mediump vec3 viewDir_13;
  viewDir_13 = -(xlv_TEXCOORD1);
  mediump vec2 tmpvar_14;
  tmpvar_14.x = dot ((viewDir_13 - (2.0 * 
    (dot (tmpvar_1, viewDir_13) * tmpvar_1)
  )), tmpvar_4);
  tmpvar_14.y = (1.0 - clamp (dot (tmpvar_1, viewDir_13), 0.0, 1.0));
  mediump vec2 tmpvar_15;
  tmpvar_15.x = (((tmpvar_14 * tmpvar_14) * tmpvar_14) * tmpvar_14).x;
  tmpvar_15.y = (1.0 - _Glossiness);
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (unity_NHxRoughness, tmpvar_15);
  mediump vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = (((
    ((_Color.xyz * cse_2.xyz) * (1.0 - tmpvar_3.x))
   + 
    ((tmpvar_16.w * 16.0) * tmpvar_3.xyz)
  ) * tmpvar_12) * clamp (dot (tmpvar_1, tmpvar_4), 0.0, 1.0));
  mediump vec4 xlat_varoutput_18;
  xlat_varoutput_18.xyz = tmpvar_17.xyz;
  xlat_varoutput_18.w = 1.0;
  gl_FragData[0] = xlat_varoutput_18;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
uniform mediump mat4 _LightMatrix0;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec2 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec2 tmpvar_9;
  mediump vec4 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_5 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].x;
  v_30.y = tangentToWorld_5[1].x;
  v_30.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].y;
  v_31.y = tangentToWorld_5[1].y;
  v_31.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_5[0].z;
  v_32.y = tangentToWorld_5[1].z;
  v_32.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_32;
  highp vec2 tmpvar_33;
  highp vec4 cse_34;
  cse_34 = (_Object2World * _glesVertex);
  tmpvar_33 = (_LightMatrix0 * cse_34).xy;
  tmpvar_9 = tmpvar_33;
  highp vec4 tmpvar_35;
  tmpvar_35 = (unity_World2Shadow[0] * cse_34);
  tmpvar_10 = tmpvar_35;
  highp vec3 tmpvar_36;
  tmpvar_36 = (_WorldSpaceLightPos0.xyz - (tmpvar_11.xyz * _WorldSpaceLightPos0.w));
  highp float tmpvar_37;
  tmpvar_37 = tmpvar_36.x;
  tmpvar_6.w = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = tmpvar_36.y;
  tmpvar_7.w = tmpvar_38;
  highp float tmpvar_39;
  tmpvar_39 = tmpvar_36.z;
  tmpvar_8.w = tmpvar_39;
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
}



#endif
#ifdef FRAGMENT

uniform mediump vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _LightTexture0;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec2 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_3;
  tmpvar_3.xyz = _SpecColor.xyz;
  tmpvar_3.w = _Glossiness;
  mediump vec3 tmpvar_4;
  tmpvar_4.x = xlv_TEXCOORD2.w;
  tmpvar_4.y = xlv_TEXCOORD2_1.w;
  tmpvar_4.z = xlv_TEXCOORD2_2.w;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_LightTexture0, xlv_TEXCOORD5);
  lowp float tmpvar_6;
  mediump float dist_7;
  lowp float tmpvar_8;
  tmpvar_8 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD6).x;
  dist_7 = tmpvar_8;
  mediump float tmpvar_9;
  tmpvar_9 = max (float((dist_7 > 
    (xlv_TEXCOORD6.z / xlv_TEXCOORD6.w)
  )), _LightShadowData.x);
  tmpvar_6 = tmpvar_9;
  mediump float atten_10;
  atten_10 = (tmpvar_5.w * tmpvar_6);
  mediump vec3 tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = _LightColor0.xyz;
  tmpvar_11 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_11 * atten_10);
  tmpvar_11 = tmpvar_13;
  mediump vec3 viewDir_14;
  viewDir_14 = -(xlv_TEXCOORD1);
  mediump vec2 tmpvar_15;
  tmpvar_15.x = dot ((viewDir_14 - (2.0 * 
    (dot (tmpvar_1, viewDir_14) * tmpvar_1)
  )), tmpvar_4);
  tmpvar_15.y = (1.0 - clamp (dot (tmpvar_1, viewDir_14), 0.0, 1.0));
  mediump vec2 tmpvar_16;
  tmpvar_16.x = (((tmpvar_15 * tmpvar_15) * tmpvar_15) * tmpvar_15).x;
  tmpvar_16.y = (1.0 - _Glossiness);
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (unity_NHxRoughness, tmpvar_16);
  mediump vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = (((
    ((_Color.xyz * cse_2.xyz) * (1.0 - tmpvar_3.x))
   + 
    ((tmpvar_17.w * 16.0) * tmpvar_3.xyz)
  ) * tmpvar_13) * clamp (dot (tmpvar_1, tmpvar_4), 0.0, 1.0));
  mediump vec4 xlat_varoutput_19;
  xlat_varoutput_19.xyz = tmpvar_18.xyz;
  xlat_varoutput_19.w = 1.0;
  gl_FragData[0] = xlat_varoutput_19;
}



#endif"
}
SubProgram "gles " {
Keywords { "POINT" "SHADOWS_CUBE" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightPositionRange;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
uniform mediump mat4 _LightMatrix0;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec3 xlv_TEXCOORD5;
varying mediump vec3 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp vec3 lightDir_5;
  highp mat3 tangentToWorld_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec3 tmpvar_10;
  mediump vec3 tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_13;
  tmpvar_13 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_14;
  texcoord_14.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_15;
  if ((_UVSec == 0.0)) {
    tmpvar_15 = tmpvar_2;
  } else {
    tmpvar_15 = tmpvar_3;
  };
  texcoord_14.zw = ((tmpvar_15 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_16;
  n_16 = (tmpvar_12.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_17;
  norm_17 = tmpvar_1;
  highp vec4 v_18;
  v_18.x = _World2Object[0].x;
  v_18.y = _World2Object[1].x;
  v_18.z = _World2Object[2].x;
  v_18.w = _World2Object[3].x;
  highp vec4 v_19;
  v_19.x = _World2Object[0].y;
  v_19.y = _World2Object[1].y;
  v_19.z = _World2Object[2].y;
  v_19.w = _World2Object[3].y;
  highp vec4 v_20;
  v_20.x = _World2Object[0].z;
  v_20.y = _World2Object[1].z;
  v_20.z = _World2Object[2].z;
  v_20.w = _World2Object[3].z;
  highp vec3 tmpvar_21;
  tmpvar_21 = normalize(((
    (v_18.xyz * norm_17.x)
   + 
    (v_19.xyz * norm_17.y)
  ) + (v_20.xyz * norm_17.z)));
  highp vec3 dir_22;
  dir_22 = tmpvar_4.xyz;
  highp mat3 tmpvar_23;
  tmpvar_23[0] = _Object2World[0].xyz;
  tmpvar_23[1] = _Object2World[1].xyz;
  tmpvar_23[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_24;
  tmpvar_24.xyz = normalize((tmpvar_23 * dir_22));
  tmpvar_24.w = tmpvar_4.w;
  highp vec3 tmpvar_25;
  tmpvar_25 = tmpvar_24.www;
  mediump vec3 normal_26;
  normal_26 = tmpvar_21;
  mediump vec3 tangent_27;
  tangent_27 = tmpvar_24.xyz;
  mediump vec3 flip_28;
  flip_28 = tmpvar_25;
  mediump vec3 tmpvar_29;
  tmpvar_29 = (((normal_26.yzx * tangent_27.zxy) - (normal_26.zxy * tangent_27.yzx)) * flip_28);
  mediump mat3 tmpvar_30;
  tmpvar_30[0].x = tangent_27.x;
  tmpvar_30[0].y = tmpvar_29.x;
  tmpvar_30[0].z = normal_26.x;
  tmpvar_30[1].x = tangent_27.y;
  tmpvar_30[1].y = tmpvar_29.y;
  tmpvar_30[1].z = normal_26.y;
  tmpvar_30[2].x = tangent_27.z;
  tmpvar_30[2].y = tmpvar_29.z;
  tmpvar_30[2].z = normal_26.z;
  tangentToWorld_6 = tmpvar_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_6[0].x;
  v_31.y = tangentToWorld_6[1].x;
  v_31.z = tangentToWorld_6[2].x;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_6[0].y;
  v_32.y = tangentToWorld_6[1].y;
  v_32.z = tangentToWorld_6[2].y;
  tmpvar_8.xyz = v_32;
  highp vec3 v_33;
  v_33.x = tangentToWorld_6[0].z;
  v_33.y = tangentToWorld_6[1].z;
  v_33.z = tangentToWorld_6[2].z;
  tmpvar_9.xyz = v_33;
  highp vec3 tmpvar_34;
  highp vec4 cse_35;
  cse_35 = (_Object2World * _glesVertex);
  tmpvar_34 = (_LightMatrix0 * cse_35).xyz;
  tmpvar_10 = tmpvar_34;
  highp vec3 tmpvar_36;
  tmpvar_36 = (cse_35.xyz - _LightPositionRange.xyz);
  tmpvar_11 = tmpvar_36;
  highp vec3 tmpvar_37;
  tmpvar_37 = (_WorldSpaceLightPos0.xyz - (tmpvar_12.xyz * _WorldSpaceLightPos0.w));
  mediump vec3 n_38;
  n_38 = tmpvar_37;
  mediump vec3 tmpvar_39;
  tmpvar_39 = normalize(n_38);
  lightDir_5 = tmpvar_39;
  highp float tmpvar_40;
  tmpvar_40 = lightDir_5.x;
  tmpvar_7.w = tmpvar_40;
  highp float tmpvar_41;
  tmpvar_41 = lightDir_5.y;
  tmpvar_8.w = tmpvar_41;
  highp float tmpvar_42;
  tmpvar_42 = lightDir_5.z;
  tmpvar_9.w = tmpvar_42;
  gl_Position = tmpvar_13;
  xlv_TEXCOORD0 = texcoord_14;
  xlv_TEXCOORD1 = normalize(n_16);
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD2_1 = tmpvar_8;
  xlv_TEXCOORD2_2 = tmpvar_9;
  xlv_TEXCOORD5 = tmpvar_10;
  xlv_TEXCOORD6 = tmpvar_11;
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _LightPositionRange;
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
uniform highp samplerCube _ShadowMapTexture;
uniform sampler2D _LightTexture0;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec3 xlv_TEXCOORD5;
varying mediump vec3 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_3;
  tmpvar_3.xyz = _SpecColor.xyz;
  tmpvar_3.w = _Glossiness;
  mediump vec3 tmpvar_4;
  tmpvar_4 = ((_Color.xyz * cse_2.xyz) * (1.0 - tmpvar_3.x));
  mediump vec3 tmpvar_5;
  tmpvar_5.x = xlv_TEXCOORD2.w;
  tmpvar_5.y = xlv_TEXCOORD2_1.w;
  tmpvar_5.z = xlv_TEXCOORD2_2.w;
  mediump float tmpvar_6;
  tmpvar_6 = dot (xlv_TEXCOORD5, xlv_TEXCOORD5);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_LightTexture0, vec2(tmpvar_6));
  highp vec3 vec_8;
  vec_8 = xlv_TEXCOORD6;
  highp float tmpvar_9;
  tmpvar_9 = ((sqrt(
    dot (vec_8, vec_8)
  ) * _LightPositionRange.w) * 0.97);
  highp vec4 tmpvar_10;
  tmpvar_10 = textureCube (_ShadowMapTexture, vec_8);
  highp float tmpvar_11;
  tmpvar_11 = dot (tmpvar_10, vec4(1.0, 0.003921569, 1.53787e-05, 6.030863e-08));
  mediump float tmpvar_12;
  if ((tmpvar_11 < tmpvar_9)) {
    tmpvar_12 = _LightShadowData.x;
  } else {
    tmpvar_12 = 1.0;
  };
  mediump vec3 tmpvar_13;
  lowp vec3 tmpvar_14;
  tmpvar_14 = _LightColor0.xyz;
  tmpvar_13 = tmpvar_14;
  mediump vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_13 * (tmpvar_7.w * tmpvar_12));
  tmpvar_13 = tmpvar_15;
  mediump vec3 viewDir_16;
  viewDir_16 = -(xlv_TEXCOORD1);
  mediump vec2 tmpvar_17;
  tmpvar_17.x = dot ((viewDir_16 - (2.0 * 
    (dot (tmpvar_1, viewDir_16) * tmpvar_1)
  )), tmpvar_5);
  tmpvar_17.y = (1.0 - clamp (dot (tmpvar_1, viewDir_16), 0.0, 1.0));
  mediump vec2 tmpvar_18;
  tmpvar_18.x = (((tmpvar_17 * tmpvar_17) * tmpvar_17) * tmpvar_17).x;
  tmpvar_18.y = (1.0 - _Glossiness);
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (unity_NHxRoughness, tmpvar_18);
  mediump vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = (((tmpvar_4 + 
    ((tmpvar_19.w * 16.0) * tmpvar_3.xyz)
  ) * tmpvar_15) * clamp (dot (tmpvar_1, tmpvar_5), 0.0, 1.0));
  mediump vec4 xlat_varoutput_21;
  xlat_varoutput_21.xyz = tmpvar_20.xyz;
  xlat_varoutput_21.w = 1.0;
  gl_FragData[0] = xlat_varoutput_21;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_CUBE" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightPositionRange;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
uniform mediump mat4 _LightMatrix0;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec3 xlv_TEXCOORD5;
out mediump vec3 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp vec3 lightDir_5;
  highp mat3 tangentToWorld_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec3 tmpvar_10;
  mediump vec3 tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_13;
  tmpvar_13 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_14;
  texcoord_14.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_15;
  if ((_UVSec == 0.0)) {
    tmpvar_15 = tmpvar_2;
  } else {
    tmpvar_15 = tmpvar_3;
  };
  texcoord_14.zw = ((tmpvar_15 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_16;
  n_16 = (tmpvar_12.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_17;
  norm_17 = tmpvar_1;
  highp vec4 v_18;
  v_18.x = _World2Object[0].x;
  v_18.y = _World2Object[1].x;
  v_18.z = _World2Object[2].x;
  v_18.w = _World2Object[3].x;
  highp vec4 v_19;
  v_19.x = _World2Object[0].y;
  v_19.y = _World2Object[1].y;
  v_19.z = _World2Object[2].y;
  v_19.w = _World2Object[3].y;
  highp vec4 v_20;
  v_20.x = _World2Object[0].z;
  v_20.y = _World2Object[1].z;
  v_20.z = _World2Object[2].z;
  v_20.w = _World2Object[3].z;
  highp vec3 tmpvar_21;
  tmpvar_21 = normalize(((
    (v_18.xyz * norm_17.x)
   + 
    (v_19.xyz * norm_17.y)
  ) + (v_20.xyz * norm_17.z)));
  highp vec3 dir_22;
  dir_22 = tmpvar_4.xyz;
  highp mat3 tmpvar_23;
  tmpvar_23[0] = _Object2World[0].xyz;
  tmpvar_23[1] = _Object2World[1].xyz;
  tmpvar_23[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_24;
  tmpvar_24.xyz = normalize((tmpvar_23 * dir_22));
  tmpvar_24.w = tmpvar_4.w;
  highp vec3 tmpvar_25;
  tmpvar_25 = tmpvar_24.www;
  mediump vec3 normal_26;
  normal_26 = tmpvar_21;
  mediump vec3 tangent_27;
  tangent_27 = tmpvar_24.xyz;
  mediump vec3 flip_28;
  flip_28 = tmpvar_25;
  mediump vec3 tmpvar_29;
  tmpvar_29 = (((normal_26.yzx * tangent_27.zxy) - (normal_26.zxy * tangent_27.yzx)) * flip_28);
  mediump mat3 tmpvar_30;
  tmpvar_30[0].x = tangent_27.x;
  tmpvar_30[0].y = tmpvar_29.x;
  tmpvar_30[0].z = normal_26.x;
  tmpvar_30[1].x = tangent_27.y;
  tmpvar_30[1].y = tmpvar_29.y;
  tmpvar_30[1].z = normal_26.y;
  tmpvar_30[2].x = tangent_27.z;
  tmpvar_30[2].y = tmpvar_29.z;
  tmpvar_30[2].z = normal_26.z;
  tangentToWorld_6 = tmpvar_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_6[0].x;
  v_31.y = tangentToWorld_6[1].x;
  v_31.z = tangentToWorld_6[2].x;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_6[0].y;
  v_32.y = tangentToWorld_6[1].y;
  v_32.z = tangentToWorld_6[2].y;
  tmpvar_8.xyz = v_32;
  highp vec3 v_33;
  v_33.x = tangentToWorld_6[0].z;
  v_33.y = tangentToWorld_6[1].z;
  v_33.z = tangentToWorld_6[2].z;
  tmpvar_9.xyz = v_33;
  highp vec3 tmpvar_34;
  highp vec4 cse_35;
  cse_35 = (_Object2World * _glesVertex);
  tmpvar_34 = (_LightMatrix0 * cse_35).xyz;
  tmpvar_10 = tmpvar_34;
  highp vec3 tmpvar_36;
  tmpvar_36 = (cse_35.xyz - _LightPositionRange.xyz);
  tmpvar_11 = tmpvar_36;
  highp vec3 tmpvar_37;
  tmpvar_37 = (_WorldSpaceLightPos0.xyz - (tmpvar_12.xyz * _WorldSpaceLightPos0.w));
  mediump vec3 n_38;
  n_38 = tmpvar_37;
  mediump vec3 tmpvar_39;
  tmpvar_39 = normalize(n_38);
  lightDir_5 = tmpvar_39;
  highp float tmpvar_40;
  tmpvar_40 = lightDir_5.x;
  tmpvar_7.w = tmpvar_40;
  highp float tmpvar_41;
  tmpvar_41 = lightDir_5.y;
  tmpvar_8.w = tmpvar_41;
  highp float tmpvar_42;
  tmpvar_42 = lightDir_5.z;
  tmpvar_9.w = tmpvar_42;
  gl_Position = tmpvar_13;
  xlv_TEXCOORD0 = texcoord_14;
  xlv_TEXCOORD1 = normalize(n_16);
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD2_1 = tmpvar_8;
  xlv_TEXCOORD2_2 = tmpvar_9;
  xlv_TEXCOORD5 = tmpvar_10;
  xlv_TEXCOORD6 = tmpvar_11;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform highp vec4 _LightPositionRange;
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
uniform highp samplerCube _ShadowMapTexture;
uniform sampler2D _LightTexture0;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec3 xlv_TEXCOORD5;
in mediump vec3 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_3;
  tmpvar_3.xyz = _SpecColor.xyz;
  tmpvar_3.w = _Glossiness;
  mediump vec3 tmpvar_4;
  tmpvar_4 = ((_Color.xyz * cse_2.xyz) * (1.0 - tmpvar_3.x));
  mediump vec3 tmpvar_5;
  tmpvar_5.x = xlv_TEXCOORD2.w;
  tmpvar_5.y = xlv_TEXCOORD2_1.w;
  tmpvar_5.z = xlv_TEXCOORD2_2.w;
  mediump float tmpvar_6;
  tmpvar_6 = dot (xlv_TEXCOORD5, xlv_TEXCOORD5);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture (_LightTexture0, vec2(tmpvar_6));
  highp vec3 vec_8;
  vec_8 = xlv_TEXCOORD6;
  highp float tmpvar_9;
  tmpvar_9 = ((sqrt(
    dot (vec_8, vec_8)
  ) * _LightPositionRange.w) * 0.97);
  highp vec4 tmpvar_10;
  tmpvar_10 = texture (_ShadowMapTexture, vec_8);
  mediump float tmpvar_11;
  if ((tmpvar_10.x < tmpvar_9)) {
    tmpvar_11 = _LightShadowData.x;
  } else {
    tmpvar_11 = 1.0;
  };
  mediump vec3 tmpvar_12;
  lowp vec3 tmpvar_13;
  tmpvar_13 = _LightColor0.xyz;
  tmpvar_12 = tmpvar_13;
  mediump vec3 tmpvar_14;
  tmpvar_14 = (tmpvar_12 * (tmpvar_7.w * tmpvar_11));
  tmpvar_12 = tmpvar_14;
  mediump vec3 viewDir_15;
  viewDir_15 = -(xlv_TEXCOORD1);
  mediump vec2 tmpvar_16;
  tmpvar_16.x = dot ((viewDir_15 - (2.0 * 
    (dot (tmpvar_1, viewDir_15) * tmpvar_1)
  )), tmpvar_5);
  tmpvar_16.y = (1.0 - clamp (dot (tmpvar_1, viewDir_15), 0.0, 1.0));
  mediump vec2 tmpvar_17;
  tmpvar_17.x = (((tmpvar_16 * tmpvar_16) * tmpvar_16) * tmpvar_16).x;
  tmpvar_17.y = (1.0 - _Glossiness);
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture (unity_NHxRoughness, tmpvar_17);
  mediump vec4 tmpvar_19;
  tmpvar_19.w = 1.0;
  tmpvar_19.xyz = (((tmpvar_4 + 
    ((tmpvar_18.w * 16.0) * tmpvar_3.xyz)
  ) * tmpvar_14) * clamp (dot (tmpvar_1, tmpvar_5), 0.0, 1.0));
  mediump vec4 xlat_varoutput_20;
  xlat_varoutput_20.xyz = tmpvar_19.xyz;
  xlat_varoutput_20.w = 1.0;
  _glesFragData[0] = xlat_varoutput_20;
}



#endif"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightPositionRange;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
uniform mediump mat4 _LightMatrix0;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec3 xlv_TEXCOORD5;
varying mediump vec3 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp vec3 lightDir_5;
  highp mat3 tangentToWorld_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec3 tmpvar_10;
  mediump vec3 tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_13;
  tmpvar_13 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_14;
  texcoord_14.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_15;
  if ((_UVSec == 0.0)) {
    tmpvar_15 = tmpvar_2;
  } else {
    tmpvar_15 = tmpvar_3;
  };
  texcoord_14.zw = ((tmpvar_15 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_16;
  n_16 = (tmpvar_12.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_17;
  norm_17 = tmpvar_1;
  highp vec4 v_18;
  v_18.x = _World2Object[0].x;
  v_18.y = _World2Object[1].x;
  v_18.z = _World2Object[2].x;
  v_18.w = _World2Object[3].x;
  highp vec4 v_19;
  v_19.x = _World2Object[0].y;
  v_19.y = _World2Object[1].y;
  v_19.z = _World2Object[2].y;
  v_19.w = _World2Object[3].y;
  highp vec4 v_20;
  v_20.x = _World2Object[0].z;
  v_20.y = _World2Object[1].z;
  v_20.z = _World2Object[2].z;
  v_20.w = _World2Object[3].z;
  highp vec3 tmpvar_21;
  tmpvar_21 = normalize(((
    (v_18.xyz * norm_17.x)
   + 
    (v_19.xyz * norm_17.y)
  ) + (v_20.xyz * norm_17.z)));
  highp vec3 dir_22;
  dir_22 = tmpvar_4.xyz;
  highp mat3 tmpvar_23;
  tmpvar_23[0] = _Object2World[0].xyz;
  tmpvar_23[1] = _Object2World[1].xyz;
  tmpvar_23[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_24;
  tmpvar_24.xyz = normalize((tmpvar_23 * dir_22));
  tmpvar_24.w = tmpvar_4.w;
  highp vec3 tmpvar_25;
  tmpvar_25 = tmpvar_24.www;
  mediump vec3 normal_26;
  normal_26 = tmpvar_21;
  mediump vec3 tangent_27;
  tangent_27 = tmpvar_24.xyz;
  mediump vec3 flip_28;
  flip_28 = tmpvar_25;
  mediump vec3 tmpvar_29;
  tmpvar_29 = (((normal_26.yzx * tangent_27.zxy) - (normal_26.zxy * tangent_27.yzx)) * flip_28);
  mediump mat3 tmpvar_30;
  tmpvar_30[0].x = tangent_27.x;
  tmpvar_30[0].y = tmpvar_29.x;
  tmpvar_30[0].z = normal_26.x;
  tmpvar_30[1].x = tangent_27.y;
  tmpvar_30[1].y = tmpvar_29.y;
  tmpvar_30[1].z = normal_26.y;
  tmpvar_30[2].x = tangent_27.z;
  tmpvar_30[2].y = tmpvar_29.z;
  tmpvar_30[2].z = normal_26.z;
  tangentToWorld_6 = tmpvar_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_6[0].x;
  v_31.y = tangentToWorld_6[1].x;
  v_31.z = tangentToWorld_6[2].x;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_6[0].y;
  v_32.y = tangentToWorld_6[1].y;
  v_32.z = tangentToWorld_6[2].y;
  tmpvar_8.xyz = v_32;
  highp vec3 v_33;
  v_33.x = tangentToWorld_6[0].z;
  v_33.y = tangentToWorld_6[1].z;
  v_33.z = tangentToWorld_6[2].z;
  tmpvar_9.xyz = v_33;
  highp vec3 tmpvar_34;
  highp vec4 cse_35;
  cse_35 = (_Object2World * _glesVertex);
  tmpvar_34 = (_LightMatrix0 * cse_35).xyz;
  tmpvar_10 = tmpvar_34;
  highp vec3 tmpvar_36;
  tmpvar_36 = (cse_35.xyz - _LightPositionRange.xyz);
  tmpvar_11 = tmpvar_36;
  highp vec3 tmpvar_37;
  tmpvar_37 = (_WorldSpaceLightPos0.xyz - (tmpvar_12.xyz * _WorldSpaceLightPos0.w));
  mediump vec3 n_38;
  n_38 = tmpvar_37;
  mediump vec3 tmpvar_39;
  tmpvar_39 = normalize(n_38);
  lightDir_5 = tmpvar_39;
  highp float tmpvar_40;
  tmpvar_40 = lightDir_5.x;
  tmpvar_7.w = tmpvar_40;
  highp float tmpvar_41;
  tmpvar_41 = lightDir_5.y;
  tmpvar_8.w = tmpvar_41;
  highp float tmpvar_42;
  tmpvar_42 = lightDir_5.z;
  tmpvar_9.w = tmpvar_42;
  gl_Position = tmpvar_13;
  xlv_TEXCOORD0 = texcoord_14;
  xlv_TEXCOORD1 = normalize(n_16);
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD2_1 = tmpvar_8;
  xlv_TEXCOORD2_2 = tmpvar_9;
  xlv_TEXCOORD5 = tmpvar_10;
  xlv_TEXCOORD6 = tmpvar_11;
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _LightPositionRange;
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
uniform highp samplerCube _ShadowMapTexture;
uniform lowp samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec3 xlv_TEXCOORD5;
varying mediump vec3 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_3;
  tmpvar_3.xyz = _SpecColor.xyz;
  tmpvar_3.w = _Glossiness;
  mediump vec3 tmpvar_4;
  tmpvar_4 = ((_Color.xyz * cse_2.xyz) * (1.0 - tmpvar_3.x));
  mediump vec3 tmpvar_5;
  tmpvar_5.x = xlv_TEXCOORD2.w;
  tmpvar_5.y = xlv_TEXCOORD2_1.w;
  tmpvar_5.z = xlv_TEXCOORD2_2.w;
  mediump float tmpvar_6;
  tmpvar_6 = dot (xlv_TEXCOORD5, xlv_TEXCOORD5);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_LightTextureB0, vec2(tmpvar_6));
  lowp vec4 tmpvar_8;
  tmpvar_8 = textureCube (_LightTexture0, xlv_TEXCOORD5);
  highp vec3 vec_9;
  vec_9 = xlv_TEXCOORD6;
  highp float tmpvar_10;
  tmpvar_10 = ((sqrt(
    dot (vec_9, vec_9)
  ) * _LightPositionRange.w) * 0.97);
  highp vec4 tmpvar_11;
  tmpvar_11 = textureCube (_ShadowMapTexture, vec_9);
  highp float tmpvar_12;
  tmpvar_12 = dot (tmpvar_11, vec4(1.0, 0.003921569, 1.53787e-05, 6.030863e-08));
  mediump float tmpvar_13;
  if ((tmpvar_12 < tmpvar_10)) {
    tmpvar_13 = _LightShadowData.x;
  } else {
    tmpvar_13 = 1.0;
  };
  mediump vec3 tmpvar_14;
  lowp vec3 tmpvar_15;
  tmpvar_15 = _LightColor0.xyz;
  tmpvar_14 = tmpvar_15;
  mediump vec3 tmpvar_16;
  tmpvar_16 = (tmpvar_14 * ((tmpvar_7.w * tmpvar_8.w) * tmpvar_13));
  tmpvar_14 = tmpvar_16;
  mediump vec3 viewDir_17;
  viewDir_17 = -(xlv_TEXCOORD1);
  mediump vec2 tmpvar_18;
  tmpvar_18.x = dot ((viewDir_17 - (2.0 * 
    (dot (tmpvar_1, viewDir_17) * tmpvar_1)
  )), tmpvar_5);
  tmpvar_18.y = (1.0 - clamp (dot (tmpvar_1, viewDir_17), 0.0, 1.0));
  mediump vec2 tmpvar_19;
  tmpvar_19.x = (((tmpvar_18 * tmpvar_18) * tmpvar_18) * tmpvar_18).x;
  tmpvar_19.y = (1.0 - _Glossiness);
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (unity_NHxRoughness, tmpvar_19);
  mediump vec4 tmpvar_21;
  tmpvar_21.w = 1.0;
  tmpvar_21.xyz = (((tmpvar_4 + 
    ((tmpvar_20.w * 16.0) * tmpvar_3.xyz)
  ) * tmpvar_16) * clamp (dot (tmpvar_1, tmpvar_5), 0.0, 1.0));
  mediump vec4 xlat_varoutput_22;
  xlat_varoutput_22.xyz = tmpvar_21.xyz;
  xlat_varoutput_22.w = 1.0;
  gl_FragData[0] = xlat_varoutput_22;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp vec4 _LightPositionRange;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
uniform mediump mat4 _LightMatrix0;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec3 xlv_TEXCOORD5;
out mediump vec3 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp vec3 lightDir_5;
  highp mat3 tangentToWorld_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec3 tmpvar_10;
  mediump vec3 tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_13;
  tmpvar_13 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_14;
  texcoord_14.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_15;
  if ((_UVSec == 0.0)) {
    tmpvar_15 = tmpvar_2;
  } else {
    tmpvar_15 = tmpvar_3;
  };
  texcoord_14.zw = ((tmpvar_15 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_16;
  n_16 = (tmpvar_12.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_17;
  norm_17 = tmpvar_1;
  highp vec4 v_18;
  v_18.x = _World2Object[0].x;
  v_18.y = _World2Object[1].x;
  v_18.z = _World2Object[2].x;
  v_18.w = _World2Object[3].x;
  highp vec4 v_19;
  v_19.x = _World2Object[0].y;
  v_19.y = _World2Object[1].y;
  v_19.z = _World2Object[2].y;
  v_19.w = _World2Object[3].y;
  highp vec4 v_20;
  v_20.x = _World2Object[0].z;
  v_20.y = _World2Object[1].z;
  v_20.z = _World2Object[2].z;
  v_20.w = _World2Object[3].z;
  highp vec3 tmpvar_21;
  tmpvar_21 = normalize(((
    (v_18.xyz * norm_17.x)
   + 
    (v_19.xyz * norm_17.y)
  ) + (v_20.xyz * norm_17.z)));
  highp vec3 dir_22;
  dir_22 = tmpvar_4.xyz;
  highp mat3 tmpvar_23;
  tmpvar_23[0] = _Object2World[0].xyz;
  tmpvar_23[1] = _Object2World[1].xyz;
  tmpvar_23[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_24;
  tmpvar_24.xyz = normalize((tmpvar_23 * dir_22));
  tmpvar_24.w = tmpvar_4.w;
  highp vec3 tmpvar_25;
  tmpvar_25 = tmpvar_24.www;
  mediump vec3 normal_26;
  normal_26 = tmpvar_21;
  mediump vec3 tangent_27;
  tangent_27 = tmpvar_24.xyz;
  mediump vec3 flip_28;
  flip_28 = tmpvar_25;
  mediump vec3 tmpvar_29;
  tmpvar_29 = (((normal_26.yzx * tangent_27.zxy) - (normal_26.zxy * tangent_27.yzx)) * flip_28);
  mediump mat3 tmpvar_30;
  tmpvar_30[0].x = tangent_27.x;
  tmpvar_30[0].y = tmpvar_29.x;
  tmpvar_30[0].z = normal_26.x;
  tmpvar_30[1].x = tangent_27.y;
  tmpvar_30[1].y = tmpvar_29.y;
  tmpvar_30[1].z = normal_26.y;
  tmpvar_30[2].x = tangent_27.z;
  tmpvar_30[2].y = tmpvar_29.z;
  tmpvar_30[2].z = normal_26.z;
  tangentToWorld_6 = tmpvar_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_6[0].x;
  v_31.y = tangentToWorld_6[1].x;
  v_31.z = tangentToWorld_6[2].x;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_6[0].y;
  v_32.y = tangentToWorld_6[1].y;
  v_32.z = tangentToWorld_6[2].y;
  tmpvar_8.xyz = v_32;
  highp vec3 v_33;
  v_33.x = tangentToWorld_6[0].z;
  v_33.y = tangentToWorld_6[1].z;
  v_33.z = tangentToWorld_6[2].z;
  tmpvar_9.xyz = v_33;
  highp vec3 tmpvar_34;
  highp vec4 cse_35;
  cse_35 = (_Object2World * _glesVertex);
  tmpvar_34 = (_LightMatrix0 * cse_35).xyz;
  tmpvar_10 = tmpvar_34;
  highp vec3 tmpvar_36;
  tmpvar_36 = (cse_35.xyz - _LightPositionRange.xyz);
  tmpvar_11 = tmpvar_36;
  highp vec3 tmpvar_37;
  tmpvar_37 = (_WorldSpaceLightPos0.xyz - (tmpvar_12.xyz * _WorldSpaceLightPos0.w));
  mediump vec3 n_38;
  n_38 = tmpvar_37;
  mediump vec3 tmpvar_39;
  tmpvar_39 = normalize(n_38);
  lightDir_5 = tmpvar_39;
  highp float tmpvar_40;
  tmpvar_40 = lightDir_5.x;
  tmpvar_7.w = tmpvar_40;
  highp float tmpvar_41;
  tmpvar_41 = lightDir_5.y;
  tmpvar_8.w = tmpvar_41;
  highp float tmpvar_42;
  tmpvar_42 = lightDir_5.z;
  tmpvar_9.w = tmpvar_42;
  gl_Position = tmpvar_13;
  xlv_TEXCOORD0 = texcoord_14;
  xlv_TEXCOORD1 = normalize(n_16);
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD2_1 = tmpvar_8;
  xlv_TEXCOORD2_2 = tmpvar_9;
  xlv_TEXCOORD5 = tmpvar_10;
  xlv_TEXCOORD6 = tmpvar_11;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform highp vec4 _LightPositionRange;
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
uniform highp samplerCube _ShadowMapTexture;
uniform lowp samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec3 xlv_TEXCOORD5;
in mediump vec3 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_3;
  tmpvar_3.xyz = _SpecColor.xyz;
  tmpvar_3.w = _Glossiness;
  mediump vec3 tmpvar_4;
  tmpvar_4 = ((_Color.xyz * cse_2.xyz) * (1.0 - tmpvar_3.x));
  mediump vec3 tmpvar_5;
  tmpvar_5.x = xlv_TEXCOORD2.w;
  tmpvar_5.y = xlv_TEXCOORD2_1.w;
  tmpvar_5.z = xlv_TEXCOORD2_2.w;
  mediump float tmpvar_6;
  tmpvar_6 = dot (xlv_TEXCOORD5, xlv_TEXCOORD5);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture (_LightTextureB0, vec2(tmpvar_6));
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture (_LightTexture0, xlv_TEXCOORD5);
  highp vec3 vec_9;
  vec_9 = xlv_TEXCOORD6;
  highp float tmpvar_10;
  tmpvar_10 = ((sqrt(
    dot (vec_9, vec_9)
  ) * _LightPositionRange.w) * 0.97);
  highp vec4 tmpvar_11;
  tmpvar_11 = texture (_ShadowMapTexture, vec_9);
  mediump float tmpvar_12;
  if ((tmpvar_11.x < tmpvar_10)) {
    tmpvar_12 = _LightShadowData.x;
  } else {
    tmpvar_12 = 1.0;
  };
  mediump vec3 tmpvar_13;
  lowp vec3 tmpvar_14;
  tmpvar_14 = _LightColor0.xyz;
  tmpvar_13 = tmpvar_14;
  mediump vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_13 * ((tmpvar_7.w * tmpvar_8.w) * tmpvar_12));
  tmpvar_13 = tmpvar_15;
  mediump vec3 viewDir_16;
  viewDir_16 = -(xlv_TEXCOORD1);
  mediump vec2 tmpvar_17;
  tmpvar_17.x = dot ((viewDir_16 - (2.0 * 
    (dot (tmpvar_1, viewDir_16) * tmpvar_1)
  )), tmpvar_5);
  tmpvar_17.y = (1.0 - clamp (dot (tmpvar_1, viewDir_16), 0.0, 1.0));
  mediump vec2 tmpvar_18;
  tmpvar_18.x = (((tmpvar_17 * tmpvar_17) * tmpvar_17) * tmpvar_17).x;
  tmpvar_18.y = (1.0 - _Glossiness);
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture (unity_NHxRoughness, tmpvar_18);
  mediump vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = (((tmpvar_4 + 
    ((tmpvar_19.w * 16.0) * tmpvar_3.xyz)
  ) * tmpvar_15) * clamp (dot (tmpvar_1, tmpvar_5), 0.0, 1.0));
  mediump vec4 xlat_varoutput_21;
  xlat_varoutput_21.xyz = tmpvar_20.xyz;
  xlat_varoutput_21.w = 1.0;
  _glesFragData[0] = xlat_varoutput_21;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_11;
  tmpvar_11 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_12;
  texcoord_12.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_13;
  if ((_UVSec == 0.0)) {
    tmpvar_13 = tmpvar_2;
  } else {
    tmpvar_13 = tmpvar_3;
  };
  texcoord_12.zw = ((tmpvar_13 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_14;
  n_14 = (tmpvar_10.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_15;
  norm_15 = tmpvar_1;
  highp vec4 v_16;
  v_16.x = _World2Object[0].x;
  v_16.y = _World2Object[1].x;
  v_16.z = _World2Object[2].x;
  v_16.w = _World2Object[3].x;
  highp vec4 v_17;
  v_17.x = _World2Object[0].y;
  v_17.y = _World2Object[1].y;
  v_17.z = _World2Object[2].y;
  v_17.w = _World2Object[3].y;
  highp vec4 v_18;
  v_18.x = _World2Object[0].z;
  v_18.y = _World2Object[1].z;
  v_18.z = _World2Object[2].z;
  v_18.w = _World2Object[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(((
    (v_16.xyz * norm_15.x)
   + 
    (v_17.xyz * norm_15.y)
  ) + (v_18.xyz * norm_15.z)));
  highp vec3 dir_20;
  dir_20 = tmpvar_4.xyz;
  highp mat3 tmpvar_21;
  tmpvar_21[0] = _Object2World[0].xyz;
  tmpvar_21[1] = _Object2World[1].xyz;
  tmpvar_21[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = normalize((tmpvar_21 * dir_20));
  tmpvar_22.w = tmpvar_4.w;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.www;
  mediump vec3 normal_24;
  normal_24 = tmpvar_19;
  mediump vec3 tangent_25;
  tangent_25 = tmpvar_22.xyz;
  mediump vec3 flip_26;
  flip_26 = tmpvar_23;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (((normal_24.yzx * tangent_25.zxy) - (normal_24.zxy * tangent_25.yzx)) * flip_26);
  mediump mat3 tmpvar_28;
  tmpvar_28[0].x = tangent_25.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = normal_24.x;
  tmpvar_28[1].x = tangent_25.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = normal_24.y;
  tmpvar_28[2].x = tangent_25.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = normal_24.z;
  tangentToWorld_5 = tmpvar_28;
  highp vec3 v_29;
  v_29.x = tangentToWorld_5[0].x;
  v_29.y = tangentToWorld_5[1].x;
  v_29.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].y;
  v_30.y = tangentToWorld_5[1].y;
  v_30.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].z;
  v_31.y = tangentToWorld_5[1].z;
  v_31.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_31;
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_9 = tmpvar_32;
  highp vec3 tmpvar_33;
  tmpvar_33 = (_WorldSpaceLightPos0.xyz - (tmpvar_10.xyz * _WorldSpaceLightPos0.w));
  highp float tmpvar_34;
  tmpvar_34 = tmpvar_33.x;
  tmpvar_6.w = tmpvar_34;
  highp float tmpvar_35;
  tmpvar_35 = tmpvar_33.y;
  tmpvar_7.w = tmpvar_35;
  highp float tmpvar_36;
  tmpvar_36 = tmpvar_33.z;
  tmpvar_8.w = tmpvar_36;
  gl_Position = tmpvar_11;
  xlv_TEXCOORD0 = texcoord_12;
  xlv_TEXCOORD1 = normalize(n_14);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
uniform lowp sampler2DShadow _ShadowMapTexture;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_3;
  tmpvar_3.xyz = _SpecColor.xyz;
  tmpvar_3.w = _Glossiness;
  mediump vec3 tmpvar_4;
  tmpvar_4.x = xlv_TEXCOORD2.w;
  tmpvar_4.y = xlv_TEXCOORD2_1.w;
  tmpvar_4.z = xlv_TEXCOORD2_2.w;
  lowp float shadow_5;
  lowp float tmpvar_6;
  tmpvar_6 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD5.xyz);
  mediump float tmpvar_7;
  tmpvar_7 = (_LightShadowData.x + (tmpvar_6 * (1.0 - _LightShadowData.x)));
  shadow_5 = tmpvar_7;
  mediump float atten_8;
  atten_8 = shadow_5;
  mediump vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = _LightColor0.xyz;
  tmpvar_9 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_9 * atten_8);
  tmpvar_9 = tmpvar_11;
  mediump vec3 viewDir_12;
  viewDir_12 = -(xlv_TEXCOORD1);
  mediump vec2 tmpvar_13;
  tmpvar_13.x = dot ((viewDir_12 - (2.0 * 
    (dot (tmpvar_1, viewDir_12) * tmpvar_1)
  )), tmpvar_4);
  tmpvar_13.y = (1.0 - clamp (dot (tmpvar_1, viewDir_12), 0.0, 1.0));
  mediump vec2 tmpvar_14;
  tmpvar_14.x = (((tmpvar_13 * tmpvar_13) * tmpvar_13) * tmpvar_13).x;
  tmpvar_14.y = (1.0 - _Glossiness);
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (unity_NHxRoughness, tmpvar_14);
  mediump vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (((
    ((_Color.xyz * cse_2.xyz) * (1.0 - tmpvar_3.x))
   + 
    ((tmpvar_15.w * 16.0) * tmpvar_3.xyz)
  ) * tmpvar_11) * clamp (dot (tmpvar_1, tmpvar_4), 0.0, 1.0));
  mediump vec4 xlat_varoutput_17;
  xlat_varoutput_17.xyz = tmpvar_16.xyz;
  xlat_varoutput_17.w = 1.0;
  gl_FragData[0] = xlat_varoutput_17;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_11;
  tmpvar_11 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_12;
  texcoord_12.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_13;
  if ((_UVSec == 0.0)) {
    tmpvar_13 = tmpvar_2;
  } else {
    tmpvar_13 = tmpvar_3;
  };
  texcoord_12.zw = ((tmpvar_13 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_14;
  n_14 = (tmpvar_10.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_15;
  norm_15 = tmpvar_1;
  highp vec4 v_16;
  v_16.x = _World2Object[0].x;
  v_16.y = _World2Object[1].x;
  v_16.z = _World2Object[2].x;
  v_16.w = _World2Object[3].x;
  highp vec4 v_17;
  v_17.x = _World2Object[0].y;
  v_17.y = _World2Object[1].y;
  v_17.z = _World2Object[2].y;
  v_17.w = _World2Object[3].y;
  highp vec4 v_18;
  v_18.x = _World2Object[0].z;
  v_18.y = _World2Object[1].z;
  v_18.z = _World2Object[2].z;
  v_18.w = _World2Object[3].z;
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(((
    (v_16.xyz * norm_15.x)
   + 
    (v_17.xyz * norm_15.y)
  ) + (v_18.xyz * norm_15.z)));
  highp vec3 dir_20;
  dir_20 = tmpvar_4.xyz;
  highp mat3 tmpvar_21;
  tmpvar_21[0] = _Object2World[0].xyz;
  tmpvar_21[1] = _Object2World[1].xyz;
  tmpvar_21[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_22;
  tmpvar_22.xyz = normalize((tmpvar_21 * dir_20));
  tmpvar_22.w = tmpvar_4.w;
  highp vec3 tmpvar_23;
  tmpvar_23 = tmpvar_22.www;
  mediump vec3 normal_24;
  normal_24 = tmpvar_19;
  mediump vec3 tangent_25;
  tangent_25 = tmpvar_22.xyz;
  mediump vec3 flip_26;
  flip_26 = tmpvar_23;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (((normal_24.yzx * tangent_25.zxy) - (normal_24.zxy * tangent_25.yzx)) * flip_26);
  mediump mat3 tmpvar_28;
  tmpvar_28[0].x = tangent_25.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = normal_24.x;
  tmpvar_28[1].x = tangent_25.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = normal_24.y;
  tmpvar_28[2].x = tangent_25.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = normal_24.z;
  tangentToWorld_5 = tmpvar_28;
  highp vec3 v_29;
  v_29.x = tangentToWorld_5[0].x;
  v_29.y = tangentToWorld_5[1].x;
  v_29.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].y;
  v_30.y = tangentToWorld_5[1].y;
  v_30.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].z;
  v_31.y = tangentToWorld_5[1].z;
  v_31.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_31;
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
  tmpvar_9 = tmpvar_32;
  highp vec3 tmpvar_33;
  tmpvar_33 = (_WorldSpaceLightPos0.xyz - (tmpvar_10.xyz * _WorldSpaceLightPos0.w));
  highp float tmpvar_34;
  tmpvar_34 = tmpvar_33.x;
  tmpvar_6.w = tmpvar_34;
  highp float tmpvar_35;
  tmpvar_35 = tmpvar_33.y;
  tmpvar_7.w = tmpvar_35;
  highp float tmpvar_36;
  tmpvar_36 = tmpvar_33.z;
  tmpvar_8.w = tmpvar_36;
  gl_Position = tmpvar_11;
  xlv_TEXCOORD0 = texcoord_12;
  xlv_TEXCOORD1 = normalize(n_14);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
uniform lowp sampler2DShadow _ShadowMapTexture;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec4 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_3;
  tmpvar_3.xyz = _SpecColor.xyz;
  tmpvar_3.w = _Glossiness;
  mediump vec3 tmpvar_4;
  tmpvar_4.x = xlv_TEXCOORD2.w;
  tmpvar_4.y = xlv_TEXCOORD2_1.w;
  tmpvar_4.z = xlv_TEXCOORD2_2.w;
  lowp float shadow_5;
  mediump float tmpvar_6;
  tmpvar_6 = texture (_ShadowMapTexture, xlv_TEXCOORD5.xyz);
  lowp float tmpvar_7;
  tmpvar_7 = tmpvar_6;
  mediump float tmpvar_8;
  tmpvar_8 = (_LightShadowData.x + (tmpvar_7 * (1.0 - _LightShadowData.x)));
  shadow_5 = tmpvar_8;
  mediump float atten_9;
  atten_9 = shadow_5;
  mediump vec3 tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = _LightColor0.xyz;
  tmpvar_10 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_10 * atten_9);
  tmpvar_10 = tmpvar_12;
  mediump vec3 viewDir_13;
  viewDir_13 = -(xlv_TEXCOORD1);
  mediump vec2 tmpvar_14;
  tmpvar_14.x = dot ((viewDir_13 - (2.0 * 
    (dot (tmpvar_1, viewDir_13) * tmpvar_1)
  )), tmpvar_4);
  tmpvar_14.y = (1.0 - clamp (dot (tmpvar_1, viewDir_13), 0.0, 1.0));
  mediump vec2 tmpvar_15;
  tmpvar_15.x = (((tmpvar_14 * tmpvar_14) * tmpvar_14) * tmpvar_14).x;
  tmpvar_15.y = (1.0 - _Glossiness);
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture (unity_NHxRoughness, tmpvar_15);
  mediump vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = (((
    ((_Color.xyz * cse_2.xyz) * (1.0 - tmpvar_3.x))
   + 
    ((tmpvar_16.w * 16.0) * tmpvar_3.xyz)
  ) * tmpvar_12) * clamp (dot (tmpvar_1, tmpvar_4), 0.0, 1.0));
  mediump vec4 xlat_varoutput_18;
  xlat_varoutput_18.xyz = tmpvar_17.xyz;
  xlat_varoutput_18.w = 1.0;
  _glesFragData[0] = xlat_varoutput_18;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "SHADOWS_NATIVE" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
uniform mediump mat4 _LightMatrix0;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec2 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec2 tmpvar_9;
  mediump vec4 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_5 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].x;
  v_30.y = tangentToWorld_5[1].x;
  v_30.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].y;
  v_31.y = tangentToWorld_5[1].y;
  v_31.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_5[0].z;
  v_32.y = tangentToWorld_5[1].z;
  v_32.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_32;
  highp vec2 tmpvar_33;
  highp vec4 cse_34;
  cse_34 = (_Object2World * _glesVertex);
  tmpvar_33 = (_LightMatrix0 * cse_34).xy;
  tmpvar_9 = tmpvar_33;
  highp vec4 tmpvar_35;
  tmpvar_35 = (unity_World2Shadow[0] * cse_34);
  tmpvar_10 = tmpvar_35;
  highp vec3 tmpvar_36;
  tmpvar_36 = (_WorldSpaceLightPos0.xyz - (tmpvar_11.xyz * _WorldSpaceLightPos0.w));
  highp float tmpvar_37;
  tmpvar_37 = tmpvar_36.x;
  tmpvar_6.w = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = tmpvar_36.y;
  tmpvar_7.w = tmpvar_38;
  highp float tmpvar_39;
  tmpvar_39 = tmpvar_36.z;
  tmpvar_8.w = tmpvar_39;
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _LightTexture0;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec2 xlv_TEXCOORD5;
varying mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_3;
  tmpvar_3.xyz = _SpecColor.xyz;
  tmpvar_3.w = _Glossiness;
  mediump vec3 tmpvar_4;
  tmpvar_4.x = xlv_TEXCOORD2.w;
  tmpvar_4.y = xlv_TEXCOORD2_1.w;
  tmpvar_4.z = xlv_TEXCOORD2_2.w;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_LightTexture0, xlv_TEXCOORD5);
  lowp float shadow_6;
  lowp float tmpvar_7;
  tmpvar_7 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  mediump float tmpvar_8;
  tmpvar_8 = (_LightShadowData.x + (tmpvar_7 * (1.0 - _LightShadowData.x)));
  shadow_6 = tmpvar_8;
  mediump float atten_9;
  atten_9 = (tmpvar_5.w * shadow_6);
  mediump vec3 tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = _LightColor0.xyz;
  tmpvar_10 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_10 * atten_9);
  tmpvar_10 = tmpvar_12;
  mediump vec3 viewDir_13;
  viewDir_13 = -(xlv_TEXCOORD1);
  mediump vec2 tmpvar_14;
  tmpvar_14.x = dot ((viewDir_13 - (2.0 * 
    (dot (tmpvar_1, viewDir_13) * tmpvar_1)
  )), tmpvar_4);
  tmpvar_14.y = (1.0 - clamp (dot (tmpvar_1, viewDir_13), 0.0, 1.0));
  mediump vec2 tmpvar_15;
  tmpvar_15.x = (((tmpvar_14 * tmpvar_14) * tmpvar_14) * tmpvar_14).x;
  tmpvar_15.y = (1.0 - _Glossiness);
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (unity_NHxRoughness, tmpvar_15);
  mediump vec4 tmpvar_17;
  tmpvar_17.w = 1.0;
  tmpvar_17.xyz = (((
    ((_Color.xyz * cse_2.xyz) * (1.0 - tmpvar_3.x))
   + 
    ((tmpvar_16.w * 16.0) * tmpvar_3.xyz)
  ) * tmpvar_12) * clamp (dot (tmpvar_1, tmpvar_4), 0.0, 1.0));
  mediump vec4 xlat_varoutput_18;
  xlat_varoutput_18.xyz = tmpvar_17.xyz;
  xlat_varoutput_18.w = 1.0;
  gl_FragData[0] = xlat_varoutput_18;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "SHADOWS_NATIVE" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
uniform mediump mat4 _LightMatrix0;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec2 xlv_TEXCOORD5;
out mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec2 tmpvar_9;
  mediump vec4 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_5 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].x;
  v_30.y = tangentToWorld_5[1].x;
  v_30.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_5[0].y;
  v_31.y = tangentToWorld_5[1].y;
  v_31.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_5[0].z;
  v_32.y = tangentToWorld_5[1].z;
  v_32.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_32;
  highp vec2 tmpvar_33;
  highp vec4 cse_34;
  cse_34 = (_Object2World * _glesVertex);
  tmpvar_33 = (_LightMatrix0 * cse_34).xy;
  tmpvar_9 = tmpvar_33;
  highp vec4 tmpvar_35;
  tmpvar_35 = (unity_World2Shadow[0] * cse_34);
  tmpvar_10 = tmpvar_35;
  highp vec3 tmpvar_36;
  tmpvar_36 = (_WorldSpaceLightPos0.xyz - (tmpvar_11.xyz * _WorldSpaceLightPos0.w));
  highp float tmpvar_37;
  tmpvar_37 = tmpvar_36.x;
  tmpvar_6.w = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = tmpvar_36.y;
  tmpvar_7.w = tmpvar_38;
  highp float tmpvar_39;
  tmpvar_39 = tmpvar_36.z;
  tmpvar_8.w = tmpvar_39;
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
  xlv_TEXCOORD5 = tmpvar_9;
  xlv_TEXCOORD6 = tmpvar_10;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform mediump vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform mediump float _Glossiness;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _LightTexture0;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec2 xlv_TEXCOORD5;
in mediump vec4 xlv_TEXCOORD6;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 tmpvar_3;
  tmpvar_3.xyz = _SpecColor.xyz;
  tmpvar_3.w = _Glossiness;
  mediump vec3 tmpvar_4;
  tmpvar_4.x = xlv_TEXCOORD2.w;
  tmpvar_4.y = xlv_TEXCOORD2_1.w;
  tmpvar_4.z = xlv_TEXCOORD2_2.w;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture (_LightTexture0, xlv_TEXCOORD5);
  lowp float shadow_6;
  mediump float tmpvar_7;
  tmpvar_7 = texture (_ShadowMapTexture, xlv_TEXCOORD6.xyz);
  lowp float tmpvar_8;
  tmpvar_8 = tmpvar_7;
  mediump float tmpvar_9;
  tmpvar_9 = (_LightShadowData.x + (tmpvar_8 * (1.0 - _LightShadowData.x)));
  shadow_6 = tmpvar_9;
  mediump float atten_10;
  atten_10 = (tmpvar_5.w * shadow_6);
  mediump vec3 tmpvar_11;
  lowp vec3 tmpvar_12;
  tmpvar_12 = _LightColor0.xyz;
  tmpvar_11 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_11 * atten_10);
  tmpvar_11 = tmpvar_13;
  mediump vec3 viewDir_14;
  viewDir_14 = -(xlv_TEXCOORD1);
  mediump vec2 tmpvar_15;
  tmpvar_15.x = dot ((viewDir_14 - (2.0 * 
    (dot (tmpvar_1, viewDir_14) * tmpvar_1)
  )), tmpvar_4);
  tmpvar_15.y = (1.0 - clamp (dot (tmpvar_1, viewDir_14), 0.0, 1.0));
  mediump vec2 tmpvar_16;
  tmpvar_16.x = (((tmpvar_15 * tmpvar_15) * tmpvar_15) * tmpvar_15).x;
  tmpvar_16.y = (1.0 - _Glossiness);
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture (unity_NHxRoughness, tmpvar_16);
  mediump vec4 tmpvar_18;
  tmpvar_18.w = 1.0;
  tmpvar_18.xyz = (((
    ((_Color.xyz * cse_2.xyz) * (1.0 - tmpvar_3.x))
   + 
    ((tmpvar_17.w * 16.0) * tmpvar_3.xyz)
  ) * tmpvar_13) * clamp (dot (tmpvar_1, tmpvar_4), 0.0, 1.0));
  mediump vec4 xlat_varoutput_19;
  xlat_varoutput_19.xyz = tmpvar_18.xyz;
  xlat_varoutput_19.w = 1.0;
  _glesFragData[0] = xlat_varoutput_19;
}



#endif"
}
SubProgram "gles " {
Keywords { "POINT" "SHADOWS_OFF" "_SPECGLOSSMAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
uniform mediump mat4 _LightMatrix0;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp vec3 lightDir_5;
  highp mat3 tangentToWorld_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec3 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_6 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_6[0].x;
  v_30.y = tangentToWorld_6[1].x;
  v_30.z = tangentToWorld_6[2].x;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_6[0].y;
  v_31.y = tangentToWorld_6[1].y;
  v_31.z = tangentToWorld_6[2].y;
  tmpvar_8.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_6[0].z;
  v_32.y = tangentToWorld_6[1].z;
  v_32.z = tangentToWorld_6[2].z;
  tmpvar_9.xyz = v_32;
  highp vec3 tmpvar_33;
  tmpvar_33 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
  tmpvar_10 = tmpvar_33;
  highp vec3 tmpvar_34;
  tmpvar_34 = (_WorldSpaceLightPos0.xyz - (tmpvar_11.xyz * _WorldSpaceLightPos0.w));
  mediump vec3 n_35;
  n_35 = tmpvar_34;
  mediump vec3 tmpvar_36;
  tmpvar_36 = normalize(n_35);
  lightDir_5 = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = lightDir_5.x;
  tmpvar_7.w = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = lightDir_5.y;
  tmpvar_8.w = tmpvar_38;
  highp float tmpvar_39;
  tmpvar_39 = lightDir_5.z;
  tmpvar_9.w = tmpvar_39;
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD2_1 = tmpvar_8;
  xlv_TEXCOORD2_2 = tmpvar_9;
  xlv_TEXCOORD5 = tmpvar_10;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _LightTexture0;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
varying mediump vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 sg_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_3 = tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_5.x = xlv_TEXCOORD2.w;
  tmpvar_5.y = xlv_TEXCOORD2_1.w;
  tmpvar_5.z = xlv_TEXCOORD2_2.w;
  mediump float tmpvar_6;
  tmpvar_6 = dot (xlv_TEXCOORD5, xlv_TEXCOORD5);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture2D (_LightTexture0, vec2(tmpvar_6));
  mediump float atten_8;
  atten_8 = tmpvar_7.w;
  mediump vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = _LightColor0.xyz;
  tmpvar_9 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_9 * atten_8);
  tmpvar_9 = tmpvar_11;
  mediump vec3 viewDir_12;
  viewDir_12 = -(xlv_TEXCOORD1);
  mediump vec2 tmpvar_13;
  tmpvar_13.x = dot ((viewDir_12 - (2.0 * 
    (dot (tmpvar_1, viewDir_12) * tmpvar_1)
  )), tmpvar_5);
  tmpvar_13.y = (1.0 - clamp (dot (tmpvar_1, viewDir_12), 0.0, 1.0));
  mediump vec2 tmpvar_14;
  tmpvar_14.x = (((tmpvar_13 * tmpvar_13) * tmpvar_13) * tmpvar_13).x;
  tmpvar_14.y = (1.0 - sg_3.w);
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (unity_NHxRoughness, tmpvar_14);
  mediump vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (((
    ((_Color.xyz * cse_2.xyz) * (1.0 - sg_3.x))
   + 
    ((tmpvar_15.w * 16.0) * sg_3.xyz)
  ) * tmpvar_11) * clamp (dot (tmpvar_1, tmpvar_5), 0.0, 1.0));
  mediump vec4 xlat_varoutput_17;
  xlat_varoutput_17.xyz = tmpvar_16.xyz;
  xlat_varoutput_17.w = 1.0;
  gl_FragData[0] = xlat_varoutput_17;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "POINT" "SHADOWS_OFF" "_SPECGLOSSMAP" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
uniform mediump mat4 _LightMatrix0;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
out mediump vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp vec3 lightDir_5;
  highp mat3 tangentToWorld_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  mediump vec4 tmpvar_9;
  mediump vec3 tmpvar_10;
  highp vec4 tmpvar_11;
  tmpvar_11 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_12;
  tmpvar_12 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_13;
  texcoord_13.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_14;
  if ((_UVSec == 0.0)) {
    tmpvar_14 = tmpvar_2;
  } else {
    tmpvar_14 = tmpvar_3;
  };
  texcoord_13.zw = ((tmpvar_14 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_15;
  n_15 = (tmpvar_11.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_16;
  norm_16 = tmpvar_1;
  highp vec4 v_17;
  v_17.x = _World2Object[0].x;
  v_17.y = _World2Object[1].x;
  v_17.z = _World2Object[2].x;
  v_17.w = _World2Object[3].x;
  highp vec4 v_18;
  v_18.x = _World2Object[0].y;
  v_18.y = _World2Object[1].y;
  v_18.z = _World2Object[2].y;
  v_18.w = _World2Object[3].y;
  highp vec4 v_19;
  v_19.x = _World2Object[0].z;
  v_19.y = _World2Object[1].z;
  v_19.z = _World2Object[2].z;
  v_19.w = _World2Object[3].z;
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(((
    (v_17.xyz * norm_16.x)
   + 
    (v_18.xyz * norm_16.y)
  ) + (v_19.xyz * norm_16.z)));
  highp vec3 dir_21;
  dir_21 = tmpvar_4.xyz;
  highp mat3 tmpvar_22;
  tmpvar_22[0] = _Object2World[0].xyz;
  tmpvar_22[1] = _Object2World[1].xyz;
  tmpvar_22[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_23;
  tmpvar_23.xyz = normalize((tmpvar_22 * dir_21));
  tmpvar_23.w = tmpvar_4.w;
  highp vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23.www;
  mediump vec3 normal_25;
  normal_25 = tmpvar_20;
  mediump vec3 tangent_26;
  tangent_26 = tmpvar_23.xyz;
  mediump vec3 flip_27;
  flip_27 = tmpvar_24;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (((normal_25.yzx * tangent_26.zxy) - (normal_25.zxy * tangent_26.yzx)) * flip_27);
  mediump mat3 tmpvar_29;
  tmpvar_29[0].x = tangent_26.x;
  tmpvar_29[0].y = tmpvar_28.x;
  tmpvar_29[0].z = normal_25.x;
  tmpvar_29[1].x = tangent_26.y;
  tmpvar_29[1].y = tmpvar_28.y;
  tmpvar_29[1].z = normal_25.y;
  tmpvar_29[2].x = tangent_26.z;
  tmpvar_29[2].y = tmpvar_28.z;
  tmpvar_29[2].z = normal_25.z;
  tangentToWorld_6 = tmpvar_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_6[0].x;
  v_30.y = tangentToWorld_6[1].x;
  v_30.z = tangentToWorld_6[2].x;
  tmpvar_7.xyz = v_30;
  highp vec3 v_31;
  v_31.x = tangentToWorld_6[0].y;
  v_31.y = tangentToWorld_6[1].y;
  v_31.z = tangentToWorld_6[2].y;
  tmpvar_8.xyz = v_31;
  highp vec3 v_32;
  v_32.x = tangentToWorld_6[0].z;
  v_32.y = tangentToWorld_6[1].z;
  v_32.z = tangentToWorld_6[2].z;
  tmpvar_9.xyz = v_32;
  highp vec3 tmpvar_33;
  tmpvar_33 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
  tmpvar_10 = tmpvar_33;
  highp vec3 tmpvar_34;
  tmpvar_34 = (_WorldSpaceLightPos0.xyz - (tmpvar_11.xyz * _WorldSpaceLightPos0.w));
  mediump vec3 n_35;
  n_35 = tmpvar_34;
  mediump vec3 tmpvar_36;
  tmpvar_36 = normalize(n_35);
  lightDir_5 = tmpvar_36;
  highp float tmpvar_37;
  tmpvar_37 = lightDir_5.x;
  tmpvar_7.w = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = lightDir_5.y;
  tmpvar_8.w = tmpvar_38;
  highp float tmpvar_39;
  tmpvar_39 = lightDir_5.z;
  tmpvar_9.w = tmpvar_39;
  gl_Position = tmpvar_12;
  xlv_TEXCOORD0 = texcoord_13;
  xlv_TEXCOORD1 = normalize(n_15);
  xlv_TEXCOORD2 = tmpvar_7;
  xlv_TEXCOORD2_1 = tmpvar_8;
  xlv_TEXCOORD2_2 = tmpvar_9;
  xlv_TEXCOORD5 = tmpvar_10;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _SpecGlossMap;
uniform sampler2D _LightTexture0;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
in mediump vec3 xlv_TEXCOORD5;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 sg_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_3 = tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_5.x = xlv_TEXCOORD2.w;
  tmpvar_5.y = xlv_TEXCOORD2_1.w;
  tmpvar_5.z = xlv_TEXCOORD2_2.w;
  mediump float tmpvar_6;
  tmpvar_6 = dot (xlv_TEXCOORD5, xlv_TEXCOORD5);
  lowp vec4 tmpvar_7;
  tmpvar_7 = texture (_LightTexture0, vec2(tmpvar_6));
  mediump float atten_8;
  atten_8 = tmpvar_7.w;
  mediump vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  tmpvar_10 = _LightColor0.xyz;
  tmpvar_9 = tmpvar_10;
  mediump vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_9 * atten_8);
  tmpvar_9 = tmpvar_11;
  mediump vec3 viewDir_12;
  viewDir_12 = -(xlv_TEXCOORD1);
  mediump vec2 tmpvar_13;
  tmpvar_13.x = dot ((viewDir_12 - (2.0 * 
    (dot (tmpvar_1, viewDir_12) * tmpvar_1)
  )), tmpvar_5);
  tmpvar_13.y = (1.0 - clamp (dot (tmpvar_1, viewDir_12), 0.0, 1.0));
  mediump vec2 tmpvar_14;
  tmpvar_14.x = (((tmpvar_13 * tmpvar_13) * tmpvar_13) * tmpvar_13).x;
  tmpvar_14.y = (1.0 - sg_3.w);
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture (unity_NHxRoughness, tmpvar_14);
  mediump vec4 tmpvar_16;
  tmpvar_16.w = 1.0;
  tmpvar_16.xyz = (((
    ((_Color.xyz * cse_2.xyz) * (1.0 - sg_3.x))
   + 
    ((tmpvar_15.w * 16.0) * sg_3.xyz)
  ) * tmpvar_11) * clamp (dot (tmpvar_1, tmpvar_5), 0.0, 1.0));
  mediump vec4 xlat_varoutput_17;
  xlat_varoutput_17.xyz = tmpvar_16.xyz;
  xlat_varoutput_17.w = 1.0;
  _glesFragData[0] = xlat_varoutput_17;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "_SPECGLOSSMAP" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_10;
  tmpvar_10 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_11;
  texcoord_11.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_12;
  if ((_UVSec == 0.0)) {
    tmpvar_12 = tmpvar_2;
  } else {
    tmpvar_12 = tmpvar_3;
  };
  texcoord_11.zw = ((tmpvar_12 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_13;
  n_13 = (tmpvar_9.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_14;
  norm_14 = tmpvar_1;
  highp vec4 v_15;
  v_15.x = _World2Object[0].x;
  v_15.y = _World2Object[1].x;
  v_15.z = _World2Object[2].x;
  v_15.w = _World2Object[3].x;
  highp vec4 v_16;
  v_16.x = _World2Object[0].y;
  v_16.y = _World2Object[1].y;
  v_16.z = _World2Object[2].y;
  v_16.w = _World2Object[3].y;
  highp vec4 v_17;
  v_17.x = _World2Object[0].z;
  v_17.y = _World2Object[1].z;
  v_17.z = _World2Object[2].z;
  v_17.w = _World2Object[3].z;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(((
    (v_15.xyz * norm_14.x)
   + 
    (v_16.xyz * norm_14.y)
  ) + (v_17.xyz * norm_14.z)));
  highp vec3 dir_19;
  dir_19 = tmpvar_4.xyz;
  highp mat3 tmpvar_20;
  tmpvar_20[0] = _Object2World[0].xyz;
  tmpvar_20[1] = _Object2World[1].xyz;
  tmpvar_20[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_21;
  tmpvar_21.xyz = normalize((tmpvar_20 * dir_19));
  tmpvar_21.w = tmpvar_4.w;
  highp vec3 tmpvar_22;
  tmpvar_22 = tmpvar_21.www;
  mediump vec3 normal_23;
  normal_23 = tmpvar_18;
  mediump vec3 tangent_24;
  tangent_24 = tmpvar_21.xyz;
  mediump vec3 flip_25;
  flip_25 = tmpvar_22;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (((normal_23.yzx * tangent_24.zxy) - (normal_23.zxy * tangent_24.yzx)) * flip_25);
  mediump mat3 tmpvar_27;
  tmpvar_27[0].x = tangent_24.x;
  tmpvar_27[0].y = tmpvar_26.x;
  tmpvar_27[0].z = normal_23.x;
  tmpvar_27[1].x = tangent_24.y;
  tmpvar_27[1].y = tmpvar_26.y;
  tmpvar_27[1].z = normal_23.y;
  tmpvar_27[2].x = tangent_24.z;
  tmpvar_27[2].y = tmpvar_26.z;
  tmpvar_27[2].z = normal_23.z;
  tangentToWorld_5 = tmpvar_27;
  highp vec3 v_28;
  v_28.x = tangentToWorld_5[0].x;
  v_28.y = tangentToWorld_5[1].x;
  v_28.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_28;
  highp vec3 v_29;
  v_29.x = tangentToWorld_5[0].y;
  v_29.y = tangentToWorld_5[1].y;
  v_29.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].z;
  v_30.y = tangentToWorld_5[1].z;
  v_30.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_30;
  highp vec3 tmpvar_31;
  tmpvar_31 = (_WorldSpaceLightPos0.xyz - (tmpvar_9.xyz * _WorldSpaceLightPos0.w));
  highp float tmpvar_32;
  tmpvar_32 = tmpvar_31.x;
  tmpvar_6.w = tmpvar_32;
  highp float tmpvar_33;
  tmpvar_33 = tmpvar_31.y;
  tmpvar_7.w = tmpvar_33;
  highp float tmpvar_34;
  tmpvar_34 = tmpvar_31.z;
  tmpvar_8.w = tmpvar_34;
  gl_Position = tmpvar_10;
  xlv_TEXCOORD0 = texcoord_11;
  xlv_TEXCOORD1 = normalize(n_13);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _SpecGlossMap;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec4 xlv_TEXCOORD2;
varying mediump vec4 xlv_TEXCOORD2_1;
varying mediump vec4 xlv_TEXCOORD2_2;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 sg_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture2D (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_3 = tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_5.x = xlv_TEXCOORD2.w;
  tmpvar_5.y = xlv_TEXCOORD2_1.w;
  tmpvar_5.z = xlv_TEXCOORD2_2.w;
  mediump vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = _LightColor0.xyz;
  tmpvar_6 = tmpvar_7;
  mediump vec3 viewDir_8;
  viewDir_8 = -(xlv_TEXCOORD1);
  mediump vec2 tmpvar_9;
  tmpvar_9.x = dot ((viewDir_8 - (2.0 * 
    (dot (tmpvar_1, viewDir_8) * tmpvar_1)
  )), tmpvar_5);
  tmpvar_9.y = (1.0 - clamp (dot (tmpvar_1, viewDir_8), 0.0, 1.0));
  mediump vec2 tmpvar_10;
  tmpvar_10.x = (((tmpvar_9 * tmpvar_9) * tmpvar_9) * tmpvar_9).x;
  tmpvar_10.y = (1.0 - sg_3.w);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (unity_NHxRoughness, tmpvar_10);
  mediump vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = (((
    ((_Color.xyz * cse_2.xyz) * (1.0 - sg_3.x))
   + 
    ((tmpvar_11.w * 16.0) * sg_3.xyz)
  ) * tmpvar_6) * clamp (dot (tmpvar_1, tmpvar_5), 0.0, 1.0));
  mediump vec4 xlat_varoutput_13;
  xlat_varoutput_13.xyz = tmpvar_12.xyz;
  xlat_varoutput_13.w = 1.0;
  gl_FragData[0] = xlat_varoutput_13;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "_SPECGLOSSMAP" }
"!!GLES3#version 300 es


#ifdef VERTEX


in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform mediump vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _DetailAlbedoMap_ST;
uniform mediump float _UVSec;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec4 xlv_TEXCOORD2;
out mediump vec4 xlv_TEXCOORD2_1;
out mediump vec4 xlv_TEXCOORD2_2;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = _glesNormal;
  highp vec2 tmpvar_2;
  tmpvar_2 = _glesMultiTexCoord0.xy;
  highp vec2 tmpvar_3;
  tmpvar_3 = _glesMultiTexCoord1.xy;
  mediump vec4 tmpvar_4;
  tmpvar_4 = _glesTANGENT;
  highp mat3 tangentToWorld_5;
  mediump vec4 tmpvar_6;
  mediump vec4 tmpvar_7;
  mediump vec4 tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9 = (_Object2World * _glesVertex);
  highp vec4 tmpvar_10;
  tmpvar_10 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 texcoord_11;
  texcoord_11.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  highp vec2 tmpvar_12;
  if ((_UVSec == 0.0)) {
    tmpvar_12 = tmpvar_2;
  } else {
    tmpvar_12 = tmpvar_3;
  };
  texcoord_11.zw = ((tmpvar_12 * _DetailAlbedoMap_ST.xy) + _DetailAlbedoMap_ST.zw);
  mediump vec3 n_13;
  n_13 = (tmpvar_9.xyz - _WorldSpaceCameraPos);
  highp vec3 norm_14;
  norm_14 = tmpvar_1;
  highp vec4 v_15;
  v_15.x = _World2Object[0].x;
  v_15.y = _World2Object[1].x;
  v_15.z = _World2Object[2].x;
  v_15.w = _World2Object[3].x;
  highp vec4 v_16;
  v_16.x = _World2Object[0].y;
  v_16.y = _World2Object[1].y;
  v_16.z = _World2Object[2].y;
  v_16.w = _World2Object[3].y;
  highp vec4 v_17;
  v_17.x = _World2Object[0].z;
  v_17.y = _World2Object[1].z;
  v_17.z = _World2Object[2].z;
  v_17.w = _World2Object[3].z;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(((
    (v_15.xyz * norm_14.x)
   + 
    (v_16.xyz * norm_14.y)
  ) + (v_17.xyz * norm_14.z)));
  highp vec3 dir_19;
  dir_19 = tmpvar_4.xyz;
  highp mat3 tmpvar_20;
  tmpvar_20[0] = _Object2World[0].xyz;
  tmpvar_20[1] = _Object2World[1].xyz;
  tmpvar_20[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_21;
  tmpvar_21.xyz = normalize((tmpvar_20 * dir_19));
  tmpvar_21.w = tmpvar_4.w;
  highp vec3 tmpvar_22;
  tmpvar_22 = tmpvar_21.www;
  mediump vec3 normal_23;
  normal_23 = tmpvar_18;
  mediump vec3 tangent_24;
  tangent_24 = tmpvar_21.xyz;
  mediump vec3 flip_25;
  flip_25 = tmpvar_22;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (((normal_23.yzx * tangent_24.zxy) - (normal_23.zxy * tangent_24.yzx)) * flip_25);
  mediump mat3 tmpvar_27;
  tmpvar_27[0].x = tangent_24.x;
  tmpvar_27[0].y = tmpvar_26.x;
  tmpvar_27[0].z = normal_23.x;
  tmpvar_27[1].x = tangent_24.y;
  tmpvar_27[1].y = tmpvar_26.y;
  tmpvar_27[1].z = normal_23.y;
  tmpvar_27[2].x = tangent_24.z;
  tmpvar_27[2].y = tmpvar_26.z;
  tmpvar_27[2].z = normal_23.z;
  tangentToWorld_5 = tmpvar_27;
  highp vec3 v_28;
  v_28.x = tangentToWorld_5[0].x;
  v_28.y = tangentToWorld_5[1].x;
  v_28.z = tangentToWorld_5[2].x;
  tmpvar_6.xyz = v_28;
  highp vec3 v_29;
  v_29.x = tangentToWorld_5[0].y;
  v_29.y = tangentToWorld_5[1].y;
  v_29.z = tangentToWorld_5[2].y;
  tmpvar_7.xyz = v_29;
  highp vec3 v_30;
  v_30.x = tangentToWorld_5[0].z;
  v_30.y = tangentToWorld_5[1].z;
  v_30.z = tangentToWorld_5[2].z;
  tmpvar_8.xyz = v_30;
  highp vec3 tmpvar_31;
  tmpvar_31 = (_WorldSpaceLightPos0.xyz - (tmpvar_9.xyz * _WorldSpaceLightPos0.w));
  highp float tmpvar_32;
  tmpvar_32 = tmpvar_31.x;
  tmpvar_6.w = tmpvar_32;
  highp float tmpvar_33;
  tmpvar_33 = tmpvar_31.y;
  tmpvar_7.w = tmpvar_33;
  highp float tmpvar_34;
  tmpvar_34 = tmpvar_31.z;
  tmpvar_8.w = tmpvar_34;
  gl_Position = tmpvar_10;
  xlv_TEXCOORD0 = texcoord_11;
  xlv_TEXCOORD1 = normalize(n_13);
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD2_1 = tmpvar_7;
  xlv_TEXCOORD2_2 = tmpvar_8;
}



#endif
#ifdef FRAGMENT


layout(location=0) out mediump vec4 _glesFragData[4];
uniform lowp vec4 _LightColor0;
uniform sampler2D unity_NHxRoughness;
uniform mediump vec4 _Color;
uniform sampler2D _MainTex;
uniform sampler2D _SpecGlossMap;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec4 xlv_TEXCOORD2;
in mediump vec4 xlv_TEXCOORD2_1;
in mediump vec4 xlv_TEXCOORD2_2;
void main ()
{
  mediump vec3 tmpvar_1;
  tmpvar_1 = normalize(xlv_TEXCOORD2_2.xyz);
  lowp vec4 cse_2;
  cse_2 = texture (_MainTex, xlv_TEXCOORD0.xy);
  mediump vec4 sg_3;
  lowp vec4 tmpvar_4;
  tmpvar_4 = texture (_SpecGlossMap, xlv_TEXCOORD0.xy);
  sg_3 = tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_5.x = xlv_TEXCOORD2.w;
  tmpvar_5.y = xlv_TEXCOORD2_1.w;
  tmpvar_5.z = xlv_TEXCOORD2_2.w;
  mediump vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = _LightColor0.xyz;
  tmpvar_6 = tmpvar_7;
  mediump vec3 viewDir_8;
  viewDir_8 = -(xlv_TEXCOORD1);
  mediump vec2 tmpvar_9;
  tmpvar_9.x = dot ((viewDir_8 - (2.0 * 
    (dot (tmpvar_1, viewDir_8) * tmpvar_1)
  )), tmpvar_5);
  tmpvar_9.y = (1.0 - clamp (dot (tmpvar_1, viewDir_8), 0.0, 1.0));
  mediump vec2 tmpvar_10;
  tmpvar_10.x = (((tmpvar_9 * tmpvar_9) * tmpvar_9) * tmpvar_9).x;
  tmpvar_10.y = (1.0 - sg_3.w);
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture (unity_NHxRoughness, tmpvar_10);
  mediump vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = (((
    ((_Color.xyz * 